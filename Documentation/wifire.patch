diff -ruN /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/custom_http_app.c /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/custom_http_app.c
--- /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/custom_http_app.c	2015-05-13 00:18:06.000000000 -0400
+++ /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/custom_http_app.c	2015-08-08 20:41:07.655121700 -0400
@@ -91,7 +91,6 @@
     #endif
 #endif
 
-
 static DRV_WIFI_SCAN_RESULT bssDesc;
 static bool bssDescIsValid = false;
 
@@ -1738,9 +1737,9 @@
         case 1:
             num = BSP_SwitchStateGet(APP_TCPIP_SWITCH_2);
             break;
-        case 2:
-            num = BSP_SwitchStateGet(APP_TCPIP_SWITCH_3);
-            break;
+//        case 2:
+//            num = BSP_SwitchStateGet(APP_TCPIP_SWITCH_3);
+//            break;
         default:
             num = 0;
     }
@@ -2081,6 +2080,7 @@
         httpNetData.netConfig.powerMode = TCPIP_STACK_IF_POWER_FULL;
         // httpNetData.netConfig.startFlags should be already set;
         //
+
         TCPIP_STACK_NetDown(httpNetData.currNet);
         TCPIP_STACK_NetUp(httpNetData.currNet, &httpNetData.netConfig);
     }
diff -ruN /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/configuration.xml /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/configuration.xml
--- /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/configuration.xml	1969-12-31 19:00:00.000000000 -0500
+++ /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/configuration.xml	2015-08-08 19:24:03.377628100 -0400
@@ -0,0 +1,1015 @@
+<?xml version="1.0" encoding="UTF-8" standalone="no"?>
+<configuration version="1.0.4.22">
+  <Designer>
+    <Screens height="200" width="320">
+      <Screen active="true" background="000000" export="true" name="Untitled" primary="true">
+        <Objects/>
+      </Screen>
+    </Screens>
+    <Schemes>
+      <Scheme name="default">
+        <Alpha>255</Alpha>
+        <BackgroundOffset>0,0</BackgroundOffset>
+        <EmbossSize>3</EmbossSize>
+        <Colors>
+          <Primary>FFFFFF</Primary>
+          <Secondary>404040</Secondary>
+          <Disabled>C0C0C0</Disabled>
+          <Background>000000</Background>
+          <EmbossLight>C0C0C0</EmbossLight>
+          <EmbossDark>404040</EmbossDark>
+          <TextPrimary>000000</TextPrimary>
+          <TextSecondary>FFFFFF</TextSecondary>
+          <TextDisabled>404040</TextDisabled>
+        </Colors>
+      </Scheme>
+    </Schemes>
+  </Designer>
+  <General>
+    <HarmonyPath path="../../.."/>
+    <ForceOptimization flag="false"/>
+  </General>
+  <Manifest>
+    <Files>
+      <File>
+        <Name>http_manager.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>sys_command.h</Name>
+        <Path>Header Files/framework/system/command</Path>
+      </File>
+      <File>
+        <Name>portable.h</Name>
+        <Path>Header Files/FreeRTOS</Path>
+      </File>
+      <File>
+        <Name>bsp_sys_init.c</Name>
+        <Path>Source Files/bsp/pic32mz_wifire</Path>
+      </File>
+      <File>
+        <Name>ipv4.c</Name>
+        <Path>Source Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>tcpip_helpers_private.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>http_private.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>drv_nvm_erasewrite.c</Name>
+        <Path>Source Files/framework/driver/nvm/src/dynamic</Path>
+      </File>
+      <File>
+        <Name>dhcp_private.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_mac.h</Name>
+        <Path>Header Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>zero_conf_link_local_private.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>arp.h</Name>
+        <Path>Header Files/framework/tcpip</Path>
+      </File>
+      <File>
+        <Name>sys_int.h</Name>
+        <Path>Header Files/framework/system/int</Path>
+      </File>
+      <File>
+        <Name>sys_debug.h</Name>
+        <Path>Header Files/framework/system/debug</Path>
+      </File>
+      <File>
+        <Name>tcpip_heap_alloc.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>sys_devcon_cache.h</Name>
+        <Path>Header Files/framework/system/devcon</Path>
+      </File>
+      <File>
+        <Name>drv_spi_sys_queue_local_fifo.h</Name>
+        <Path>Header Files/framework/driver/spi/private</Path>
+      </File>
+      <File>
+        <Name>hash_fnv.c</Name>
+        <Path>Source Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_update_firmware_uart.c</Name>
+        <Path>Source Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>portmacro.h</Name>
+        <Path>Header Files/FreeRTOS/portable/MPLAB/PIC32MZ</Path>
+      </File>
+      <File>
+        <Name>tcpip_heap_alloc.c</Name>
+        <Path>Source Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>hashes.h</Name>
+        <Path>Header Files/framework/tcpip/common</Path>
+      </File>
+      <File>
+        <Name>bsp_config.h</Name>
+        <Path>Header Files/bsp/pic32mz_wifire</Path>
+      </File>
+      <File>
+        <Name>sys_module.h</Name>
+        <Path>Header Files/framework/system/common</Path>
+      </File>
+      <File>
+        <Name>tcpip_commands_manager.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>list.c</Name>
+        <Path>Source Files/FreeRTOS</Path>
+      </File>
+      <File>
+        <Name>sys_common.h</Name>
+        <Path>Header Files/framework/system/common</Path>
+      </File>
+      <File>
+        <Name>drv_tmr.h</Name>
+        <Path>Header Files/framework/driver/tmr</Path>
+      </File>
+      <File>
+        <Name>ipv4_private.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>event_groups.c</Name>
+        <Path>Source Files/FreeRTOS</Path>
+      </File>
+      <File>
+        <Name>drv_nvm.h</Name>
+        <Path>Header Files/framework/driver/nvm</Path>
+      </File>
+      <File>
+        <Name>croutine.h</Name>
+        <Path>Header Files/FreeRTOS</Path>
+      </File>
+      <File>
+        <Name>big_int_helper_c32.S</Name>
+        <Path>Source Files/framework/tcpip/common</Path>
+      </File>
+      <File>
+        <Name>sys_devcon.c</Name>
+        <Path>Source Files/framework/system/devcon/src</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_connection_profile.c</Name>
+        <Path>Source Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>list.h</Name>
+        <Path>Header Files/FreeRTOS</Path>
+      </File>
+      <File>
+        <Name>tcpip_types.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>link_list.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>random.c</Name>
+        <Path>Source Files/framework/crypto/src</Path>
+      </File>
+      <File>
+        <Name>tcp_private.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>semphr.h</Name>
+        <Path>Header Files/FreeRTOS</Path>
+      </File>
+      <File>
+        <Name>ipv4.h</Name>
+        <Path>Header Files/framework/tcpip</Path>
+      </File>
+      <File>
+        <Name>tcpip_helper_c32.S</Name>
+        <Path>Source Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>sys_random.h</Name>
+        <Path>Header Files/framework/system/random</Path>
+      </File>
+      <File>
+        <Name>sys_queue.c</Name>
+        <Path>Source Files/framework/system/common/src</Path>
+      </File>
+      <File>
+        <Name>udp.c</Name>
+        <Path>Source Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_tx_power.c</Name>
+        <Path>Source Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>tcpip_notify.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_priv.h</Name>
+        <Path>Header Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>arc4.h</Name>
+        <Path>Header Files/framework/crypto/src</Path>
+      </File>
+      <File>
+        <Name>sys_debug.c</Name>
+        <Path>Source Files/framework/system/debug/src</Path>
+      </File>
+      <File>
+        <Name>crypto.h</Name>
+        <Path>Header Files/framework/crypto</Path>
+      </File>
+      <File>
+        <Name>icmp_manager.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>http.c</Name>
+        <Path>Source Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>http.h</Name>
+        <Path>Header Files/framework/tcpip</Path>
+      </File>
+      <File>
+        <Name>helpers.h</Name>
+        <Path>Header Files/framework/tcpip/common</Path>
+      </File>
+      <File>
+        <Name>drv_wifi.h</Name>
+        <Path>Header Files/framework/driver/wifi/mrf24w</Path>
+      </File>
+      <File>
+        <Name>dnss.h</Name>
+        <Path>Header Files/framework/tcpip</Path>
+      </File>
+      <File>
+        <Name>projdefs.h</Name>
+        <Path>Header Files/FreeRTOS</Path>
+      </File>
+      <File>
+        <Name>nbns.h</Name>
+        <Path>Header Files/framework/tcpip</Path>
+      </File>
+      <File>
+        <Name>drv_spi.c</Name>
+        <Path>Source Files/framework/driver/spi/dynamic</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_mgmt_msg.h</Name>
+        <Path>Header Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>drv_usart_read_write.c</Name>
+        <Path>Source Files/framework/driver/usart/src/dynamic</Path>
+      </File>
+      <File>
+        <Name>sys_devcon_cache_pic32mz.S</Name>
+        <Path>Source Files/framework/system/devcon/src</Path>
+      </File>
+      <File>
+        <Name>drv_usart_buffer_queue.c</Name>
+        <Path>Source Files/framework/driver/usart/src/dynamic</Path>
+      </File>
+      <File>
+        <Name>tcpip_announce.c</Name>
+        <Path>Source Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_update_firmware_common.c</Name>
+        <Path>Source Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_connect.c</Name>
+        <Path>Source Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>tcpip_manager.c</Name>
+        <Path>Source Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_client_table.h</Name>
+        <Path>Header Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_spi.h</Name>
+        <Path>Header Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>big_int.h</Name>
+        <Path>Header Files/framework/tcpip/common</Path>
+      </File>
+      <File>
+        <Name>sys_fs.h</Name>
+        <Path>Header Files/framework/system/fs</Path>
+      </File>
+      <File>
+        <Name>dns.h</Name>
+        <Path>Header Files/framework/tcpip</Path>
+      </File>
+      <File>
+        <Name>sys_fs_media_manager.h</Name>
+        <Path>Header Files/framework/system/fs</Path>
+      </File>
+      <File>
+        <Name>sys_console_uart.c</Name>
+        <Path>Source Files/framework/system/console/src</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_easy_config.c</Name>
+        <Path>Source Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>tcpip_manager.h</Name>
+        <Path>Header Files/framework/tcpip</Path>
+      </File>
+      <File>
+        <Name>udp_private.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>tcpip_helpers.c</Name>
+        <Path>Source Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>sys_console.h</Name>
+        <Path>Header Files/framework/system/console</Path>
+      </File>
+      <File>
+        <Name>zero_conf_link_local.c</Name>
+        <Path>Source Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>StackMacros.h</Name>
+        <Path>Header Files/FreeRTOS</Path>
+      </File>
+      <File>
+        <Name>oahash.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>zero_conf_multicast_dns.h</Name>
+        <Path>Header Files/framework/tcpip</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_raw.h</Name>
+        <Path>Header Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_easy_config.h</Name>
+        <Path>Header Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>sys_tmr.h</Name>
+        <Path>Header Files/framework/system/tmr</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_commands.c</Name>
+        <Path>Source Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>task.h</Name>
+        <Path>Header Files/FreeRTOS</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_debug_output.c</Name>
+        <Path>Source Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>tcpip_private.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>tcpip_module_manager.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_config_data.c</Name>
+        <Path>Source Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_com.c</Name>
+        <Path>Source Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>dns_private.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>crypto.c</Name>
+        <Path>Source Files/framework/crypto/src</Path>
+      </File>
+      <File>
+        <Name>sys_tmr.c</Name>
+        <Path>Source Files/framework/system/tmr/src</Path>
+      </File>
+      <File>
+        <Name>tcpip_commands.c</Name>
+        <Path>Source Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_debug_output.h</Name>
+        <Path>Header Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>lfsr.c</Name>
+        <Path>Source Files/framework/tcpip/common</Path>
+      </File>
+      <File>
+        <Name>FreeRTOS.h</Name>
+        <Path>Header Files/FreeRTOS</Path>
+      </File>
+      <File>
+        <Name>sys_int_pic32.c</Name>
+        <Path>Source Files/framework/system/int/src</Path>
+      </File>
+      <File>
+        <Name>ipv4_manager.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>tcpip_common_ports.h</Name>
+        <Path>Header Files/framework/tcpip</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_mac.c</Name>
+        <Path>Source Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_commands.h</Name>
+        <Path>Header Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>tcpip_helpers.h</Name>
+        <Path>Header Files/framework/tcpip</Path>
+      </File>
+      <File>
+        <Name>dns.c</Name>
+        <Path>Source Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>timers.h</Name>
+        <Path>Header Files/FreeRTOS</Path>
+      </File>
+      <File>
+        <Name>hash_fnv.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>ISR_Support.h</Name>
+        <Path>Header Files/FreeRTOS/portable/MPLAB/PIC32MZ</Path>
+      </File>
+      <File>
+        <Name>zero_conf_multicast_dns.c</Name>
+        <Path>Source Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>udp.h</Name>
+        <Path>Header Files/framework/tcpip</Path>
+      </File>
+      <File>
+        <Name>zero_conf_helper.c</Name>
+        <Path>Source Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>arc4.c</Name>
+        <Path>Source Files/framework/crypto/src</Path>
+      </File>
+      <File>
+        <Name>osal_freertos.c</Name>
+        <Path>Source Files/framework/osal/src</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_config_data.h</Name>
+        <Path>Header Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_raw.c</Name>
+        <Path>Source Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>queue.c</Name>
+        <Path>Source Files/FreeRTOS</Path>
+      </File>
+      <File>
+        <Name>mpfs.c</Name>
+        <Path>Source Files/framework/system/fs</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_rtos_wrapper.c</Name>
+        <Path>Source Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_connection_manager.c</Name>
+        <Path>Source Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>arp_private.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>dhcp.h</Name>
+        <Path>Header Files/framework/tcpip</Path>
+      </File>
+      <File>
+        <Name>udp_manager.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>tcpip_notify.c</Name>
+        <Path>Source Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>sys_buffer.c</Name>
+        <Path>Source Files/framework/system/common/src</Path>
+      </File>
+      <File>
+        <Name>sys_console.c</Name>
+        <Path>Source Files/framework/system/console/src</Path>
+      </File>
+      <File>
+        <Name>tcpip_packet.c</Name>
+        <Path>Source Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>heap_2.c</Name>
+        <Path>Source Files/FreeRTOS/portable/MemMang</Path>
+      </File>
+      <File>
+        <Name>sys_reset.h</Name>
+        <Path>Header Files/framework/system/reset</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_param_msg.c</Name>
+        <Path>Source Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_spi.c</Name>
+        <Path>Source Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>tcpip_ethernet.h</Name>
+        <Path>Header Files/framework/tcpip</Path>
+      </File>
+      <File>
+        <Name>tasks.c</Name>
+        <Path>Source Files/FreeRTOS</Path>
+      </File>
+      <File>
+        <Name>drv_usart.c</Name>
+        <Path>Source Files/framework/driver/usart/src/dynamic</Path>
+      </File>
+      <File>
+        <Name>queue.h</Name>
+        <Path>Header Files/FreeRTOS</Path>
+      </File>
+      <File>
+        <Name>port_asm.S</Name>
+        <Path>Source Files/FreeRTOS/portable/MPLAB/PIC32MZ</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_scan.c</Name>
+        <Path>Source Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>sys_devcon.h</Name>
+        <Path>Header Files/framework/system/devcon</Path>
+      </File>
+      <File>
+        <Name>sys_fs_wrapper.h</Name>
+        <Path>Header Files/framework/tcpip/common</Path>
+      </File>
+      <File>
+        <Name>drv_tmr.c</Name>
+        <Path>Source Files/framework/driver/tmr/src/dynamic</Path>
+      </File>
+      <File>
+        <Name>drv_spi_sys_queue.h</Name>
+        <Path>Header Files/framework/driver/spi/private</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_init.c</Name>
+        <Path>Source Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>drv_spi_api.c</Name>
+        <Path>Source Files/framework/driver/spi/dynamic</Path>
+      </File>
+      <File>
+        <Name>random.h</Name>
+        <Path>Header Files/framework/crypto/src</Path>
+      </File>
+      <File>
+        <Name>icmp.h</Name>
+        <Path>Header Files/framework/tcpip</Path>
+      </File>
+      <File>
+        <Name>zero_conf_link_local.h</Name>
+        <Path>Header Files/framework/tcpip</Path>
+      </File>
+      <File>
+        <Name>tcp.c</Name>
+        <Path>Source Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_update_firmware_tcpclient_txt.c</Name>
+        <Path>Source Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>driver.h</Name>
+        <Path>Header Files/framework/driver</Path>
+      </File>
+      <File>
+        <Name>tcpip_mac_object.h</Name>
+        <Path>Header Files/framework/tcpip</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_mgmt_msg.c</Name>
+        <Path>Source Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>dhcps_private.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>tcp_manager.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_event_handler.c</Name>
+        <Path>Source Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>tcpip_mac.h</Name>
+        <Path>Header Files/framework/tcpip</Path>
+      </File>
+      <File>
+        <Name>dhcp_manager.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>sys_console_local.h</Name>
+        <Path>Header Files/framework/system/console/src</Path>
+      </File>
+      <File>
+        <Name>mpfs.h</Name>
+        <Path>Header Files/framework/system/fs</Path>
+      </File>
+      <File>
+        <Name>sys_fs_media_manager.c</Name>
+        <Path>Source Files/framework/system/fs/src/dynamic</Path>
+      </File>
+      <File>
+        <Name>dns_manager.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_events.c</Name>
+        <Path>Source Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_mac_pic32.c</Name>
+        <Path>Source Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>tcpip_manager_control.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>drv_nvm.c</Name>
+        <Path>Source Files/framework/driver/nvm/src/dynamic</Path>
+      </File>
+      <File>
+        <Name>helpers.c</Name>
+        <Path>Source Files/framework/tcpip/common</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_eint.c</Name>
+        <Path>Source Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>sys_fs_wrapper.c</Name>
+        <Path>Source Files/framework/tcpip/common</Path>
+      </File>
+      <File>
+        <Name>icmp.c</Name>
+        <Path>Source Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>tcpip_announce_manager.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>dhcps.c</Name>
+        <Path>Source Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>arp.c</Name>
+        <Path>Source Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>system.h</Name>
+        <Path>Header Files/framework/system</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_pbkdf2.c</Name>
+        <Path>Source Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_power_save.c</Name>
+        <Path>Source Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>arp_manager.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>drv_spi_sys_queue_fifo.c</Name>
+        <Path>Source Files/framework/driver/spi</Path>
+      </File>
+      <File>
+        <Name>event_groups.h</Name>
+        <Path>Header Files/FreeRTOS</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_connection_algorithm.c</Name>
+        <Path>Source Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>sys_fs.c</Name>
+        <Path>Source Files/framework/system/fs/src/dynamic</Path>
+      </File>
+      <File>
+        <Name>sys_random.c</Name>
+        <Path>Source Files/framework/system/random/src</Path>
+      </File>
+      <File>
+        <Name>port.c</Name>
+        <Path>Source Files/FreeRTOS/portable/MPLAB/PIC32MZ</Path>
+      </File>
+      <File>
+        <Name>timers.c</Name>
+        <Path>Source Files/FreeRTOS</Path>
+      </File>
+      <File>
+        <Name>tls.h</Name>
+        <Path>Header Files/framework/tcpip</Path>
+      </File>
+      <File>
+        <Name>sys_devcon_pic32mz.c</Name>
+        <Path>Source Files/framework/system/devcon/src</Path>
+      </File>
+      <File>
+        <Name>dnss_manager.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>zero_conf_manager.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>lfsr.h</Name>
+        <Path>Header Files/framework/tcpip/common</Path>
+      </File>
+      <File>
+        <Name>sys_ports.c</Name>
+        <Path>Source Files/framework/system/ports/src</Path>
+      </File>
+      <File>
+        <Name>drv_spi_internal.h</Name>
+        <Path>Header Files/framework/driver/spi/private/dynamic</Path>
+      </File>
+      <File>
+        <Name>dnss.c</Name>
+        <Path>Source Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>dhcps_manager.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>nbns_manager.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>drv_usart.h</Name>
+        <Path>Header Files/framework/driver/usart</Path>
+      </File>
+      <File>
+        <Name>nbns.c</Name>
+        <Path>Source Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>sys_console_uart.h</Name>
+        <Path>Header Files/framework/system/console/src</Path>
+      </File>
+      <File>
+        <Name>tcpip.h</Name>
+        <Path>Header Files/framework/tcpip</Path>
+      </File>
+      <File>
+        <Name>sys_reset.c</Name>
+        <Path>Source Files/framework/system/reset/src</Path>
+      </File>
+      <File>
+        <Name>dnss_private.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>sys_ports.h</Name>
+        <Path>Header Files/framework/system/ports</Path>
+      </File>
+      <File>
+        <Name>tcpip_packet.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>mpu_wrappers.h</Name>
+        <Path>Header Files/FreeRTOS</Path>
+      </File>
+      <File>
+        <Name>hashes.c</Name>
+        <Path>Source Files/framework/tcpip/common</Path>
+      </File>
+      <File>
+        <Name>oahash.c</Name>
+        <Path>Source Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>zero_conf_helper.h</Name>
+        <Path>Header Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>croutine.c</Name>
+        <Path>Source Files/FreeRTOS</Path>
+      </File>
+      <File>
+        <Name>dhcps.h</Name>
+        <Path>Header Files/framework/tcpip</Path>
+      </File>
+      <File>
+        <Name>dhcp.c</Name>
+        <Path>Source Files/framework/tcpip/stack</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_eint.h</Name>
+        <Path>Header Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>drv_spi.h</Name>
+        <Path>Header Files/framework/driver/spi</Path>
+      </File>
+      <File>
+        <Name>drv_wifi_client_table.c</Name>
+        <Path>Source Files/framework/driver/wifi/mrf24w/src</Path>
+      </File>
+      <File>
+        <Name>sys_command.c</Name>
+        <Path>Source Files/framework/system/command/src</Path>
+      </File>
+      <File>
+        <Name>big_int.c</Name>
+        <Path>Source Files/framework/tcpip/common</Path>
+      </File>
+      <File>
+        <Name>tcp.h</Name>
+        <Path>Header Files/framework/tcpip</Path>
+      </File>
+    </Files>
+    <Templates>
+      <Template>
+        <Name>main.c</Name>
+        <Path>Source Files/app</Path>
+      </Template>
+      <Template>
+        <Name>sys_clk_static.c</Name>
+        <Path>Source Files/app/system_config/pic32mz_ec_wifire_freertos/framework/system/clk/src</Path>
+        <Checksum>5F55A6E768873CA10794AE5244E01C04</Checksum>
+      </Template>
+      <Template>
+        <Name>rtos_hooks.c</Name>
+        <Path>Source Files/app/system_config/pic32mz_ec_wifire_freertos</Path>
+        <Checksum>FA52743264536E5207D2ADBE57B48D05</Checksum>
+      </Template>
+      <Template>
+        <Name>system_tasks.c</Name>
+        <Path>Source Files/app/system_config/pic32mz_ec_wifire_freertos</Path>
+        <Checksum>58953D702CF61F56202F8583AB751DC8</Checksum>
+      </Template>
+      <Template>
+        <Name>FreeRTOSConfig.h</Name>
+        <Path>Header Files/app/system_config/pic32mz_ec_wifire_freertos</Path>
+        <Checksum>A21B360ED188A7F290C192030A2606E6</Checksum>
+      </Template>
+      <Template>
+        <Name>sys_clk_static.h</Name>
+        <Path>Header Files/app/system_config/pic32mz_ec_wifire_freertos/framework/system/clk</Path>
+        <Checksum>999179DADE9ECD59953526F5E9F83ACC</Checksum>
+      </Template>
+      <Template>
+        <Name>system_init.c</Name>
+        <Path>Source Files/app/system_config/pic32mz_ec_wifire_freertos</Path>
+        <Checksum>B0F0A18A9CBBD8D9110EAA1118D3F429</Checksum>
+      </Template>
+      <Template>
+        <Name>app.h</Name>
+        <Path>Header Files/app</Path>
+      </Template>
+      <Template>
+        <Name>drv_spi_tasks.c</Name>
+        <Path>Source Files/app/system_config/pic32mz_ec_wifire_freertos/framework/driver/spi/dynamic</Path>
+        <Checksum>607DFCDA8CDE17D520484DBE0B8073C2</Checksum>
+      </Template>
+      <Template>
+        <Name>system_definitions.h</Name>
+        <Path>Header Files/app/system_config/pic32mz_ec_wifire_freertos</Path>
+        <Checksum>E8B7FE3FA9A7EE115D5D49B5E2C9AD51</Checksum>
+      </Template>
+      <Template>
+        <Name>system_exceptions.c</Name>
+        <Path>Source Files/app/system_config/pic32mz_ec_wifire_freertos</Path>
+        <Checksum>C111969CA43D6CEA1E9E33A6164E7AE0</Checksum>
+      </Template>
+      <Template>
+        <Name>system_config.h</Name>
+        <Path>Header Files/app/system_config/pic32mz_ec_wifire_freertos</Path>
+        <Checksum>C54BCED6FA5670A07EA041E670213A8A</Checksum>
+      </Template>
+      <Template>
+        <Name>mpfs_img2.c</Name>
+        <Path>Source Files/app</Path>
+        <Checksum>26647109922E8E567D65D55D7A0B754B</Checksum>
+      </Template>
+      <Template>
+        <Name>drv_spi_master_ebm_tasks.c</Name>
+        <Path>Source Files/app/system_config/pic32mz_ec_wifire_freertos/framework/driver/spi/dynamic</Path>
+        <Checksum>3E40A02B90CC246EA28E3B90F04B664E</Checksum>
+      </Template>
+      <Template>
+        <Name>sys_ports_static.c</Name>
+        <Path>Source Files/app/system_config/pic32mz_ec_wifire_freertos/framework/system/ports/src</Path>
+        <Checksum>BA3C137D8E172B3AE197CB6995588293</Checksum>
+      </Template>
+      <Template>
+        <Name>custom_http_app.c</Name>
+        <Path>Source Files/app</Path>
+        <Checksum>4186AC97C095CD5C6D542AA1467C8C2F</Checksum>
+      </Template>
+      <Template>
+        <Name>app.c</Name>
+        <Path>Source Files/app</Path>
+      </Template>
+      <Template>
+        <Name>system_interrupt.c</Name>
+        <Path>Source Files/app/system_config/pic32mz_ec_wifire_freertos</Path>
+        <Checksum>D61B03EAA4493E8A9193393048B6CEF6</Checksum>
+      </Template>
+      <Template>
+        <Name>system_interrupt_a.S</Name>
+        <Path>Source Files/app/system_config/pic32mz_ec_wifire_freertos</Path>
+        <Checksum>83C69A4CB3842E7193CBF1B5D8B4185A</Checksum>
+      </Template>
+      <Template>
+        <Name>http_print.c</Name>
+        <Path>Source Files/app</Path>
+        <Checksum>4E992090929F2F724315816C8CBD0838</Checksum>
+      </Template>
+    </Templates>
+    <CompilerItems>
+      <C32-AS>
+        <Include value="../../../../../third_party/rtos/FreeRTOS/Source/portable/MPLAB/PIC32MZ"/>
+        <Include value="../../../../../third_party/rtos/FreeRTOS/Source/include"/>
+        <Include value="../src/system_config/pic32mz_ec_wifire_freertos"/>
+      </C32-AS>
+      <C32>
+        <Include value="../../../../../bsp/pic32mz_wifire"/>
+        <Include value="../../../../../third_party/rtos/FreeRTOS/Source/portable/MPLAB/PIC32MZ"/>
+        <Include value="../../../../../third_party/rtos/FreeRTOS/Source/include"/>
+        <Include value="../src/system_config/pic32mz_ec_wifire_freertos"/>
+      </C32>
+    </CompilerItems>
+    <Libraries>
+      <Library value="../../../../../bin/framework/peripheral/PIC32MZ2048ECH100_peripherals.a"/>
+    </Libraries>
+  </Manifest>
+</configuration>
diff -ruN /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/framework/driver/spi/dynamic/drv_spi_master_ebm_tasks.c /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/framework/driver/spi/dynamic/drv_spi_master_ebm_tasks.c
--- /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/framework/driver/spi/dynamic/drv_spi_master_ebm_tasks.c	1969-12-31 19:00:00.000000000 -0500
+++ /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/framework/driver/spi/dynamic/drv_spi_master_ebm_tasks.c	2015-05-04 10:55:53.000000000 -0400
@@ -0,0 +1,251 @@
+/*******************************************************************************
+  SPI Driver Functions for Dynamic Enhanced Buffer Driver Tasks Functions
+
+  Company:
+    Microchip Technology Inc.
+
+  File Name:
+    drv_spi_dynamic_ebm_tasks.c
+
+  Summary:
+    SPI driver tasks functions
+
+  Description:
+    The SPI device driver provides a simple interface to manage the SPI
+    modules on Microchip microcontrollers. This file contains implemenation
+    for the SPI driver.
+    
+  Remarks:
+  This file is generated from framework/driver/spi/template/drv_spi_dynamic_ebm_tasks.c.ftl
+*******************************************************************************/
+
+//DOM-IGNORE-BEGIN
+/*******************************************************************************
+Copyright (c) 2013 released Microchip Technology Inc.  All rights reserved.
+
+Microchip licenses to you the right to use, modify, copy and distribute
+Software only when embedded on a Microchip microcontroller or digital signal
+controller that is integrated into your product or third party product
+(pursuant to the sublicense terms in the accompanying license agreement).
+
+You should refer to the license agreement accompanying this Software for
+additional information regarding your rights and obligations.
+
+SOFTWARE AND DOCUMENTATION ARE PROVIDED AS IS WITHOUT WARRANTY OF ANY KIND,
+EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF
+MERCHANTABILITY, TITLE, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE.
+IN NO EVENT SHALL MICROCHIP OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER
+CONTRACT, NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR
+OTHER LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
+INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE OR
+CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT OF
+SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
+(INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
+*******************************************************************************/
+//DOM-IGNORE-END
+
+#include "driver/spi/src/dynamic/drv_spi_internal.h"
+#include <stdbool.h>
+
+
+int32_t DRV_SPI_MasterEBMSend8BitISR( struct DRV_SPI_DRIVER_OBJECT * pDrvInstance )
+{
+    register SPI_MODULE_ID spiId = pDrvInstance->spiId;
+    register DRV_SPI_JOB_OBJECT * currentJob = pDrvInstance->currentJob;
+     
+    /* Determine the maximum number of bytes we can send to the FIFO*/
+        uint8_t symbolsInTransit = MAX(pDrvInstance->symbolsInProgress, PLIB_SPI_FIFOCountGet(spiId, SPI_FIFO_TYPE_TRANSMIT));
+        uint8_t bufferBytes = PLIB_SPI_TX_8BIT_FIFO_SIZE(spiId) - symbolsInTransit;
+    /* Figure out how much data we can send*/
+    size_t dataUnits = MIN(currentJob->dataLeftToTx, bufferBytes);
+    
+    size_t counter;
+    
+    if (dataUnits != 0)
+    {
+        /* Adjust the maximum buffer size downwards based on how much data we'll be sending*/
+        bufferBytes -= dataUnits;
+        currentJob->dataLeftToTx -= dataUnits;
+        /* Set the location in the buffer of where to start sending from*/
+        uint8_t *bufferLoc = &(currentJob->txBuffer[currentJob->dataTxed]);
+        for (counter = 0; counter < dataUnits; counter++)
+        {
+            /* Send a unit/symbol of data*/
+            PLIB_SPI_BufferWrite(spiId, bufferLoc[counter]);
+        }
+        /* Update the number of bytes transmitted*/
+        currentJob->dataTxed += dataUnits;
+        /* Adjust the symbols in progress */
+        pDrvInstance->symbolsInProgress += dataUnits;
+    }
+    size_t dummyUnits = MIN(currentJob->dummyLeftToTx, bufferBytes);
+    if (dummyUnits != 0)
+    {
+        currentJob->dummyLeftToTx -= dummyUnits;
+        /* Adjust the symbols in progress */
+        pDrvInstance->symbolsInProgress += dummyUnits;
+        for (counter = 0; counter < dummyUnits; counter++)
+        {
+            PLIB_SPI_BufferWrite(spiId, 0xff);
+        }
+    }    
+    if (currentJob->dataLeftToTx + currentJob->dummyLeftToTx == 0)
+    {
+        /* We have no more data to send, turn off the TX interrupt*/
+        PLIB_SPI_FIFOInterruptModeSelect(spiId, SPI_FIFO_INTERRUPT_WHEN_TRANSMIT_BUFFER_IS_COMPLETELY_EMPTY);
+        pDrvInstance->txEnabled = false;
+        
+        /* Turn on the RX Interrupt*/
+        pDrvInstance->rxEnabled = true;
+    }
+    return 0;
+}
+
+int32_t DRV_SPI_MasterEBMReceive8BitISR( struct DRV_SPI_DRIVER_OBJECT * pDrvInstance )
+{
+    register SPI_MODULE_ID spiId = pDrvInstance->spiId;
+    register DRV_SPI_JOB_OBJECT * currentJob = pDrvInstance->currentJob;
+    
+    /* Figure out how many bytes are waiting to be received."*/
+    uint8_t bufferBytes = PLIB_SPI_FIFOCountGet(spiId, SPI_FIFO_TYPE_RECEIVE);
+    /* Calculate the maximum number of data bytes that can be received*/
+    size_t dataUnits = MIN(currentJob->dataLeftToRx, bufferBytes);
+    size_t counter;
+
+    if (dataUnits != 0)
+    {
+        bufferBytes -= dataUnits;
+        currentJob->dataLeftToRx -= dataUnits;
+        /* Set the buffer location to receive bytes from the SPI to*/
+        uint8_t *bufferLoc = &(currentJob->rxBuffer[currentJob->dataRxed]);
+        for (counter = 0; counter < dataUnits; counter++)
+        {
+            /* Receive the data from the SPI */
+            bufferLoc[counter] = PLIB_SPI_BufferRead(spiId);
+        }
+        /* Adjust the amount of data that has been received */
+        currentJob->dataRxed += dataUnits;
+        /* Update the symbols in progress so we can send more units later */
+        pDrvInstance->symbolsInProgress -= dataUnits;
+    }       
+    
+    /* Figure out the maximum number of dummy data to be received */
+    size_t dummyUnits = MIN(currentJob->dummyLeftToRx, bufferBytes);
+    if (dummyUnits != 0)
+    {
+        /* Lower the number of dummy bytes to be received */
+        currentJob->dummyLeftToRx -= dummyUnits;
+        pDrvInstance->symbolsInProgress -= dummyUnits;       
+        for (counter = 0; counter < dummyUnits; counter++)
+        {
+            /* Receive and throw away the byte.  Note: We cannot just clear the 
+               buffer because we have to keep track of how many symbols/units we
+               have received, and the number may have increased since we checked
+               how full the buffer is.*/
+            PLIB_SPI_BufferRead(spiId);
+        }
+    }
+    
+    /* Figure out how many bytes are left to be received */
+    size_t bytesLeft = currentJob->dataLeftToRx + currentJob->dummyLeftToRx;
+
+    /* If the bytes left are smaller than the HW mark we have to change the interrupt mode */    
+    if (bytesLeft < PLIB_SPI_RX_8BIT_HW_MARK(spiId))
+    {
+        PLIB_SPI_FIFOInterruptModeSelect(spiId, SPI_FIFO_INTERRUPT_WHEN_RECEIVE_BUFFER_IS_NOT_EMPTY);
+    }
+    return 0;    
+}
+
+int32_t DRV_SPI_MasterEBMSend8BitPolled( struct DRV_SPI_DRIVER_OBJECT * pDrvInstance )
+{
+    register SPI_MODULE_ID spiId = pDrvInstance->spiId;
+    register DRV_SPI_JOB_OBJECT * currentJob = pDrvInstance->currentJob;
+     
+    /* Determine the maximum number of bytes we can send to the FIFO*/
+        uint8_t symbolsInTransit = MAX(pDrvInstance->symbolsInProgress, PLIB_SPI_FIFOCountGet(spiId, SPI_FIFO_TYPE_TRANSMIT));
+        uint8_t bufferBytes = PLIB_SPI_TX_8BIT_FIFO_SIZE(spiId) - symbolsInTransit;
+    /* Figure out how much data we can send*/
+    size_t dataUnits = MIN(currentJob->dataLeftToTx, bufferBytes);
+    
+    size_t counter;
+    
+    if (dataUnits != 0)
+    {
+        /* Adjust the maximum buffer size downwards based on how much data we'll be sending*/
+        bufferBytes -= dataUnits;
+        currentJob->dataLeftToTx -= dataUnits;
+        /* Set the location in the buffer of where to start sending from*/
+        uint8_t *bufferLoc = &(currentJob->txBuffer[currentJob->dataTxed]);
+        for (counter = 0; counter < dataUnits; counter++)
+        {
+            /* Send a unit/symbol of data*/
+            PLIB_SPI_BufferWrite(spiId, bufferLoc[counter]);
+        }
+        /* Update the number of bytes transmitted*/
+        currentJob->dataTxed += dataUnits;
+        /* Adjust the symbols in progress */
+        pDrvInstance->symbolsInProgress += dataUnits;
+    }
+    size_t dummyUnits = MIN(currentJob->dummyLeftToTx, bufferBytes);
+    if (dummyUnits != 0)
+    {
+        currentJob->dummyLeftToTx -= dummyUnits;
+        /* Adjust the symbols in progress */
+        pDrvInstance->symbolsInProgress += dummyUnits;
+        for (counter = 0; counter < dummyUnits; counter++)
+        {
+            PLIB_SPI_BufferWrite(spiId, 0xff);
+        }
+    }    
+    return 0;
+}
+
+int32_t DRV_SPI_MasterEBMReceive8BitPolled( struct DRV_SPI_DRIVER_OBJECT * pDrvInstance )
+{
+    register SPI_MODULE_ID spiId = pDrvInstance->spiId;
+    register DRV_SPI_JOB_OBJECT * currentJob = pDrvInstance->currentJob;
+    
+    /* Figure out how many bytes are waiting to be received."*/
+    uint8_t bufferBytes = PLIB_SPI_FIFOCountGet(spiId, SPI_FIFO_TYPE_RECEIVE);
+    /* Calculate the maximum number of data bytes that can be received*/
+    size_t dataUnits = MIN(currentJob->dataLeftToRx, bufferBytes);
+    size_t counter;
+
+    if (dataUnits != 0)
+    {
+        bufferBytes -= dataUnits;
+        currentJob->dataLeftToRx -= dataUnits;
+        /* Set the buffer location to receive bytes from the SPI to*/
+        uint8_t *bufferLoc = &(currentJob->rxBuffer[currentJob->dataRxed]);
+        for (counter = 0; counter < dataUnits; counter++)
+        {
+            /* Receive the data from the SPI */
+            bufferLoc[counter] = PLIB_SPI_BufferRead(spiId);
+        }
+        /* Adjust the amount of data that has been received */
+        currentJob->dataRxed += dataUnits;
+        /* Update the symbols in progress so we can send more units later */
+        pDrvInstance->symbolsInProgress -= dataUnits;
+    }       
+    
+    /* Figure out the maximum number of dummy data to be received */
+    size_t dummyUnits = MIN(currentJob->dummyLeftToRx, bufferBytes);
+    if (dummyUnits != 0)
+    {
+        /* Lower the number of dummy bytes to be received */
+        currentJob->dummyLeftToRx -= dummyUnits;
+        pDrvInstance->symbolsInProgress -= dummyUnits;       
+        for (counter = 0; counter < dummyUnits; counter++)
+        {
+            /* Receive and throw away the byte.  Note: We cannot just clear the 
+               buffer because we have to keep track of how many symbols/units we
+               have received, and the number may have increased since we checked
+               how full the buffer is.*/
+            PLIB_SPI_BufferRead(spiId);
+        }
+    }
+    
+    return 0;    
+}
+
diff -ruN /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/framework/driver/spi/dynamic/drv_spi_tasks.c /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/framework/driver/spi/dynamic/drv_spi_tasks.c
--- /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/framework/driver/spi/dynamic/drv_spi_tasks.c	1969-12-31 19:00:00.000000000 -0500
+++ /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/framework/driver/spi/dynamic/drv_spi_tasks.c	2015-05-04 10:55:53.000000000 -0400
@@ -0,0 +1,298 @@
+/*******************************************************************************
+  SPI Driver Functions for Dynamic Driver Tasks Functions
+
+  Company:
+    Microchip Technology Inc.
+
+  File Name:
+    drv_spi_dynamic_tasks.c
+
+  Summary:
+    SPI driver tasks functions
+
+  Description:
+    The SPI device driver provides a simple interface to manage the SPI
+    modules on Microchip microcontrollers. This file contains implemenation
+    for the SPI driver.
+    
+  Remarks:
+  This file is generated from framework/driver/spi/template/drv_spi_dynamic_tasks.c.ftl
+*******************************************************************************/
+
+//DOM-IGNORE-BEGIN
+/*******************************************************************************
+Copyright (c) 2013 released Microchip Technology Inc.  All rights reserved.
+
+Microchip licenses to you the right to use, modify, copy and distribute
+Software only when embedded on a Microchip microcontroller or digital signal
+controller that is integrated into your product or third party product
+(pursuant to the sublicense terms in the accompanying license agreement).
+
+You should refer to the license agreement accompanying this Software for
+additional information regarding your rights and obligations.
+
+SOFTWARE AND DOCUMENTATION ARE PROVIDED AS IS WITHOUT WARRANTY OF ANY KIND,
+EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF
+MERCHANTABILITY, TITLE, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE.
+IN NO EVENT SHALL MICROCHIP OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER
+CONTRACT, NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR
+OTHER LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
+INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE OR
+CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT OF
+SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
+(INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
+*******************************************************************************/
+//DOM-IGNORE-END
+#include "driver/spi/src/dynamic/drv_spi_internal.h"
+#include <stdbool.h>
+
+
+
+int32_t DRV_SPI_ISRMasterEBM8BitTasks ( struct DRV_SPI_DRIVER_OBJECT * pDrvInstance )    
+{
+    bool continueLoop;
+    /* Disable the interrupts */
+    SYS_INT_SourceDisable(pDrvInstance->rxInterruptSource);
+    SYS_INT_SourceDisable(pDrvInstance->txInterruptSource);
+    SYS_INT_SourceDisable(pDrvInstance->errInterruptSource);
+    do {
+        DRV_SPI_JOB_OBJECT * currentJob = pDrvInstance->currentJob;
+        SPI_MODULE_ID spiId = pDrvInstance->spiId;
+        /* Check for a new task */
+        if (pDrvInstance->currentJob == NULL)
+        {
+            if (DRV_SPI_SYS_QUEUE_Dequeue(pDrvInstance->queue, (void *)&(pDrvInstance->currentJob)) != DRV_SPI_SYS_QUEUE_SUCCESS)
+            {
+                SYS_ASSERT(false, "SPI Driver: Error in dequeing");
+                return 0;       
+            }
+            if (pDrvInstance->currentJob == NULL)
+            {
+                pDrvInstance->txEnabled = false;
+                return 0;
+            }
+            currentJob = pDrvInstance->currentJob;
+
+            pDrvInstance->symbolsInProgress = 0;
+
+            /* Call the operation starting function pointer.  This can be used to modify the slave select lines */
+            DRV_SPI_CLIENT_OBJECT * pClient = (DRV_SPI_CLIENT_OBJECT*)currentJob->pClient;
+            if (pClient->operationStarting != NULL)
+            {
+                (*pClient->operationStarting)(DRV_SPI_BUFFER_EVENT_PROCESSING, (DRV_SPI_BUFFER_HANDLE)currentJob, currentJob->context);
+            }
+            /* Check the baud rate.  If its different set the new baud rate*/
+            if (pClient->baudRate != pDrvInstance->currentBaudRate)
+            {
+                PLIB_SPI_BaudRateSet( spiId , SYS_CLK_PeripheralFrequencyGet(pDrvInstance->spiClk), pClient->baudRate );
+                pDrvInstance->currentBaudRate = pClient->baudRate;
+            }
+            
+            /* List the new job as processing*/
+            currentJob->status = DRV_SPI_BUFFER_EVENT_PROCESSING;
+            if (currentJob->dataLeftToTx +currentJob->dummyLeftToTx > PLIB_SPI_RX_8BIT_FIFO_SIZE(spiId))
+            {
+                PLIB_SPI_FIFOInterruptModeSelect(spiId, SPI_FIFO_INTERRUPT_WHEN_TRANSMIT_BUFFER_IS_1HALF_EMPTY_OR_MORE);
+                PLIB_SPI_FIFOInterruptModeSelect(spiId, SPI_FIFO_INTERRUPT_WHEN_RECEIVE_BUFFER_IS_1HALF_FULL_OR_MORE);
+            }
+            /* Flush out the Receive buffer */
+            PLIB_SPI_BufferClear(spiId);
+        }
+
+                
+        continueLoop = false;
+        /* Execute the sub tasks */
+        if 
+            (currentJob->dataLeftToTx +currentJob->dummyLeftToTx != 0)
+        {
+            DRV_SPI_MasterEBMSend8BitISR(pDrvInstance);
+        }
+        DRV_SPI_ISRErrorTasks(pDrvInstance);
+    /* Figure out how many bytes are left to be received */
+    size_t bytesLeft = currentJob->dataLeftToRx + currentJob->dummyLeftToRx;
+    // Check to see if we have any data left to receive and update the bytes left.
+
+
+        if (bytesLeft != 0)
+        {
+            DRV_SPI_MasterEBMReceive8BitISR(pDrvInstance);
+            bytesLeft = currentJob->dataLeftToRx + currentJob->dummyLeftToRx;
+        }
+        if (bytesLeft == 0)
+        {
+                    // Disable the interrupt, or more correctly don't re-enable it later*/
+                    pDrvInstance->rxEnabled = false;
+                    /* Job is complete*/
+                    currentJob->status = DRV_SPI_BUFFER_EVENT_COMPLETE;
+                    /* Call the job complete call back*/
+                    if (currentJob->completeCB != NULL)
+                    {
+                        (*currentJob->completeCB)(DRV_SPI_BUFFER_EVENT_COMPLETE, (DRV_SPI_BUFFER_HANDLE)currentJob, currentJob->context);
+                    }
+                    /* Call the operation complete call back.  This is different than the
+                       job complete callback.  This can be used to modify the Slave Select line.
+                       The job complete callback can be used to free a client that is blocked 
+                       waiting for complete*/
+                    DRV_SPI_CLIENT_OBJECT * pClient = (DRV_SPI_CLIENT_OBJECT*)currentJob->pClient;
+                    if (pClient->operationEnded != NULL)
+                    {
+                        (*pClient->operationEnded)(DRV_SPI_BUFFER_EVENT_COMPLETE, (DRV_SPI_BUFFER_HANDLE)currentJob, currentJob->context);
+                    }
+                    /* Return the job back to the free queue*/
+                    if (DRV_SPI_SYS_QUEUE_FreeElement(pDrvInstance->queue, currentJob) != DRV_SPI_SYS_QUEUE_SUCCESS)
+                    {
+                        SYS_ASSERT(false, "SPI Driver: Queue free element error");
+                        return 0;
+                    }
+                    /* Clean up */
+                    pDrvInstance->currentJob = NULL;
+                    if (!DRV_SPI_SYS_QUEUE_IsEmpty(pDrvInstance->queue))
+                    {
+                        continueLoop = true;    
+                        continue;
+                    }
+                    else
+                    {
+                        break;
+                    }
+                }
+
+    
+        /* Check to see if the interrupts would fire again if so just go back into 
+           the loop instead of suffering the interrupt latency of exiting and re-entering*/
+        if (pDrvInstance->currentJob != NULL)
+        {
+            /* Clear the Interrupts */
+            SYS_INT_SourceStatusClear(pDrvInstance->rxInterruptSource);
+            SYS_INT_SourceStatusClear(pDrvInstance->txInterruptSource);
+            SYS_INT_SourceStatusClear(pDrvInstance->errInterruptSource);
+            /* Interrupts should immediately become active again if they're in a fired condition */
+            if (((pDrvInstance->rxInterruptSource) && SYS_INT_SourceStatusGet(pDrvInstance->rxInterruptSource)) ||
+                ((pDrvInstance->txInterruptSource) && SYS_INT_SourceStatusGet(pDrvInstance->txInterruptSource)) ||
+                (SYS_INT_SourceStatusGet(pDrvInstance->errInterruptSource)))
+            {
+                /* Interrupt would fire again anyway so we should just go back to the start*/
+                continueLoop = true;
+                continue;                            
+            }
+            /* If we're here then we know that the interrupt should not be firing again so we can exit cleanly*/
+            /* Clear the interrupts now that we're done*/
+            /* Re-enable the interrupts*/
+            if (pDrvInstance->rxEnabled)
+            {
+                SYS_INT_SourceEnable(pDrvInstance->rxInterruptSource);
+            }
+            if (pDrvInstance->txEnabled)
+            {
+                SYS_INT_SourceEnable(pDrvInstance->txInterruptSource);
+            }
+            return 0;            
+        }
+    
+    } while(continueLoop);
+    /* if we're here it means that we have no more jobs in the queue, tx and rx interrupts will be re-enabled by the BufferAdd* functions*/
+    SYS_INT_SourceStatusClear(pDrvInstance->rxInterruptSource);
+    SYS_INT_SourceStatusClear(pDrvInstance->txInterruptSource);
+    return 0;
+}
+int32_t DRV_SPI_PolledMasterEBM8BitTasks ( struct DRV_SPI_DRIVER_OBJECT * pDrvInstance )    
+{
+    bool continueLoop;
+    do {
+        DRV_SPI_JOB_OBJECT * currentJob = pDrvInstance->currentJob;
+        SPI_MODULE_ID spiId = pDrvInstance->spiId;
+        /* Check for a new task */
+        if (pDrvInstance->currentJob == NULL)
+        {
+            if (DRV_SPI_SYS_QUEUE_DequeueLock(pDrvInstance->queue, (void *)&(pDrvInstance->currentJob)) != DRV_SPI_SYS_QUEUE_SUCCESS)
+            {
+                SYS_ASSERT(false, "SPI Driver: Error in dequeing");
+                return 0;       
+            }
+            if (pDrvInstance->currentJob == NULL)
+            {
+                return 0;
+            }
+            currentJob = pDrvInstance->currentJob;
+
+            pDrvInstance->symbolsInProgress = 0;
+
+            /* Call the operation starting function pointer.  This can be used to modify the slave select lines */
+            DRV_SPI_CLIENT_OBJECT * pClient = (DRV_SPI_CLIENT_OBJECT*)currentJob->pClient;
+            if (pClient->operationStarting != NULL)
+            {
+                (*pClient->operationStarting)(DRV_SPI_BUFFER_EVENT_PROCESSING, (DRV_SPI_BUFFER_HANDLE)currentJob, currentJob->context);
+            }
+            /* Check the baud rate.  If its different set the new baud rate*/
+            if (pClient->baudRate != pDrvInstance->currentBaudRate)
+            {
+                PLIB_SPI_BaudRateSet( spiId , SYS_CLK_PeripheralFrequencyGet(pDrvInstance->spiClk), pClient->baudRate );
+                pDrvInstance->currentBaudRate = pClient->baudRate;
+            }
+            
+            /* List the new job as processing*/
+            currentJob->status = DRV_SPI_BUFFER_EVENT_PROCESSING;
+            /* Flush out the Receive buffer */
+            PLIB_SPI_BufferClear(spiId);
+        }
+
+                
+        continueLoop = false;
+        /* Execute the sub tasks */
+        if 
+            (currentJob->dataLeftToTx +currentJob->dummyLeftToTx != 0)
+        {
+            DRV_SPI_MasterEBMSend8BitPolled(pDrvInstance);
+        }
+        DRV_SPI_PolledErrorTasks(pDrvInstance);
+    /* Figure out how many bytes are left to be received */
+    size_t bytesLeft = currentJob->dataLeftToRx + currentJob->dummyLeftToRx;
+    // Check to see if we have any data left to receive and update the bytes left.
+
+
+        if (bytesLeft != 0)
+        {
+            DRV_SPI_MasterEBMReceive8BitPolled(pDrvInstance);
+            bytesLeft = currentJob->dataLeftToRx + currentJob->dummyLeftToRx;
+        }
+        if (bytesLeft == 0)
+        {
+                    /* Job is complete*/
+                    currentJob->status = DRV_SPI_BUFFER_EVENT_COMPLETE;
+                    /* Call the job complete call back*/
+                    if (currentJob->completeCB != NULL)
+                    {
+                        (*currentJob->completeCB)(DRV_SPI_BUFFER_EVENT_COMPLETE, (DRV_SPI_BUFFER_HANDLE)currentJob, currentJob->context);
+                    }
+                    /* Call the operation complete call back.  This is different than the
+                       job complete callback.  This can be used to modify the Slave Select line.
+                       The job complete callback can be used to free a client that is blocked 
+                       waiting for complete*/
+                    DRV_SPI_CLIENT_OBJECT * pClient = (DRV_SPI_CLIENT_OBJECT*)currentJob->pClient;
+                    if (pClient->operationEnded != NULL)
+                    {
+                        (*pClient->operationEnded)(DRV_SPI_BUFFER_EVENT_COMPLETE, (DRV_SPI_BUFFER_HANDLE)currentJob, currentJob->context);
+                    }
+                    /* Return the job back to the free queue*/
+                    if (DRV_SPI_SYS_QUEUE_FreeElementLock(pDrvInstance->queue, currentJob) != DRV_SPI_SYS_QUEUE_SUCCESS)
+                    {
+                        SYS_ASSERT(false, "SPI Driver: Queue free element error");
+                        return 0;
+                    }
+                    /* Clean up */
+                    pDrvInstance->currentJob = NULL;
+                }
+
+    
+    
+    } while(continueLoop);
+    return 0;
+}
+
+
+
+
+
+
+
+
diff -ruN /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/framework/system/clk/src/sys_clk_static.c /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/framework/system/clk/src/sys_clk_static.c
--- /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/framework/system/clk/src/sys_clk_static.c	1969-12-31 19:00:00.000000000 -0500
+++ /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/framework/system/clk/src/sys_clk_static.c	2015-05-04 10:55:53.000000000 -0400
@@ -0,0 +1,286 @@
+/*******************************************************************************
+  SYS CLK Static Functions for Clock System Service
+
+  Company:
+    Microchip Technology Inc.
+
+  File Name:
+    sys_clk_static.c
+
+  Summary:
+    SYS CLK static function implementations for the Clock System Service.
+
+  Description:
+    The Clock System Service provides a simple interface to manage the oscillators
+    on Microchip microcontrollers. This file defines the static implementation for the 
+    Clock System Service.
+    
+  Remarks:
+    Static functions incorporate all system clock configuration settings as
+    determined by the user via the Microchip Harmony Configurator GUI.  It provides 
+    static version of the routines, eliminating the need for an object ID or 
+    object handle.
+    
+    Static single-open interfaces also eliminate the need for the open handle.
+*******************************************************************************/
+
+//DOM-IGNORE-BEGIN
+/*******************************************************************************
+Copyright (c) 2014 released Microchip Technology Inc.  All rights reserved.
+
+Microchip licenses to you the right to use, modify, copy and distribute
+Software only when embedded on a Microchip microcontroller or digital signal
+controller that is integrated into your product or third party product
+(pursuant to the sublicense terms in the accompanying license agreement).
+
+You should refer to the license agreement accompanying this Software for
+additional information regarding your rights and obligations.
+
+SOFTWARE AND DOCUMENTATION ARE PROVIDED AS IS WITHOUT WARRANTY OF ANY KIND,
+EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF
+MERCHANTABILITY, TITLE, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE.
+IN NO EVENT SHALL MICROCHIP OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER
+CONTRACT, NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR
+OTHER LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
+INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE OR
+CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT OF
+SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
+(INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
+*******************************************************************************/
+//DOM-IGNORE-END
+
+// *****************************************************************************
+// *****************************************************************************
+// Section: Include Files
+// *****************************************************************************
+// *****************************************************************************
+
+#include "system_config.h"
+#include "system_definitions.h"
+#include "peripheral/osc/plib_osc.h"
+
+// *****************************************************************************
+// *****************************************************************************
+// Section: File Scope Functions
+// *****************************************************************************
+// *****************************************************************************
+
+// *****************************************************************************
+/* Function:
+    void SYS_CLK_Static_Initialize ( const SYS_CLK_INIT const * clkInit )
+
+  Summary:
+    Initializes hardware and internal data structure of the System Clock.
+
+  Description:
+    This function initializes the hardware and internal data structure of System
+    Clock Service.
+
+  Remarks:
+    This is configuration values for the static version of the Clock System Service 
+    module is determined by the user via the Microchip Harmony Configurator GUI.
+    This template will build a sys_clk_static.h and sys_clk_static.c file with 
+    the configuration per the user's choice.
+
+    The objective is to eliminate the user's need to be knowledgeable in the function of
+    the 'configuration bits' to configure the system oscillators. 
+*/
+
+void SYS_CLK_Initialize( const SYS_CLK_INIT const * clkInit )
+{
+    SYS_DEVCON_SystemUnlock ( );
+    
+    PLIB_OSC_FRCDivisorSelect( OSC_ID_0, OSC_FRC_DIV_1);
+
+    /* Enable Peripheral Bus 1 */
+    PLIB_OSC_PBClockDivisorSet (OSC_ID_0, 0, 2 );
+    PLIB_OSC_PBOutputClockEnable (OSC_ID_0, 0 );
+    /* Enable Peripheral Bus 2 */
+    PLIB_OSC_PBClockDivisorSet (OSC_ID_0, 1, 2 );
+    PLIB_OSC_PBOutputClockEnable (OSC_ID_0, 1 );
+    /* Enable Peripheral Bus 3 */
+    PLIB_OSC_PBClockDivisorSet (OSC_ID_0, 2, 2 );
+    PLIB_OSC_PBOutputClockEnable (OSC_ID_0, 2 );
+    /* Enable Peripheral Bus 4 */
+    PLIB_OSC_PBClockDivisorSet (OSC_ID_0, 3, 2 );
+    PLIB_OSC_PBOutputClockEnable (OSC_ID_0, 3 );
+    /* Enable Peripheral Bus 5 */
+    PLIB_OSC_PBClockDivisorSet (OSC_ID_0, 4, 2 );
+    PLIB_OSC_PBOutputClockEnable (OSC_ID_0, 4 );
+    /* Enable Peripheral Bus 7 */
+    PLIB_OSC_PBClockDivisorSet (OSC_ID_0, 6, 1 );
+    PLIB_OSC_PBOutputClockEnable (OSC_ID_0, 6 );
+    /* Enable Peripheral Bus 8 */
+    PLIB_OSC_PBClockDivisorSet (OSC_ID_0, 7, 2 );
+    PLIB_OSC_PBOutputClockEnable (OSC_ID_0, 7 );
+    /* Disable REFCLKO1*/
+    PLIB_OSC_ReferenceOscDisable ( OSC_ID_0, OSC_REFERENCE_1 );
+    /* Disable REFCLK1_OE*/
+    PLIB_OSC_ReferenceOutputDisable ( OSC_ID_0, OSC_REFERENCE_1 );
+    /* Disable REFCLKO2*/
+    PLIB_OSC_ReferenceOscDisable ( OSC_ID_0, OSC_REFERENCE_2 );
+    /* Disable REFCLK2_OE*/
+    PLIB_OSC_ReferenceOutputDisable ( OSC_ID_0, OSC_REFERENCE_2 );
+    /* Disable REFCLKO3*/
+    PLIB_OSC_ReferenceOscDisable ( OSC_ID_0, OSC_REFERENCE_3 );
+    /* Disable REFCLK3_OE*/
+    PLIB_OSC_ReferenceOutputDisable ( OSC_ID_0, OSC_REFERENCE_3 );
+    /* Disable REFCLKO4*/
+    PLIB_OSC_ReferenceOscDisable ( OSC_ID_0, OSC_REFERENCE_4 );
+    /* Disable REFCLK4_OE*/
+    PLIB_OSC_ReferenceOutputDisable ( OSC_ID_0, OSC_REFERENCE_4 );
+
+    SYS_DEVCON_SystemLock ( );
+}
+
+//******************************************************************************
+/* Function:
+    inline uint32_t SYS_CLK_SystemFrequencyGet ( void )
+
+  Summary:
+    Gets the system clock frequency in Hertz.
+
+  Description:
+    This function gets the System clock frequency in Hertz.
+
+  Precondition:
+    None.
+
+  Parameters:
+    None.
+
+  Returns:
+    System clock frequency in Hertz.
+
+  Example:
+    <code>
+    uint32_t sysClockHz;
+
+    sysClockHz = SYS_CLK_SystemFrequencyGet ( );
+    </code>
+
+  Remarks:
+ */
+
+inline uint32_t SYS_CLK_SystemFrequencyGet ( void )
+{
+    return SYS_CLK_FREQ;
+}
+
+//******************************************************************************
+/* Function:
+    inline uint32_t SYS_CLK_PeripheralFrequencyGet ( CLK_BUSES_PERIPHERAL peripheralBus )
+
+  Summary:
+    Gets the selected clock peripheral bus frequency in Hertz.
+
+  Description:
+    This function gets the selected peripheral bus clock frequency in Hertz.
+
+  Precondition:
+    None.
+
+  Parameters:
+	peripheralBus - Reference clock bus selection. One of the possible value from
+				CLK_BUSES_PERIPHERAL enum. For devices that do not have multiple
+				clock channels for Reference clock, CLK_BUS_PERIPHERAL_1 should be
+				the selection.
+
+  Returns:
+    Clock frequency in Hertz.
+
+  Example:
+    <code>
+    unsigned long peripheralClockHz;
+
+    peripheralClockHz = SYS_CLK_PeripheralFrequencyGet ( CLK_BUS_PERIPHERAL_5 );
+    </code>
+
+  Remarks:
+	Most of the devices doesn't have multiple Peripheral clock buses. In that case, 
+	pass CLK_USB_PERIPHERAL_1 as the bus number.
+ */
+
+inline uint32_t SYS_CLK_PeripheralFrequencyGet ( CLK_BUSES_PERIPHERAL peripheralBus )
+{
+    uint32_t freq = 0;
+
+    switch (peripheralBus)
+    {
+        case CLK_BUS_PERIPHERAL_1:
+                freq = SYS_CLK_BUS_PERIPHERAL_1;
+            break;
+        case CLK_BUS_PERIPHERAL_2:
+                freq = SYS_CLK_BUS_PERIPHERAL_2;
+            break;
+        case CLK_BUS_PERIPHERAL_3:
+                freq = SYS_CLK_BUS_PERIPHERAL_3;
+            break;
+        case CLK_BUS_PERIPHERAL_4:
+                freq = SYS_CLK_BUS_PERIPHERAL_4;
+            break;
+        case CLK_BUS_PERIPHERAL_5:
+                freq = SYS_CLK_BUS_PERIPHERAL_5;
+            break;
+        case CLK_BUS_PERIPHERAL_7:
+                freq = SYS_CLK_BUS_PERIPHERAL_7;
+            break;
+        case CLK_BUS_PERIPHERAL_8:
+                freq = SYS_CLK_BUS_PERIPHERAL_8;
+            break;
+    }
+    
+    return freq;
+}
+
+
+//******************************************************************************
+/* Function:
+    inline uint32_t SYS_CLK_ReferenceClockFrequencyGet ( CLK_BUSES_REFERENCE referenceBus )
+
+  Summary:
+    Gets the selected Reference clock bus frequency in Hertz.
+
+  Description:
+    This function gets frequency of the selected Reference clock bus in Hertz.
+
+  Precondition:
+    None.
+
+  Parameters:
+	peripheralBus - Reference clock bus selection. One of the possible value from
+				CLK_BUSES_REFERENCE enum. For devices that do not have multiple
+				clock channels for Reference clock, CLK_BUS_REFERENCE_1 should be
+				the selection.
+
+  Returns:
+    Clock frequency in Hz.
+
+  Example:
+    <code>
+    unsigned long sysClockOutputHz;
+
+    sysClockOutputHz = SYS_CLK_ReferenceClockFrequencyGet ( CLK_BUS_REFERENCE_3 );
+    </code>
+
+  Remarks:
+ */
+
+inline uint32_t SYS_CLK_ReferenceClockFrequencyGet ( CLK_BUSES_REFERENCE referenceBus )
+{
+    uint32_t freq = 0;
+
+    switch (referenceBus)
+    {
+        case CLK_BUS_REFERENCE_1:
+            break;
+        case CLK_BUS_REFERENCE_2:
+            break;
+        case CLK_BUS_REFERENCE_3:
+            break;
+        case CLK_BUS_REFERENCE_4:
+            break;
+    }
+    
+    return freq;
+}
\ No newline at end of file
diff -ruN /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/framework/system/clk/sys_clk_static.h /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/framework/system/clk/sys_clk_static.h
--- /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/framework/system/clk/sys_clk_static.h	1969-12-31 19:00:00.000000000 -0500
+++ /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/framework/system/clk/sys_clk_static.h	2015-05-04 10:55:53.000000000 -0400
@@ -0,0 +1,65 @@
+/*******************************************************************************
+  SYS CLK Static Interface Declarations for Clock System Service
+
+  Company:
+    Microchip Technology Inc.
+
+  File Name:
+    sys_clk_static.h
+
+  Summary:
+    SYS CLK interface declarations for the static system service.
+
+  Description:
+    The Clock System Service provides a simple interface to manage the oscillators
+    on Microchip microcontrollers. This file defines the interface
+    Declarations for the SYS CLK system service.
+    
+  Remarks:
+    Static interfaces incorporate all system clock configuration settings as
+    determined by the user via the Microchip Harmony Configurator GUI.  It provides 
+    static version of the routines, eliminating the need for an object ID or 
+    object handle.
+    
+    Static single-open interfaces also eliminate the need for the open handle.
+*******************************************************************************/
+
+//DOM-IGNORE-BEGIN
+/*******************************************************************************
+Copyright (c) 2014 released Microchip Technology Inc.  All rights reserved.
+
+Microchip licenses to you the right to use, modify, copy and distribute
+Software only when embedded on a Microchip microcontroller or digital signal
+controller that is integrated into your product or third party product
+(pursuant to the sublicense terms in the accompanying license agreement).
+
+You should refer to the license agreement accompanying this Software for
+additional information regarding your rights and obligations.
+
+SOFTWARE AND DOCUMENTATION ARE PROVIDED AS IS WITHOUT WARRANTY OF ANY KIND,
+EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF
+MERCHANTABILITY, TITLE, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE.
+IN NO EVENT SHALL MICROCHIP OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER
+CONTRACT, NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR
+OTHER LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
+INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE OR
+CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT OF
+SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
+(INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
+*******************************************************************************/
+//DOM-IGNORE-END
+
+#ifndef _SYS_CLK_STATIC_H
+#define _SYS_CLK_STATIC_H
+
+// *****************************************************************************
+// *****************************************************************************
+// Section: SYS CLK Module Initialization Routine (Static Version)
+// *****************************************************************************
+// *****************************************************************************
+
+#endif // #ifndef _SYS_CLK_STATIC_H
+
+/*******************************************************************************
+ End of File
+*/
diff -ruN /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/framework/system/ports/src/sys_ports_static.c /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/framework/system/ports/src/sys_ports_static.c
--- /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/framework/system/ports/src/sys_ports_static.c	1969-12-31 19:00:00.000000000 -0500
+++ /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/framework/system/ports/src/sys_ports_static.c	2015-08-08 19:15:13.732334200 -0400
@@ -0,0 +1,132 @@
+/*******************************************************************************
+  SYS PORTS Static Functions for PORTS System Service
+
+  Company:
+    Microchip Technology Inc.
+
+  File Name:
+    sys_ports_static.c
+
+  Summary:
+    SYS PORTS static function implementations for the Ports System Service.
+
+  Description:
+    The Ports System Service provides a simple interface to manage the ports
+    on Microchip microcontrollers. This file defines the static implementation for the 
+    Ports System Service.
+    
+  Remarks:
+    Static functions incorporate all system ports configuration settings as
+    determined by the user via the Microchip Harmony Configurator GUI.  It provides 
+    static version of the routines, eliminating the need for an object ID or 
+    object handle.
+
+*******************************************************************************/
+
+//DOM-IGNORE-BEGIN
+/*******************************************************************************
+Copyright (c) 2013 released Microchip Technology Inc.  All rights reserved.
+
+Microchip licenses to you the right to use, modify, copy and distribute
+Software only when embedded on a Microchip microcontroller or digital signal
+controller that is integrated into your product or third party product
+(pursuant to the sublicense terms in the accompanying license agreement).
+
+You should refer to the license agreement accompanying this Software for
+additional information regarding your rights and obligations.
+
+SOFTWARE AND DOCUMENTATION ARE PROVIDED AS IS WITHOUT WARRANTY OF ANY KIND,
+EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF
+MERCHANTABILITY, TITLE, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE.
+IN NO EVENT SHALL MICROCHIP OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER
+CONTRACT, NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR
+OTHER LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
+INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE OR
+CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT OF
+SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
+(INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
+*******************************************************************************/
+//DOM-IGNORE-END
+
+#include "system_config.h"
+#include "peripheral/ports/plib_ports.h"
+#include "peripheral/int/plib_int.h"
+
+
+void SYS_PORTS_Initialize(void)
+{
+    /* PORT A Initialization */
+    PLIB_PORTS_OpenDrainEnable(PORTS_ID_0, PORT_CHANNEL_A, SYS_PORT_A_ODC);
+    PLIB_PORTS_Write( PORTS_ID_0, PORT_CHANNEL_A,  SYS_PORT_A_LAT);
+    PLIB_PORTS_DirectionOutputSet( PORTS_ID_0, PORT_CHANNEL_A,  SYS_PORT_A_TRIS ^ 0xFFFF);
+    PLIB_PORTS_ChangeNoticePerPortTurnOn(PORTS_ID_0, PORT_CHANNEL_A);
+    PLIB_PORTS_ChannelModeSelect(PORTS_ID_0, PORT_CHANNEL_A, SYS_PORT_A_ANSEL ^ 0xFFFF, PORTS_PIN_MODE_DIGITAL);
+    PLIB_PORTS_ChannelChangeNoticeEnable(PORTS_ID_0, PORT_CHANNEL_A, SYS_PORT_A_CNEN);
+    PLIB_PORTS_ChannelChangeNoticePullUpEnable(PORTS_ID_0, PORT_CHANNEL_A, SYS_PORT_A_CNPU);
+    PLIB_PORTS_ChannelChangeNoticePullDownEnable(PORTS_ID_0, PORT_CHANNEL_A, SYS_PORT_A_CNPD);
+    
+    /* PORT B Initialization */
+    PLIB_PORTS_OpenDrainEnable(PORTS_ID_0, PORT_CHANNEL_B, SYS_PORT_B_ODC);
+    PLIB_PORTS_Write( PORTS_ID_0, PORT_CHANNEL_B,  SYS_PORT_B_LAT);
+    PLIB_PORTS_DirectionOutputSet( PORTS_ID_0, PORT_CHANNEL_B,  SYS_PORT_B_TRIS ^ 0xFFFF);
+    PLIB_PORTS_ChangeNoticePerPortTurnOn(PORTS_ID_0, PORT_CHANNEL_B);
+    PLIB_PORTS_ChannelModeSelect(PORTS_ID_0, PORT_CHANNEL_B, SYS_PORT_B_ANSEL ^ 0xFFFF, PORTS_PIN_MODE_DIGITAL);
+    PLIB_PORTS_ChannelChangeNoticeEnable(PORTS_ID_0, PORT_CHANNEL_B, SYS_PORT_B_CNEN);
+    PLIB_PORTS_ChannelChangeNoticePullUpEnable(PORTS_ID_0, PORT_CHANNEL_B, SYS_PORT_B_CNPU);
+    PLIB_PORTS_ChannelChangeNoticePullDownEnable(PORTS_ID_0, PORT_CHANNEL_B, SYS_PORT_B_CNPD);
+    
+    /* PORT C Initialization */
+    PLIB_PORTS_OpenDrainEnable(PORTS_ID_0, PORT_CHANNEL_C, SYS_PORT_C_ODC);
+    PLIB_PORTS_Write( PORTS_ID_0, PORT_CHANNEL_C,  SYS_PORT_C_LAT);
+    PLIB_PORTS_DirectionOutputSet( PORTS_ID_0, PORT_CHANNEL_C,  SYS_PORT_C_TRIS ^ 0xFFFF);
+    PLIB_PORTS_ChangeNoticePerPortTurnOn(PORTS_ID_0, PORT_CHANNEL_C);
+    PLIB_PORTS_ChannelModeSelect(PORTS_ID_0, PORT_CHANNEL_C, SYS_PORT_C_ANSEL ^ 0xFFFF, PORTS_PIN_MODE_DIGITAL);
+    PLIB_PORTS_ChannelChangeNoticeEnable(PORTS_ID_0, PORT_CHANNEL_C, SYS_PORT_C_CNEN);
+    PLIB_PORTS_ChannelChangeNoticePullUpEnable(PORTS_ID_0, PORT_CHANNEL_C, SYS_PORT_C_CNPU);
+    PLIB_PORTS_ChannelChangeNoticePullDownEnable(PORTS_ID_0, PORT_CHANNEL_C, SYS_PORT_C_CNPD);
+    
+    /* PORT D Initialization */
+    PLIB_PORTS_OpenDrainEnable(PORTS_ID_0, PORT_CHANNEL_D, SYS_PORT_D_ODC);
+    PLIB_PORTS_Write( PORTS_ID_0, PORT_CHANNEL_D,  SYS_PORT_D_LAT);
+    PLIB_PORTS_DirectionOutputSet( PORTS_ID_0, PORT_CHANNEL_D,  SYS_PORT_D_TRIS ^ 0xFFFF);
+    PLIB_PORTS_ChangeNoticePerPortTurnOn(PORTS_ID_0, PORT_CHANNEL_D);
+    PLIB_PORTS_ChannelModeSelect(PORTS_ID_0, PORT_CHANNEL_D, SYS_PORT_D_ANSEL ^ 0xFFFF, PORTS_PIN_MODE_DIGITAL);
+    PLIB_PORTS_ChannelChangeNoticeEnable(PORTS_ID_0, PORT_CHANNEL_D, SYS_PORT_D_CNEN);
+    PLIB_PORTS_ChannelChangeNoticePullUpEnable(PORTS_ID_0, PORT_CHANNEL_D, SYS_PORT_D_CNPU);
+    PLIB_PORTS_ChannelChangeNoticePullDownEnable(PORTS_ID_0, PORT_CHANNEL_D, SYS_PORT_D_CNPD);
+
+    /* PORT F Initialization */
+    PLIB_PORTS_OpenDrainEnable(PORTS_ID_0, PORT_CHANNEL_F, SYS_PORT_F_ODC);
+    PLIB_PORTS_Write( PORTS_ID_0, PORT_CHANNEL_F,  SYS_PORT_F_LAT);
+    PLIB_PORTS_DirectionOutputSet( PORTS_ID_0, PORT_CHANNEL_F,  SYS_PORT_F_TRIS ^ 0xFFFF);
+    PLIB_PORTS_ChangeNoticePerPortTurnOn(PORTS_ID_0, PORT_CHANNEL_F);
+    PLIB_PORTS_ChannelModeSelect(PORTS_ID_0, PORT_CHANNEL_F, SYS_PORT_F_ANSEL ^ 0xFFFF, PORTS_PIN_MODE_DIGITAL);
+    PLIB_PORTS_ChannelChangeNoticeEnable(PORTS_ID_0, PORT_CHANNEL_F, SYS_PORT_F_CNEN);
+    PLIB_PORTS_ChannelChangeNoticePullUpEnable(PORTS_ID_0, PORT_CHANNEL_F, SYS_PORT_F_CNPU);
+    PLIB_PORTS_ChannelChangeNoticePullDownEnable(PORTS_ID_0, PORT_CHANNEL_F, SYS_PORT_F_CNPD);
+    
+    /* PORT G Initialization */
+    PLIB_PORTS_OpenDrainEnable(PORTS_ID_0, PORT_CHANNEL_G, SYS_PORT_G_ODC);
+    PLIB_PORTS_Write( PORTS_ID_0, PORT_CHANNEL_G,  SYS_PORT_G_LAT);
+    PLIB_PORTS_DirectionOutputSet( PORTS_ID_0, PORT_CHANNEL_G,  SYS_PORT_G_TRIS ^ 0xFFFF);
+    PLIB_PORTS_ChangeNoticePerPortTurnOn(PORTS_ID_0, PORT_CHANNEL_G);
+    PLIB_PORTS_ChannelModeSelect(PORTS_ID_0, PORT_CHANNEL_G, SYS_PORT_G_ANSEL ^ 0xFFFF, PORTS_PIN_MODE_DIGITAL);
+    PLIB_PORTS_ChannelChangeNoticeEnable(PORTS_ID_0, PORT_CHANNEL_G, SYS_PORT_G_CNEN);
+    PLIB_PORTS_ChannelChangeNoticePullUpEnable(PORTS_ID_0, PORT_CHANNEL_G, SYS_PORT_G_CNPU);
+    PLIB_PORTS_ChannelChangeNoticePullDownEnable(PORTS_ID_0, PORT_CHANNEL_G, SYS_PORT_G_CNPD);
+
+    /* PPS Input Remapping */
+    PLIB_PORTS_RemapInput(PORTS_ID_0, INPUT_FUNC_SDI4, INPUT_PIN_RPF5 );
+    PLIB_PORTS_RemapInput(PORTS_ID_0, INPUT_FUNC_U4RX, INPUT_PIN_RPF2 );
+
+    /* PPS Output Remapping */
+    PLIB_PORTS_RemapOutput(PORTS_ID_0, OUTPUT_FUNC_SDO4, OUTPUT_PIN_RPG0 );
+    PLIB_PORTS_RemapOutput(PORTS_ID_0, OUTPUT_FUNC_U4TX, OUTPUT_PIN_RPF8 );
+
+    
+}
+
+
+/*******************************************************************************
+ End of File
+*/
diff -ruN /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/FreeRTOSConfig.h /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/FreeRTOSConfig.h
--- /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/FreeRTOSConfig.h	1969-12-31 19:00:00.000000000 -0500
+++ /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/FreeRTOSConfig.h	2015-05-04 10:55:53.000000000 -0400
@@ -0,0 +1,159 @@
+/*
+    FreeRTOS V8.0.1 - Copyright (C) 2014 Real Time Engineers Ltd. 
+    All rights reserved
+
+    VISIT http://www.FreeRTOS.org TO ENSURE YOU ARE USING THE LATEST VERSION.
+
+    ***************************************************************************
+     *                                                                       *
+     *    FreeRTOS provides completely free yet professionally developed,    *
+     *    robust, strictly quality controlled, supported, and cross          *
+     *    platform software that has become a de facto standard.             *
+     *                                                                       *
+     *    Help yourself get started quickly and support the FreeRTOS         *
+     *    project by purchasing a FreeRTOS tutorial book, reference          *
+     *    manual, or both from: http://www.FreeRTOS.org/Documentation        *
+     *                                                                       *
+     *    Thank you!                                                         *
+     *                                                                       *
+    ***************************************************************************
+
+    This file is part of the FreeRTOS distribution.
+
+    FreeRTOS is free software; you can redistribute it and/or modify it under
+    the terms of the GNU General Public License (version 2) as published by the
+    Free Software Foundation >>!AND MODIFIED BY!<< the FreeRTOS exception.
+
+    >>!   NOTE: The modification to the GPL is included to allow you to     !<<
+    >>!   distribute a combined work that includes FreeRTOS without being   !<<
+    >>!   obliged to provide the source code for proprietary components     !<<
+    >>!   outside of the FreeRTOS kernel.                                   !<<
+
+    FreeRTOS is distributed in the hope that it will be useful, but WITHOUT ANY
+    WARRANTY; without even the implied warranty of MERCHANTABILITY or FITNESS
+    FOR A PARTICULAR PURPOSE.  Full license text is available from the following
+    link: http://www.freertos.org/a00114.html
+
+    1 tab == 4 spaces!
+
+    ***************************************************************************
+     *                                                                       *
+     *    Having a problem?  Start by reading the FAQ "My application does   *
+     *    not run, what could be wrong?"                                     *
+     *                                                                       *
+     *    http://www.FreeRTOS.org/FAQHelp.html                               *
+     *                                                                       *
+    ***************************************************************************
+
+    http://www.FreeRTOS.org - Documentation, books, training, latest versions,
+    license and Real Time Engineers Ltd. contact details.
+
+    http://www.FreeRTOS.org/plus - A selection of FreeRTOS ecosystem products,
+    including FreeRTOS+Trace - an indispensable productivity tool, a DOS
+    compatible FAT file system, and our tiny thread aware UDP/IP stack.
+
+    http://www.OpenRTOS.com - Real Time Engineers ltd license FreeRTOS to High
+    Integrity Systems to sell under the OpenRTOS brand.  Low cost OpenRTOS
+    licenses offer ticketed support, indemnification and middleware.
+
+    http://www.SafeRTOS.com - High Integrity Systems also provide a safety
+    engineered and independently SIL3 certified version for use in safety and
+    mission critical applications that require provable dependability.
+
+    1 tab == 4 spaces!
+*/
+
+#ifndef FREERTOS_CONFIG_H
+#define FREERTOS_CONFIG_H
+
+#include <xc.h>
+
+/*-----------------------------------------------------------
+ * Application specific definitions.
+ *
+ * These definitions should be adjusted for your particular hardware and
+ * application requirements.
+ *
+ * THESE PARAMETERS ARE DESCRIBED WITHIN THE 'CONFIGURATION' SECTION OF THE
+ * FreeRTOS API DOCUMENTATION AVAILABLE ON THE FreeRTOS.org WEB SITE.
+ *
+ * See http://www.freertos.org/a00110.html.
+ *----------------------------------------------------------*/
+
+
+#define configUSE_PREEMPTION                    1
+#define configUSE_PORT_OPTIMISED_TASK_SELECTION 1
+#define configUSE_TICKLESS_IDLE                 0
+#define configCPU_CLOCK_HZ                      ( 200000000UL )
+#define configPERIPHERAL_CLOCK_HZ               ( 100000000UL )
+#define configTICK_RATE_HZ                      ( ( TickType_t ) 1000 )
+#define configMAX_PRIORITIES                    ( 10UL )
+#define configMINIMAL_STACK_SIZE                ( 512 )
+#define configISR_STACK_SIZE                    ( 512 )
+#define configTOTAL_HEAP_SIZE                   ( ( size_t ) 40960 )
+#define configMAX_TASK_NAME_LEN                 ( 16 )
+#define configUSE_16_BIT_TICKS                  0
+#define configIDLE_SHOULD_YIELD                 1
+#define configUSE_MUTEXES                       1
+#define configUSE_RECURSIVE_MUTEXES             0
+#define configUSE_COUNTING_SEMAPHORES           1
+#define configUSE_TASK_NOTIFICATIONS            1
+#define configQUEUE_REGISTRY_SIZE               0
+#define configUSE_QUEUE_SETS                    0
+#define configUSE_TIME_SLICING                  0
+#define configUSE_NEWLIB_REENTRANT              0
+#define configENABLE_BACKWARD_COMPATIBILITY     0
+
+/* Hook function related definitions. */
+#define configUSE_IDLE_HOOK                     0
+#define configUSE_TICK_HOOK                     0
+#define configCHECK_FOR_STACK_OVERFLOW          2
+#define configUSE_MALLOC_FAILED_HOOK            1
+
+/* Run time and task stats gathering related definitions. */
+#define configGENERATE_RUN_TIME_STATS           0
+#define configUSE_TRACE_FACILITY                0
+#define configUSE_STATS_FORMATTING_FUNCTIONS    0
+
+/* Co-routine related definitions. */
+#define configUSE_CO_ROUTINES                   0
+#define configMAX_CO_ROUTINE_PRIORITIES         2
+
+/* Software timer related definitions. */
+#define configUSE_TIMERS                        0
+#define configTIMER_TASK_PRIORITY               
+#define configTIMER_QUEUE_LENGTH                
+#define configTIMER_TASK_STACK_DEPTH            
+
+/* Misc */
+#define configUSE_APPLICATION_TASK_TAG          0
+
+
+/* Interrupt nesting behaviour configuration. */
+
+/* The priority at which the tick interrupt runs.  This should probably be kept at 1. */
+#define configKERNEL_INTERRUPT_PRIORITY         1
+
+/* The maximum interrupt priority from which FreeRTOS.org API functions can be called.  
+Only API functions that end in ...FromISR() can be used within interrupts. */
+#define configMAX_SYSCALL_INTERRUPT_PRIORITY    3
+
+/* Optional functions - most linkers will remove unused functions anyway. */
+#define INCLUDE_vTaskPrioritySet                1
+#define INCLUDE_uxTaskPriorityGet               1
+#define INCLUDE_vTaskDelete                     1
+#define INCLUDE_vTaskCleanUpResources           0
+#define INCLUDE_vTaskSuspend                    1
+#define INCLUDE_vTaskDelayUntil                 1
+#define INCLUDE_vTaskDelay                      1
+#define INCLUDE_xTaskGetSchedulerState          0
+#define INCLUDE_xTaskGetCurrentTaskHandle       0
+#define INCLUDE_uxTaskGetStackHighWaterMark     0
+#define INCLUDE_xTaskGetIdleTaskHandle          0
+#define INCLUDE_xTimerGetTimerDaemonTaskHandle  0
+#define INCLUDE_pcTaskGetTaskName               0
+#define INCLUDE_eTaskGetState                   0
+#define INCLUDE_xEventGroupSetBitFromISR        0
+#define INCLUDE_xTimerPendFunctionCall          0
+
+#endif /* FREERTOS_CONFIG_H */
diff -ruN /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/pic32mz_ec_wifire_freertos.mhc /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/pic32mz_ec_wifire_freertos.mhc
--- /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/pic32mz_ec_wifire_freertos.mhc	1969-12-31 19:00:00.000000000 -0500
+++ /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/pic32mz_ec_wifire_freertos.mhc	2015-08-08 19:14:04.237359300 -0400
@@ -0,0 +1,1006 @@
+#
+# Configuration generated by Microchip Harmony Configurator (MHC) v1.0.4.22
+#     Project name:    wifi_easy_configuration
+#     Configuration:   pic32mz_ec_wifire_freertos
+#     Device:          PIC32MZ2048ECH100
+#     Harmony version: 1.05
+#
+#
+# from $PROJECT_FIRMWARE_DIRECTORY/$PROJECT_NAME.hconfig
+#
+CONFIG_APP_INSTANCES=1
+#
+# from $HARMONY_VERSION_PATH/utilities/mhc/config/app_name_idx.ftl
+#
+CONFIG_APP_NAME_0="app"
+CONFIG_APP_TASK_SIZE_IDX0=1024
+CONFIG_APP_TASK_PRIORITY_IDX0=2
+CONFIG_APP_TASK_USE_DELAY_IDX0=y
+CONFIG_APP_TASK_DELAY_IDX0=1
+#
+# from $PROJECT_FIRMWARE_DIRECTORY/$PROJECT_NAME.hconfig
+#
+CONFIG_USE_EXCEPTION_HANDLER=y
+CONFIG_EXCEPTION_USE_SYS_DEBUG=y
+CONFIG_EXCEPTION_BREAKPOINT=y
+#
+# from $HARMONY_VERSION_PATH/framework/config/framework.hconfig
+#
+CONFIG_FW_SYS_TASK_SIZE=2048
+CONFIG_FW_SYS_TASK_PRIORITY=2
+CONFIG_FW_SYS_TASK_USE_DELAY=y
+CONFIG_FW_SYS_TASK_DELAY=1
+#
+# from $HARMONY_VERSION_PATH/framework/bluetooth/config/bluetooth.hconfig
+#
+CONFIG_USE_BLUETOOTH_LIBRARIES=n
+#
+# from $HARMONY_VERSION_PATH/framework/bootloader/config/bootloader.hconfig
+#
+CONFIG_CUSTOM_BOOTLOADER_PROGRAM_SPACE=n
+CONFIG_USE_BOOTLOADER_LIBRARY=n
+#
+# from $HARMONY_VERSION_PATH/framework/crypto/config/crypto.hconfig
+#
+CONFIG_USE_CRYPTO_LIB=y
+#
+# from $HARMONY_VERSION_PATH/framework/crypto/config/crypto_cipher.hconfig
+#
+CONFIG_USE_CRYPTO_CIPHERS=n
+#
+# from $HARMONY_VERSION_PATH/framework/crypto/config/crypto_hash.hconfig
+#
+CONFIG_USE_CRYPTO_HASH=n
+#
+# from $HARMONY_VERSION_PATH/framework/crypto/config/crypto_compress.hconfig
+#
+CONFIG_USE_CRYPTO_COMPRESS=n
+#
+# from $HARMONY_VERSION_PATH/framework/crypto/config/crypto_random.hconfig
+#
+CONFIG_USE_CRYPTO_RANDOM=y
+#
+# from $HARMONY_VERSION_PATH/framework/driver/adc/config/drv_adc.hconfig
+#
+CONFIG_USE_DRV_ADC=n
+#
+# from $HARMONY_VERSION_PATH/framework/driver/camera/ovm7690/config/drv_ovm7690.hconfig
+#
+CONFIG_USE_DRV_OVM7690=n
+#
+# from $HARMONY_VERSION_PATH/framework/driver/can/config/drv_can.hconfig
+#
+CONFIG_USE_DRV_CAN=n
+#
+# from $HARMONY_VERSION_PATH/framework/driver/cmp/config/drv_cmp.hconfig
+#
+CONFIG_DRV_CVREF_ENABLE=n
+CONFIG_USE_DRV_CMP=n
+#
+# from $HARMONY_VERSION_PATH/framework/driver/codec/config/drv_codec.hconfig
+#
+CONFIG_SELECT_DRV_AK4384=n
+CONFIG_SELECT_DRV_AK4642=n
+CONFIG_SELECT_DRV_AK4645=n
+CONFIG_SELECT_DRV_AK4953=n
+#
+# from $HARMONY_VERSION_PATH/framework/driver/ebi/config/drv_ebi.hconfig
+#
+CONFIG_USE_DRV_EBI=n
+#
+# from $HARMONY_VERSION_PATH/framework/driver/encx24j600/config/drv_encx24j600.hconfig
+#
+CONFIG_DRV_ENCX24J600_USE_DRIVER=n
+#
+# from $HARMONY_VERSION_PATH/framework/tcpip/config/tcpip_mac.hconfig
+#
+CONFIG_TCPIP_USE_ETH_MAC=n
+#
+# from $HARMONY_VERSION_PATH/framework/driver/gfx/controller/lcc/config/drv_gfx_lcc.hconfig
+#
+CONFIG_USE_DRV_GFX_LCC=n
+#
+# from $HARMONY_VERSION_PATH/framework/driver/gfx/controller/otm2201a/config/drv_gfx_otm2201a.hconfig
+#
+CONFIG_USE_DRV_GFX_OTM2201A=n
+#
+# from $HARMONY_VERSION_PATH/framework/driver/gfx/controller/ssd1926/config/drv_gfx_ssd1926.hconfig
+#
+CONFIG_USE_DRV_GFX_SSD1926=n
+#
+# from $HARMONY_VERSION_PATH/framework/driver/gfx/controller/ssd1289/config/drv_gfx_ssd1289.hconfig
+#
+CONFIG_USE_DRV_GFX_SSD1289=n
+#
+# from $HARMONY_VERSION_PATH/framework/driver/gfx/controller/s1d13517/config/drv_gfx_s1d13517.hconfig
+#
+CONFIG_USE_DRV_GFX_S1D13517=n
+#
+# from $HARMONY_VERSION_PATH/framework/driver/gfx/controller/tft002/config/drv_gfx_tft002.hconfig
+#
+CONFIG_USE_DRV_GFX_TFT002=n
+#
+# from $HARMONY_VERSION_PATH/framework/driver/gfx/display/config/drv_gfx_display.hconfig
+#
+CONFIG_USE_DRV_GFX_DISPLAY=n
+#
+# from $HARMONY_VERSION_PATH/framework/driver/i2c/config/drv_i2c.hconfig
+#
+CONFIG_USE_DRV_I2C=n
+#
+# from $HARMONY_VERSION_PATH/framework/driver/i2s/config/drv_i2s.hconfig
+#
+CONFIG_USE_DRV_I2S=n
+#
+# from $HARMONY_VERSION_PATH/framework/driver/ic/config/drv_ic.hconfig
+#
+CONFIG_USE_DRV_IC=n
+#
+# from $HARMONY_VERSION_PATH/framework/driver/nvm/config/drv_nvm.hconfig
+#
+CONFIG_USE_DRV_NVM=y
+CONFIG_DRV_NVM_DRIVER_TYPE="BLOCK_DRIVER"
+CONFIG_DRV_NVM_DRIVER_MODE="DYNAMIC"
+CONFIG_DRV_NVM_CLIENTS_NUMBER=2
+CONFIG_DRV_NVM_MEDIA_START_ADDRESS=0x9D000000
+CONFIG_DRV_NVM_MEDIA_SIZE=64
+CONFIG_DRV_NVM_BUFFER_OBJECT_NUMBER=5
+CONFIG_DRV_NVM_INTERRUPT_PRIORITY="INT_PRIORITY_LEVEL4"
+CONFIG_DRV_NVM_INTERRUPT_SUB_PRIORITY="INT_SUBPRIORITY_LEVEL0"
+CONFIG_DRV_NVM_ROW_SIZE=2048
+CONFIG_DRV_NVM_PAGE_SIZE=16384
+CONFIG_DRV_NVM_PROGRAM_UNLOCK_KEY1=0xAA996655
+CONFIG_DRV_NVM_PROGRAM_UNLOCK_KEY2=0x556699AA
+CONFIG_DRV_NVM_POWER_STATE="SYS_MODULE_POWER_RUN_FULL"
+CONFIG_USE_DRV_NVM_ERASE_WRITE=y
+CONFIG_USE_DRV_NVM_SYS_FS_REGISTER=y
+CONFIG_USE_DRV_NVM_DISABLE_ERROR_CHECK=n
+#
+# from $HARMONY_VERSION_PATH/framework/driver/oc/config/drv_oc.hconfig
+#
+CONFIG_USE_DRV_OC=n
+#
+# from $HARMONY_VERSION_PATH/framework/driver/pmp/config/drv_pmp.hconfig
+#
+CONFIG_USE_DRV_PMP=n
+#
+# from $HARMONY_VERSION_PATH/framework/driver/rtcc/config/drv_rtcc.hconfig
+#
+CONFIG_USE_DRV_RTCC=n
+#
+# from $HARMONY_VERSION_PATH/framework/driver/sdcard/config/drv_sdcard.hconfig
+#
+CONFIG_USE_DRV_SDCARD=n
+#
+# from $HARMONY_VERSION_PATH/framework/driver/spi/config/drv_spi.hconfig
+#
+CONFIG_DRV_SPI_USE_DRIVER=y
+CONFIG_DRV_SPI_DRIVER_MODE="DYNAMIC"
+CONFIG_DRV_SPI_USE_ISR_MODE=y
+CONFIG_DRV_SPI_USE_POLLED_MODE=y
+CONFIG_DRV_SPI_USE_MASTER_MODE=y
+CONFIG_DRV_SPI_USE_SLAVE_MODE=n
+CONFIG_DRV_SPI_USE_STANDARD_BUFFER_MODE=n
+CONFIG_DRV_SPI_USE_ENHANCED_BUFFER_MODE=y
+CONFIG_DRV_SPI_USE_8BIT_MODE=y
+CONFIG_DRV_SPI_USE_16BIT_MODE=n
+CONFIG_DRV_SPI_USE_32BIT_MODE=n
+CONFIG_DRV_SPI_USE_DMA=n
+CONFIG_DRV_SPI_INSTANCES_NUMBER=1
+CONFIG_DRV_SPI_CLIENT_NUMBER=1
+CONFIG_DRV_SPI_NUM_ELEMENTS_PER_INSTANCE=10
+#
+# from $HARMONY_VERSION_PATH/framework/driver/spi/config/drv_spi_idx.ftl
+#
+CONFIG_DRV_SPI_IDX0=y
+CONFIG_DRV_SPI_RTOS_IDX0="Combined with System Tasks"
+CONFIG_DRV_SPI_SPI_ID_IDX0="SPI_ID_4"
+CONFIG_DRV_SPI_TASK_MODE_POLLED_IDX0=y
+CONFIG_DRV_SPI_TASK_MODE_ISR_IDX0=n
+CONFIG_DRV_SPI_SPI_MODE_MASTER_IDX0=y
+CONFIG_DRV_SPI_COMM_WIDTH_8_BIT_IDX0=y
+CONFIG_DRV_SPI_BUFFER_ENHANCED_IDX0=y
+CONFIG_DRV_SPI_ALLOW_IDLE_RUN_IDX0=n
+CONFIG_DRV_SPI_SPI_PROTOCOL_TYPE_IDX0="DRV_SPI_PROTOCOL_TYPE_STANDARD"
+CONFIG_DRV_SPI_SPI_CLOCK_IDX0="CLK_BUS_PERIPHERAL_2"
+CONFIG_DRV_SPI_BAUD_RATE_IDX0=8000000
+CONFIG_DRV_SPI_CLOCK_MODE_IDX0="DRV_SPI_CLOCK_MODE_IDLE_HIGH_EDGE_FALL"
+CONFIG_DRV_SPI_INPUT_PHASE_IDX0="SPI_INPUT_SAMPLING_PHASE_AT_END"
+CONFIG_DRV_SPI_QUEUE_SIZE_IDX0=10
+CONFIG_DRV_SPI_RESERVED_JOB_IDX0=1
+#
+# from $HARMONY_VERSION_PATH/framework/driver/sqi/config/drv_sqi.hconfig
+#
+CONFIG_DRV_SQI_USE_DRIVER=n
+#
+# from $HARMONY_VERSION_PATH/framework/driver/spi_flash/sst25vf016b/config/drv_sst25vf016b.hconfig
+#
+CONFIG_USE_DRV_SST25VF016B=n
+#
+# from $HARMONY_VERSION_PATH/framework/driver/spi_flash/sst25vf020b/config/drv_sst25vf020b.hconfig
+#
+CONFIG_USE_DRV_SST25VF020B=n
+#
+# from $HARMONY_VERSION_PATH/framework/driver/spi_flash/sst25vf064c/config/drv_sst25vf064c.hconfig
+#
+CONFIG_USE_DRV_SST25VF064C=n
+#
+# from $HARMONY_VERSION_PATH/framework/driver/tmr/config/drv_tmr.hconfig
+#
+CONFIG_USE_DRV_TMR=y
+CONFIG_DRV_TMR_DRIVER_MODE="DYNAMIC"
+CONFIG_DRV_TMR_CLIENTS_NUMBER=1
+CONFIG_DRV_TMR_INTERRUPT_MODE=y
+CONFIG_DRV_TMR_INSTANCES_NUMBER=1
+#
+# from $HARMONY_VERSION_PATH/framework/driver/tmr/config/drv_tmr_idx.ftl
+#
+CONFIG_DRV_TMR_INST_0=y
+CONFIG_DRV_TMR_PERIPHERAL_ID_IDX0="TMR_ID_2"
+CONFIG_DRV_TMR_RTOS_IDX0="Combined with System Tasks"
+CONFIG_DRV_TMR_INTERRUPT_PRIORITY_IDX0="INT_PRIORITY_LEVEL4"
+CONFIG_DRV_TMR_INTERRUPT_SUB_PRIORITY_IDX0="INT_SUBPRIORITY_LEVEL0"
+CONFIG_DRV_TMR_CLOCK_SOURCE_IDX0="DRV_TMR_CLKSOURCE_INTERNAL"
+CONFIG_DRV_TMR_PRESCALE_IDX0="TMR_PRESCALE_VALUE_256"
+CONFIG_DRV_TMR_OPERATION_MODE_IDX0="DRV_TMR_OPERATION_MODE_16_BIT"
+CONFIG_DRV_TMR_ASYNC_WRITE_ENABLE_IDX0=n
+CONFIG_DRV_TMR_POWER_STATE_IDX0="SYS_MODULE_POWER_RUN_FULL"
+#
+# from $HARMONY_VERSION_PATH/framework/driver/touch/adc10bit/config/drv_adc10bit.hconfig
+#
+CONFIG_USE_DRV_TOUCH_ADC10BIT=n
+#
+# from $HARMONY_VERSION_PATH/framework/driver/touch/mtch6301/config/drv_mtch6301.hconfig
+#
+CONFIG_USE_DRV_TOUCH_MTCH6301=n
+#
+# from $HARMONY_VERSION_PATH/framework/driver/usart/config/drv_usart.hconfig
+#
+CONFIG_USE_DRV_USART=y
+CONFIG_DRV_USART_DRIVER_MODE="DYNAMIC"
+CONFIG_DRV_USART_INTERRUPT_MODE=y
+CONFIG_DRV_USART_BYTE_MODEL_SUPPORT=n
+CONFIG_DRV_USART_READ_WRITE_MODEL_SUPPORT=y
+CONFIG_DRV_USART_BUFFER_QUEUE_SUPPORT=y
+CONFIG_DRV_USART_QUEUE_DEPTH_COMBINED=16
+CONFIG_DRV_USART_SUPPORT_TRANSMIT_DMA=n
+CONFIG_DRV_USART_SUPPORT_RECEIVE_DMA=n
+CONFIG_DRV_USART_CLIENTS_NUMBER=1
+CONFIG_DRV_USART_INSTANCES_NUMBER=1
+#
+# from $HARMONY_VERSION_PATH/framework/driver/usart/config/drv_usart_idx.ftl
+#
+CONFIG_DRV_USART_INST_IDX0=y
+CONFIG_DRV_USART_PERIPHERAL_ID_IDX0="USART_ID_4"
+CONFIG_DRV_USART_RTOS_IDX0="Combined with System Tasks"
+CONFIG_DRV_USART_BAUD_RATE_IDX0=115200
+CONFIG_DRV_USART_XMIT_INT_PRIORITY_IDX0="INT_PRIORITY_LEVEL1"
+CONFIG_DRV_USART_XMIT_INT_SUB_PRIORITY_IDX0="INT_SUBPRIORITY_LEVEL0"
+CONFIG_DRV_USART_RCV_INT_PRIORITY_IDX0="INT_PRIORITY_LEVEL1"
+CONFIG_DRV_USART_RCV_INT_SUB_PRIORITY_IDX0="INT_SUBPRIORITY_LEVEL0"
+CONFIG_DRV_USART_ERR_INT_PRIORITY_IDX0="INT_PRIORITY_LEVEL1"
+CONFIG_DRV_USART_ERR_INT_SUB_PRIORITY_IDX0="INT_SUBPRIORITY_LEVEL0"
+CONFIG_DRV_USART_OPER_MODE_IDX0="DRV_USART_OPERATION_MODE_NORMAL"
+CONFIG_DRV_USART_OPER_MODE_DATA_IDX0=0x00
+CONFIG_DRV_USART_INIT_FLAG_WAKE_ON_START_IDX0=n
+CONFIG_DRV_USART_INIT_FLAG_AUTO_BAUD_IDX0=n
+CONFIG_DRV_USART_INIT_FLAG_STOP_IN_IDLE_IDX0=n
+CONFIG_DRV_USART_BRG_CLOCK_IDX0="100000000"
+CONFIG_DRV_USART_LINE_CNTRL_IDX0="DRV_USART_LINE_CONTROL_8NONE1"
+CONFIG_DRV_USART_HANDSHAKE_MODE_IDX0="DRV_USART_HANDSHAKE_NONE"
+CONFIG_DRV_USART_XMIT_QUEUE_SIZE_IDX0=10
+CONFIG_DRV_USART_RCV_QUEUE_SIZE_IDX0=10
+CONFIG_DRV_USART_POWER_STATE_IDX0="SYS_MODULE_POWER_RUN_FULL"
+#
+# from $HARMONY_VERSION_PATH/framework/driver/wifi/config/drv_wifi.hconfig
+#
+CONFIG_USE_DRV_WIFI=y
+CONFIG_DRV_WIFI_DEVICE="MRF24WG"
+CONFIG_DRV_WIFI_RTOS_INIT_TASK="Standalone"
+CONFIG_DRV_WIFI_RTOS_INIT_TASK_SIZE=512
+CONFIG_DRV_WIFI_RTOS_INIT_TASK_PRIORITY=3
+CONFIG_DRV_WIFI_RTOS_ISR_TASK="Standalone"
+CONFIG_DRV_WIFI_RTOS_ISR_TASK_SIZE=1024
+CONFIG_DRV_WIFI_RTOS_ISR_TASK_PRIORITY=7
+CONFIG_DRV_WIFI_RTOS_MAC_PROCESS_TASK="Standalone"
+CONFIG_DRV_WIFI_RTOS_MAC_PROCESS_TASK_SIZE=1024
+CONFIG_DRV_WIFI_RTOS_MAC_PROCESS_TASK_PRIORITY=3
+CONFIG_DRV_WIFI_RTOS_EASY_CONFIG_TASK="Standalone"
+CONFIG_DRV_WIFI_RTOS_EASY_CONFIG_TASK_SIZE=512
+CONFIG_DRV_WIFI_RTOS_EASY_CONFIG_TASK_PRIORITY=2
+CONFIG_DRV_WIFI_SPI_INSTANCE_INDEX=0
+CONFIG_DRV_WIFI_STORE_CONFIG_IN_NVM=y
+CONFIG_DRV_WIFI_NVM_START_ADDRESS=48
+CONFIG_DRV_WIFI_NETWORK_TYPE="Soft AP"
+CONFIG_DRV_WIFI_SECURITY_MODE_ADHOC_SOFTAP="Open"
+CONFIG_DRV_WIFI_SSID_NAME="MCHPSoftAP"
+#
+# from $HARMONY_VERSION_PATH/framework/gfx/config/gfx.hconfig
+#
+CONFIG_USE_GFX_STACK=n
+#
+# from $HARMONY_VERSION_PATH/framework/math/dsp/config/dsp.hconfig
+#
+CONFIG_USE_DSP=n
+#
+# from $HARMONY_VERSION_PATH/framework/math/libq/config/libq.hconfig
+#
+CONFIG_USE_LIBQ=n
+#
+# from $HARMONY_VERSION_PATH/framework/osal/config/osal.hconfig
+#
+CONFIG_USE_OSAL=y
+#
+# from $HARMONY_VERSION_PATH/framework/peripheral/config/peripheral.hconfig
+#
+CONFIG_PERIPHERAL_LIB=y
+#
+# from $HARMONY_VERSION_PATH/framework/system/clk/config/sys_clk.hconfig
+#
+CONFIG_USE_SYS_CLK=y
+CONFIG_SYS_CLK_MODE="STATIC"
+CONFIG_SYS_CLK_PBDIV0_MZ=2
+CONFIG_SYS_CLK_PBCLK1_ENABLE=y
+CONFIG_SYS_CLK_PBDIV1=2
+CONFIG_SYS_CLK_PBCLK2_ENABLE=y
+CONFIG_SYS_CLK_PBDIV2=2
+CONFIG_SYS_CLK_PBCLK3_ENABLE=y
+CONFIG_SYS_CLK_PBDIV3=2
+CONFIG_SYS_CLK_PBCLK4_ENABLE=y
+CONFIG_SYS_CLK_PBDIV4=2
+CONFIG_SYS_CLK_PBCLK6_ENABLE=y
+CONFIG_SYS_CLK_PBDIV6=1
+CONFIG_SYS_CLK_PBCLK7_ENABLE=y
+CONFIG_SYS_CLK_PBDIV7=2
+CONFIG_SYS_CLK_REFCLK0_ENABLE=n
+CONFIG_SYS_CLK_REFCLK1_ENABLE=n
+CONFIG_SYS_CLK_REFCLK2_ENABLE=n
+CONFIG_SYS_CLK_REFCLK3_ENABLE=n
+CONFIG_SYS_CLK_CONFIG_PRIMARY_XTAL="24000000"
+CONFIG_SYS_CLK_CONFIG_SECONDARY_XTAL="32768"
+CONFIG_SYS_CLK_FREQ="200000000"
+CONFIG_SYS_CLK_PBCLK0_FREQ="100000000"
+CONFIG_SYS_CLK_PBCLK1_FREQ="100000000"
+CONFIG_SYS_CLK_PBCLK2_FREQ="100000000"
+CONFIG_SYS_CLK_PBCLK3_FREQ="100000000"
+CONFIG_SYS_CLK_PBCLK4_FREQ="100000000"
+CONFIG_SYS_CLK_PBCLK6_FREQ="200000000"
+CONFIG_SYS_CLK_PBCLK7_FREQ="100000000"
+#
+# from $HARMONY_VERSION_PATH/framework/system/command/config/sys_command.hconfig
+#
+CONFIG_USE_SYS_COMMAND=y
+CONFIG_SYS_COMMAND_RTOS="Combined with System Tasks"
+CONFIG_COMMAND_PRINT_BUFFER_SIZE=512
+CONFIG_REMAP_SYS_DEBUG_MESSAGE=y
+CONFIG_REMAP_SYS_CONSOLE_MESSAGE=y
+#
+# from $HARMONY_VERSION_PATH/framework/system/common/config/sys_common.hconfig
+#
+CONFIG_USE_SYS_COMMON=y
+CONFIG_SYS_BUFFER=y
+CONFIG_SYS_QUEUE=y
+#
+# from $HARMONY_VERSION_PATH/framework/system/console/config/sys_console.hconfig
+#
+CONFIG_USE_SYS_CONSOLE=y
+CONFIG_SYS_CONSOLE_MODE="DYNAMIC"
+CONFIG_SYS_CONSOLE_OVERRIDE_STDIO=y
+CONFIG_SYS_CONSOLE_INSTANCES_NUMBER_DYNAMIC=1
+CONFIG_SYS_CONSOLE_SOURCE_IDX0="UART_CONSOLE"
+CONFIG_SYS_CONSOLE_RTOS_IDX0="Combined with System Tasks"
+CONFIG_SYS_CONSOLE_UART_RD_QUEUE_DEPTH=1
+CONFIG_SYS_CONSOLE_UART_WR_QUEUE_DEPTH=128
+#
+# from $HARMONY_VERSION_PATH/framework/system/debug/config/sys_debug.hconfig
+#
+CONFIG_USE_SYS_DEBUG=y
+CONFIG_SYS_ERR_LEVEL="SYS_ERROR_FATAL"
+CONFIG_DEBUG_PRINT_BUFFER_SIZE=512
+#
+# from $HARMONY_VERSION_PATH/framework/system/devcon/config/sys_devcon.hconfig
+#
+CONFIG_USE_SYS_DEVCON=y
+CONFIG_SYS_DEVCON_RTOS="Combined with System Tasks"
+CONFIG_SYS_DEVCON_USE_JTAG=n
+CONFIG_SYS_DEVCON_USE_TRACE=n
+#
+# from $HARMONY_VERSION_PATH/framework/system/dma/config/sys_dma.hconfig
+#
+CONFIG_USE_SYS_DMA=n
+#
+# from $HARMONY_VERSION_PATH/framework/system/fs/config/sys_fs.hconfig
+#
+CONFIG_USE_SYS_FS=y
+CONFIG_SYS_FS_RTOS="Combined with System Tasks"
+CONFIG_SYS_FS_MAX_FILES=25
+CONFIG_SYS_FS_MEDIA_MAX_BLOCK_SIZE=2048
+CONFIG_SYS_FS_MEDIA_MANAGER_BUFFER_SIZE=2048
+CONFIG_SYS_FS_AUTO_MOUNT=n
+CONFIG_SYS_FS_INSTANCES_NUMBER=1
+CONFIG_SYS_FS_VOLUME_NUMBER=5
+#
+# from $HARMONY_VERSION_PATH/framework/system/fs/config/sys_fs_idx.ftl
+#
+CONFIG_SYS_FS_IDX0=y
+#
+# from $HARMONY_VERSION_PATH/framework/system/fs/config/sys_fs.hconfig
+#
+CONFIG_SYS_FS_MAX_FILE_SYSTEM_TYPE=1
+CONFIG_SYS_FS_FAT=n
+CONFIG_SYS_FS_MPFS=y
+#
+# from $HARMONY_VERSION_PATH/framework/system/int/config/sys_int.hconfig
+#
+CONFIG_USE_SYS_INT=y
+CONFIG_USE_EXT_INT=n
+#
+# from $HARMONY_VERSION_PATH/framework/system/msg/config/sys_msg.hconfig
+#
+CONFIG_USE_SYS_MSG=n
+#
+# from $HARMONY_VERSION_PATH/framework/system/ports/config/sys_ports.hconfig
+#
+CONFIG_USE_SYS_PORTS=y
+CONFIG_COMPONENT_PACKAGE=""
+CONFIG_USE_SYS_PORTS_CN_INTERRUPT=n
+#
+# from $HARMONY_VERSION_PATH/framework/system/ports/config/sys_ports_idx.ftl
+#
+CONFIG_USE_PORT_A=y
+CONFIG_SYS_PORT_A_ANSEL=0x603
+CONFIG_SYS_PORT_A_TRIS=0xc6ff
+CONFIG_SYS_PORT_A_LAT=0x0
+CONFIG_SYS_PORT_A_ODC=0x0
+CONFIG_SYS_PORT_A_CNPU=0x0
+CONFIG_SYS_PORT_A_CNPD=0x0
+CONFIG_SYS_PORT_A_CNEN=0x0
+CONFIG_USE_PORT_B=y
+CONFIG_SYS_PORT_B_ANSEL=0xf7fe
+CONFIG_SYS_PORT_B_TRIS=0xffff
+CONFIG_SYS_PORT_B_LAT=0x0
+CONFIG_SYS_PORT_B_ODC=0x0
+CONFIG_SYS_PORT_B_CNPU=0x0
+CONFIG_SYS_PORT_B_CNPD=0x0
+CONFIG_SYS_PORT_B_CNEN=0x0
+CONFIG_USE_PORT_C=y
+CONFIG_SYS_PORT_C_ANSEL=0xe01e
+CONFIG_SYS_PORT_C_TRIS=0xf01e
+CONFIG_SYS_PORT_C_LAT=0x0
+CONFIG_SYS_PORT_C_ODC=0x0
+CONFIG_SYS_PORT_C_CNPU=0x0
+CONFIG_SYS_PORT_C_CNPD=0x0
+CONFIG_SYS_PORT_C_CNEN=0x0
+CONFIG_USE_PORT_D=y
+CONFIG_SYS_PORT_D_ANSEL=0xc000
+CONFIG_SYS_PORT_D_TRIS=0xfc3f
+CONFIG_SYS_PORT_D_LAT=0x0
+CONFIG_SYS_PORT_D_ODC=0x0
+CONFIG_SYS_PORT_D_CNPU=0x0
+CONFIG_SYS_PORT_D_CNPD=0x0
+CONFIG_SYS_PORT_D_CNEN=0x0
+CONFIG_SYS_PORT_E_ANSEL=0x3f0
+CONFIG_SYS_PORT_E_TRIS=0x3ff
+CONFIG_SYS_PORT_E_LAT=0x0
+CONFIG_SYS_PORT_E_ODC=0x0
+CONFIG_SYS_PORT_E_CNPU=0x0
+CONFIG_SYS_PORT_E_CNPD=0x0
+CONFIG_SYS_PORT_E_CNEN=0x0
+CONFIG_USE_PORT_F=y
+CONFIG_SYS_PORT_F_ANSEL=0x3000
+CONFIG_SYS_PORT_F_TRIS=0x312f
+CONFIG_SYS_PORT_F_LAT=0x0
+CONFIG_SYS_PORT_F_ODC=0x0
+CONFIG_SYS_PORT_F_CNPU=0x0
+CONFIG_SYS_PORT_F_CNPD=0x0
+CONFIG_SYS_PORT_F_CNEN=0x0
+CONFIG_USE_PORT_G=y
+CONFIG_SYS_PORT_G_ANSEL=0x380
+CONFIG_SYS_PORT_G_TRIS=0xf3c1
+CONFIG_SYS_PORT_G_LAT=0x0
+CONFIG_SYS_PORT_G_ODC=0x0
+CONFIG_SYS_PORT_G_CNPU=0x0
+CONFIG_SYS_PORT_G_CNPD=0x0
+CONFIG_SYS_PORT_G_CNEN=0x0
+#
+# from $HARMONY_VERSION_PATH/framework/system/ports/config/sys_ports_pps_input_idx.ftl
+#
+CONFIG_USE_PPS_INPUT_0=y
+CONFIG_SYS_PORT_PPS_INPUT_FUNCTION_0="INPUT_FUNC_SDI4"
+CONFIG_SYS_PORT_PPS_INPUT_PIN_0="INPUT_PIN_RPF5"
+CONFIG_USE_PPS_INPUT_1=y
+CONFIG_SYS_PORT_PPS_INPUT_FUNCTION_1="INPUT_FUNC_U4RX"
+CONFIG_SYS_PORT_PPS_INPUT_PIN_1="INPUT_PIN_RPF2"
+#
+# from $HARMONY_VERSION_PATH/framework/system/ports/config/sys_ports_pps_output_idx.ftl
+#
+CONFIG_USE_PPS_OUTPUT_0=y
+CONFIG_SYS_PORT_PPS_OUTPUT_FUNCTION_0="OUTPUT_FUNC_SDO4"
+CONFIG_SYS_PORT_PPS_OUTPUT_PIN_0="OUTPUT_PIN_RPG0"
+CONFIG_USE_PPS_OUTPUT_1=y
+CONFIG_SYS_PORT_PPS_OUTPUT_FUNCTION_1="OUTPUT_FUNC_U4TX"
+CONFIG_SYS_PORT_PPS_OUTPUT_PIN_1="OUTPUT_PIN_RPF8"
+#
+# from $HARMONY_VERSION_PATH/framework/system/random/config/sys_random.hconfig
+#
+CONFIG_USE_SYS_RANDOM=y
+CONFIG_SYS_RANDOM_CRYPTO_SEED_SIZE=55
+#
+# from $HARMONY_VERSION_PATH/framework/system/reset/config/sys_reset.hconfig
+#
+CONFIG_USE_SYS_RESET=y
+#
+# from $HARMONY_VERSION_PATH/framework/system/touch/config/sys_touch.hconfig
+#
+CONFIG_USE_SYS_TOUCH=n
+#
+# from $HARMONY_VERSION_PATH/framework/system/tmr/config/sys_tmr.hconfig
+#
+CONFIG_USE_SYS_TMR=y
+CONFIG_SYS_TMR_RTOS="Combined with System Tasks"
+CONFIG_SYS_TMR_POWER_STATE="SYS_MODULE_POWER_RUN_FULL"
+CONFIG_SYS_TMR_DRIVER_INDEX="DRV_TMR_INDEX_0"
+CONFIG_SYS_TMR_MAX_CLIENT_OBJECTS=5
+CONFIG_SYS_TMR_FREQUENCY=1000
+CONFIG_SYS_TMR_FREQUENCY_TOLERANCE=10
+CONFIG_SYS_TMR_UNIT_RESOLUTION=10000
+CONFIG_SYS_TMR_CLIENT_TOLERANCE=10
+CONFIG_SYS_TMR_INTERRUPT_NOTIFICATION=y
+#
+# from $HARMONY_VERSION_PATH/framework/system/wdt/config/sys_wdt.hconfig
+#
+CONFIG_USE_SYS_WDT=n
+#
+# from $HARMONY_VERSION_PATH/framework/tcpip/config/tcpip_stack.hconfig
+#
+CONFIG_USE_TCPIP_STACK=y
+CONFIG_TCPIP_RTOS="Combined with System Tasks"
+CONFIG_TCPIP_STACK_USE_IPV4=y
+CONFIG_TCPIP_STACK_USE_IPV6=n
+CONFIG_TCPIP_USE_TCP=y
+#
+# from $HARMONY_VERSION_PATH/framework/tcpip/config/tcp.hconfig
+#
+CONFIG_TCPIP_TCP_MAX_SEG_SIZE_TX=1460
+CONFIG_TCPIP_TCP_MAX_SEG_SIZE_RX_LOCAL=1460
+CONFIG_TCPIP_TCP_MAX_SEG_SIZE_RX_NON_LOCAL=536
+CONFIG_TCPIP_TCP_SOCKET_DEFAULT_TX_SIZE=512
+CONFIG_TCPIP_TCP_SOCKET_DEFAULT_RX_SIZE=512
+CONFIG_TCPIP_TCP_START_TIMEOUT_VAL=1000
+CONFIG_TCPIP_TCP_DELAYED_ACK_TIMEOUT=100
+CONFIG_TCPIP_TCP_FIN_WAIT_2_TIMEOUT=5000
+CONFIG_TCPIP_TCP_KEEP_ALIVE_TIMEOUT=10000
+CONFIG_TCPIP_TCP_CLOSE_WAIT_TIMEOUT=200
+CONFIG_TCPIP_TCP_MAX_RETRIES=5
+CONFIG_TCPIP_TCP_MAX_UNACKED_KEEP_ALIVES=6
+CONFIG_TCPIP_TCP_MAX_SYN_RETRIES=2
+CONFIG_TCPIP_TCP_AUTO_TRANSMIT_TIMEOUT_VAL=40
+CONFIG_TCPIP_TCP_WINDOW_UPDATE_TIMEOUT_VAL=200
+CONFIG_TCPIP_TCP_MAX_SOCKETS=10
+CONFIG_TCPIP_TCP_TASK_TICK_RATE=5
+#
+# from $HARMONY_VERSION_PATH/framework/tcpip/config/tcpip_stack.hconfig
+#
+CONFIG_TCPIP_USE_UDP=y
+#
+# from $HARMONY_VERSION_PATH/framework/tcpip/config/udp.hconfig
+#
+CONFIG_TCPIP_UDP_MAX_SOCKETS=10
+CONFIG_TCPIP_UDP_SOCKET_DEFAULT_TX_SIZE=512
+CONFIG_TCPIP_UDP_USE_TX_CHECKSUM=y
+CONFIG_TCPIP_UDP_USE_RX_CHECKSUM=y
+CONFIG_TCPIP_UDP_SOCKET_DEFAULT_TX_QUEUE_LIMIT=3
+CONFIG_TCPIP_UDP_SOCKET_DEFAULT_RX_QUEUE_LIMIT=5
+CONFIG_TCPIP_UDP_SOCKET_POOL_BUFFERS=4
+CONFIG_TCPIP_UDP_SOCKET_POOL_BUFFER_SIZE=512
+#
+# from $HARMONY_VERSION_PATH/framework/tcpip/config/tcpip_stack.hconfig
+#
+CONFIG_TCPIP_STACK_USE_ICMP_CLIENT=y
+CONFIG_TCPIP_STACK_NETWORK_CONFIG_NUMBER=1
+#
+# from $HARMONY_VERSION_PATH/framework/tcpip/config/network_config_idx.ftl
+#
+CONFIG_TCPIP_STACK_NETWORK_CONFIG_IDX0=y
+CONFIG_TCPIP_NETWORK_DEFAULT_INTERFACE_NAME_IDX0="MRF24W"
+CONFIG_TCPIP_NETWORK_DEFAULT_HOST_NAME_IDX0="MCHPBOARD_W"
+CONFIG_TCPIP_NETWORK_DEFAULT_MAC_ADDR_IDX0=""
+CONFIG_TCPIP_NETWORK_DEFAULT_IP_ADDRESS_IDX0="192.168.1.20"
+CONFIG_TCPIP_NETWORK_DEFAULT_IP_MASK_IDX0="255.255.255.0"
+CONFIG_TCPIP_NETWORK_DEFAULT_GATEWAY_IDX0="192.168.1.1"
+CONFIG_TCPIP_NETWORK_DEFAULT_DNS_IDX0="192.168.1.1"
+CONFIG_TCPIP_NETWORK_DEFAULT_SECOND_DNS_IDX0="0.0.0.0"
+CONFIG_TCPIP_NETWORK_DEFAULT_POWER_MODE_IDX0="full"
+CONFIG_TCPIP_NETWORK_DEFAULT_INTERFACE_FLAGS_IDX0="TCPIP_NETWORK_CONFIG_DHCP_CLIENT_ON"
+CONFIG_TCPIP_NETWORK_DEFAULT_IPV6_ADDRESS_IDX0=""
+CONFIG_TCPIP_NETWORK_DEFAULT_IPV6_PREFIX_LENGTH_IDX0=0
+CONFIG_TCPIP_NETWORK_DEFAULT_IPV6_GATEWAY_IDX0=""
+#
+# from $HARMONY_VERSION_PATH/framework/tcpip/config/tcpip_stack.hconfig
+#
+CONFIG_TCPIP_STACK_TICK_RATE=5
+CONFIG_TCPIP_STACK_DRAM_SIZE=39250
+CONFIG_TCPIP_STACK_DRAM_RUN_LIMIT=2048
+CONFIG_TCPIP_STACK_DRAM_DEBUG_ENABLE=y
+CONFIG_TCPIP_STACK_DRAM_TRACE_ENABLE=n
+CONFIG_TCPIP_STACK_MALLOC_FUNC="malloc"
+CONFIG_TCPIP_STACK_CALLOC_FUNC="calloc"
+CONFIG_TCPIP_STACK_FREE_FUNC="free"
+CONFIG_TCPIP_ENABLE_SYS_CONSOLE_DEBUG=n
+#
+# from $HARMONY_VERSION_PATH/framework/tcpip/config/arp.hconfig
+#
+CONFIG_TCPIP_ARP_CACHE_ENTRIES=5
+CONFIG_TCPIP_ARP_CACHE_DELETE_OLD=y
+CONFIG_TCPIP_ARP_CACHE_SOLVED_ENTRY_TMO=1200
+CONFIG_TCPIP_ARP_CACHE_PENDING_ENTRY_TMO=60
+CONFIG_TCPIP_ARP_CACHE_PENDING_RETRY_TMO=2
+CONFIG_TCPIP_ARP_CACHE_PERMANENT_QUOTA=50
+CONFIG_TCPIP_ARP_CACHE_PURGE_THRESHOLD=75
+CONFIG_TCPIP_ARP_CACHE_PURGE_QUANTA=1
+CONFIG_TCPIP_ARP_CACHE_ENTRY_RETRIES=3
+CONFIG_TCPIP_ARP_GRATUITOUS_PROBE_COUNT=1
+CONFIG_TCPIP_ARP_TASK_PROCESS_RATE=2
+#
+# from $HARMONY_VERSION_PATH/framework/tcpip/config/berkeley_api.hconfig
+#
+CONFIG_TCPIP_STACK_USE_BERKELEY_API=n
+#
+# from $HARMONY_VERSION_PATH/framework/tcpip/config/dhcp.hconfig
+#
+CONFIG_TCPIP_STACK_USE_DHCP_CLIENT=y
+CONFIG_TCPIP_DHCP_TIMEOUT=2
+CONFIG_TCPIP_DHCP_TASK_TICK_RATE=200
+CONFIG_TCPIP_DHCP_CLIENT_ENABLED=y
+CONFIG_TCPIP_DHCP_CLIENT_CONNECT_PORT=68
+CONFIG_TCPIP_DHCP_SERVER_LISTEN_PORT=67
+#
+# from $HARMONY_VERSION_PATH/framework/tcpip/config/dhcps.hconfig
+#
+CONFIG_TCPIP_STACK_USE_DHCP_SERVER=y
+CONFIG_TCPIP_DHCPS_TASK_PROCESS_RATE=200
+CONFIG_TCPIP_DHCPS_LEASE_ENTRIES_DEFAULT=15
+CONFIG_TCPIP_DHCPS_LEASE_SOLVED_ENTRY_TMO=1200
+CONFIG_TCPIP_DHCPS_LEASE_REMOVED_BEFORE_ACK=5
+CONFIG_TCPIP_DHCP_SERVER_DELETE_OLD_ENTRIES=y
+CONFIG_TCPIP_DHCP_SERVER_INSTANCES_NUMBER=1
+#
+# from $HARMONY_VERSION_PATH/framework/tcpip/config/dhcps_idx.ftl
+#
+CONFIG_TCPIP_DHCP_SERVER_IDX0=y
+CONFIG_TCPIP_DHCPS_DEFAULT_IP_ADDRESS_RANGE_START_IDX0="192.168.1.100"
+CONFIG_TCPIP_DHCPS_DEFAULT_SERVER_IP_ADDRESS_IDX0="192.168.1.1"
+CONFIG_TCPIP_DHCPS_DEFAULT_SERVER_NETMASK_ADDRESS_IDX0="255.255.255.0"
+CONFIG_TCPIP_DHCPS_DEFAULT_SERVER_GATEWAY_ADDRESS_IDX0="192.168.1.1"
+CONFIG_TCPIP_DHCPS_DEFAULT_SERVER_PRIMARY_DNS_ADDRESS_IDX0="192.168.1.1"
+CONFIG_TCPIP_DHCPS_DEFAULT_SERVER_SECONDARY_DNS_ADDRESS_IDX0="192.168.1.1"
+CONFIG_TCPIP_DHCP_SERVER_INTERFACE_INDEX_IDX0=0
+CONFIG_TCPIP_DHCP_SERVER_POOL_ENABLED_IDX0=y
+#
+# from $HARMONY_VERSION_PATH/framework/tcpip/config/dns.hconfig
+#
+CONFIG_TCPIP_USE_DNS_CLIENT=y
+CONFIG_TCPIP_DNS_CLIENT_SERVER_TMO=60
+CONFIG_TCPIP_DNS_CLIENT_TASK_PROCESS_RATE=200
+CONFIG_TCPIP_DNS_CLIENT_CACHE_ENTRIES=5
+CONFIG_TCPIP_DNS_CLIENT_CACHE_ENTRY_TMO=0
+CONFIG_TCPIP_DNS_CLIENT_CACHE_PER_IPV4_ADDRESS=5
+CONFIG_TCPIP_DNS_CLIENT_CACHE_PER_IPV6_ADDRESS=1
+CONFIG_TCPIP_DNS_CLIENT_OPEN_ADDRESS_TYPE="IP_ADDRESS_TYPE_IPV4"
+CONFIG_TCPIP_DNS_CLIENT_CACHE_DEFAULT_TTL_VAL=1200
+CONFIG_TCPIP_DNS_CLIENT_CACHE_UNSOLVED_ENTRY_TMO=10
+CONFIG_TCPIP_DNS_CLIENT_LOOKUP_RETRY_TMO=5
+CONFIG_TCPIP_DNS_CLIENT_MAX_HOSTNAME_LEN=32
+CONFIG_TCPIP_DNS_CLIENT_DELETE_OLD_ENTRIES=y
+#
+# from $HARMONY_VERSION_PATH/framework/tcpip/config/dnss.hconfig
+#
+CONFIG_TCPIP_USE_DNSS=y
+CONFIG_TCPIP_DNSS_HOST_NAME_LEN=64
+CONFIG_TCPIP_DNSS_REPLY_BOARD_ADDR=y
+CONFIG_TCPIP_DNSS_CACHE_PER_IPV4_ADDRESS=2
+CONFIG_TCPIP_DNSS_TTL_TIME=600
+CONFIG_TCPIP_DNSS_TASK_PROCESS_RATE=33
+CONFIG_TCPIP_DNSS_DELETE_OLD_LEASE=y
+#
+# from $HARMONY_VERSION_PATH/framework/tcpip/config/ddns.hconfig
+#
+CONFIG_TCPIP_USE_DDNS=n
+#
+# from $HARMONY_VERSION_PATH/framework/tcpip/config/ftp.hconfig
+#
+CONFIG_TCPIP_USE_FTP_MODULE=n
+#
+# from $HARMONY_VERSION_PATH/framework/tcpip/config/http.hconfig
+#
+CONFIG_TCPIP_STACK_USE_HTTP_SERVER=y
+CONFIG_TCPIP_HTTP_MAX_HEADER_LEN=15
+CONFIG_TCPIP_HTTP_CACHE_LEN="600"
+CONFIG_TCPIP_HTTP_TIMEOUT=45
+CONFIG_TCPIP_HTTP_MAX_CONNECTIONS=4
+CONFIG_TCPIP_HTTP_DEFAULT_FILE="index.htm"
+CONFIG_TCPIP_HTTPS_DEFAULT_FILE="index.htm"
+CONFIG_TCPIP_HTTP_DEFAULT_LEN=10
+CONFIG_TCPIP_HTTP_FILE_UPLOAD_ENABLE=y
+CONFIG_TCPIP_HTTP_FILE_UPLOAD_NAME="mpfsupload"
+CONFIG_TCPIP_HTTP_USE_POST=y
+CONFIG_TCPIP_HTTP_USE_COOKIES=y
+CONFIG_TCPIP_STACK_USE_BASE64_DECODE=y
+CONFIG_TCPIP_HTTP_USE_AUTHENTICATION=y
+CONFIG_TCPIP_HTTP_NO_AUTH_WITHOUT_SSL=n
+CONFIG_TCPIP_HTTP_MAX_DATA_LEN=100
+CONFIG_TCPIP_HTTP_MIN_CALLBACK_FREE=16
+CONFIG_TCPIP_HTTP_SKT_TX_BUFF_SIZE=0
+CONFIG_TCPIP_HTTP_SKT_RX_BUFF_SIZE=0
+CONFIG_TCPIP_HTTP_CFG_FLAGS="TCPIP_HTTP_MODULE_FLAG_ADJUST_SKT_FIFOS"
+CONFIG_TCPIP_HTTP_TASK_RATE=33
+CONFIG_TCPIP_HTTP_CUSTOM_TEMPLATE=y
+#
+# from $HARMONY_VERSION_PATH/framework/tcpip/config/icmp.hconfig
+#
+CONFIG_TCPIP_STACK_USE_ICMP_SERVER=y
+#
+# from $HARMONY_VERSION_PATH/framework/tcpip/config/nbns.hconfig
+#
+CONFIG_TCPIP_USE_NBNS=y
+CONFIG_TCPIP_NBNS_TASK_TICK_RATE=110
+#
+# from $HARMONY_VERSION_PATH/framework/tcpip/config/tcpip_reboot.hconfig
+#
+CONFIG_TCPIP_USE_REBOOT_SERVER=n
+#
+# from $HARMONY_VERSION_PATH/framework/tcpip/config/smtp.hconfig
+#
+CONFIG_TCPIP_USE_SMTP_CLIENT=n
+#
+# from $HARMONY_VERSION_PATH/framework/tcpip/config/snmp.hconfig
+#
+CONFIG_TCPIP_USE_SNMP=n
+#
+# from $HARMONY_VERSION_PATH/framework/tcpip/config/sntp.hconfig
+#
+CONFIG_TCPIP_USE_SNTP_CLIENT=n
+#
+# from $HARMONY_VERSION_PATH/framework/tcpip/config/telnet.hconfig
+#
+CONFIG_TCPIP_USE_TELNET=n
+#
+# from $HARMONY_VERSION_PATH/framework/tcpip/config/zeroconf.hconfig
+#
+CONFIG_TCPIP_USE_LINK_ZERO_CONFIG=y
+CONFIG_TCPIP_ZC_WARN_ZCLL=n
+CONFIG_TCPIP_ZC_INFO_ZCLL=n
+CONFIG_TCPIP_ZC_DEBUG_ZCLL=n
+CONFIG_TCPIP_ZC_LL_PROBE_WAIT=1
+CONFIG_TCPIP_ZC_LL_PROBE_MIN=1
+CONFIG_TCPIP_ZC_LL_PROBE_MAX=2
+CONFIG_TCPIP_ZC_LL_PROBE_NUM=3
+CONFIG_TCPIP_ZC_LL_ANNOUNCE_WAIT=2
+CONFIG_TCPIP_ZC_LL_ANNOUNCE_NUM=2
+CONFIG_TCPIP_ZC_LL_ANNOUNCE_INTERVAL=2
+CONFIG_TCPIP_ZC_LL_MAX_CONFLICTS=10
+CONFIG_TCPIP_ZC_LL_RATE_LIMIT_INTERVAL=60
+CONFIG_TCPIP_ZC_LL_DEFEND_INTERVAL=10
+CONFIG_TCPIP_ZC_LL_IPV4_LLBASE=0xa9fe0100
+CONFIG_TCPIP_ZC_LL_IPV4_LLBASE_MASK=0x0000FFFF
+CONFIG_TCPIP_ZC_LL_TASK_TICK_RATE=333
+CONFIG_TCPIP_USE_MULTI_CAST_DNS_ZERO_CONFIG=y
+CONFIG_TCPIP_ZC_INFO_MDNS=n
+CONFIG_TCPIP_ZC_WARN_MDNS=n
+CONFIG_TCPIP_ZC_DEBUG_MDNS=n
+CONFIG_TCPIP_ZC_MDNS_TASK_TICK_RATE=63
+CONFIG_TCPIP_ZC_MDNS_PORT=5353
+CONFIG_TCPIP_ZC_MDNS_MAX_HOST_NAME_SIZE=32
+CONFIG_TCPIP_ZC_MDNS_MAX_LABEL_SIZE=64
+CONFIG_TCPIP_ZC_MDNS_MAX_RR_NAME_SIZE=256
+CONFIG_TCPIP_ZC_MDNS_MAX_SRV_TYPE_SIZE=32
+CONFIG_TCPIP_ZC_MDNS_MAX_SRV_NAME_SIZE=64
+CONFIG_TCPIP_ZC_MDNS_MAX_TXT_DATA_SIZE=128
+CONFIG_TCPIP_ZC_MDNS_RESOURCE_RECORD_TTL_VAL=3600
+CONFIG_TCPIP_ZC_MDNS_MAX_RR_NUM=4
+CONFIG_TCPIP_ZC_MDNS_PROBE_WAIT=750
+CONFIG_TCPIP_ZC_MDNS_PROBE_INTERVAL=250
+CONFIG_TCPIP_ZC_MDNS_PROBE_NUM=3
+CONFIG_TCPIP_ZC_MDNS_MAX_PROBE_CONFLICT_NUM=30
+CONFIG_TCPIP_ZC_MDNS_ANNOUNCE_NUM=3
+CONFIG_TCPIP_ZC_MDNS_ANNOUNCE_INTERVAL=250
+CONFIG_TCPIP_ZC_MDNS_ANNOUNCE_WAIT=250
+#
+# from $HARMONY_VERSION_PATH/framework/tcpip/config/tcpip_announce.hconfig
+#
+CONFIG_TCPIP_USE_ANNOUNCE=y
+CONFIG_TCPIP_ANNOUNCE_MAX_PAYLOAD=512
+CONFIG_TCPIP_ANNOUNCE_TASK_RATE=333
+#
+# from $HARMONY_VERSION_PATH/framework/tcpip/config/iperf.hconfig
+#
+CONFIG_TCPIP_USE_IPERF=n
+#
+# from $HARMONY_VERSION_PATH/framework/tcpip/config/tcpip_cmd.hconfig
+#
+CONFIG_TCPIP_STACK_USE_COMMANDS=y
+CONFIG_TCPIP_STACK_COMMANDS_STORAGE_ENABLE=y
+CONFIG_TCPIP_STACK_COMMANDS_ICMP_ECHO_REQUESTS=4
+CONFIG_TCPIP_STACK_COMMANDS_ICMP_ECHO_REQUEST_DELAY=1000
+CONFIG_TCPIP_STACK_COMMANDS_ICMP_ECHO_TIMEOUT=5000
+CONFIG_TCPIP_STACK_COMMANDS_WIFI_ENABLE=y
+#
+# from $HARMONY_VERSION_PATH/framework/tcpip/config/tftpc.hconfig
+#
+CONFIG_TCPIP_USE_TFTPC_MODULE=n
+#
+# from $HARMONY_VERSION_PATH/framework/tcpip/config/sys_fs_wrapper.hconfig
+#
+CONFIG_TCPIP_SYS_FS_MAX_PATH=80
+CONFIG_TCPIP_LOCAL_WEBSITE_PATH="/mnt/mchpSite1"
+CONFIG_TCPIP_SYS_FS_DRIVE="FLASH"
+CONFIG_TCPIP_SYS_FS_NVM_VOL="/dev/nvma1"
+CONFIG_TCPIP_SYS_FS_SD_VOL="/dev/mmcblka1"
+#
+# from $HARMONY_VERSION_PATH/framework/usb/config/usb.hconfig
+#
+CONFIG_USE_USB_STACK=n
+#
+# from $HARMONY_VERSION_PATH/framework/sample/config/sample_module.hconfig
+#
+CONFIG_USE_SAMPLE_MODULE=n
+#
+# from $HARMONY_VERSION_PATH/framework/test/config/test.hconfig
+#
+CONFIG_USE_TEST_HARNESS=n
+#
+# from $HARMONY_VERSION_PATH/framework/decoder/config/decoder.hconfig
+#
+CONFIG_USE_DECODER=n
+#
+# from $HARMONY_VERSION_PATH/framework/net/pres/tls/config/net_tls.hconfig
+#
+CONFIG_USE_NET_TLS=n
+#
+# from $HARMONY_VERSION_PATH/bsp/config/bsp.hconfig
+#
+CONFIG_USE_BSP=y
+CONFIG_BSP_PIC32MZ_EC_PIM_BT_AUDIO_DK=n
+CONFIG_BSP_PIC32MZ_EC_PIM_E16=n
+CONFIG_BSP_PIC32MZ_EC_SK=n
+CONFIG_BSP_PIC32MZ_EC_SK_MEB2=n
+CONFIG_BSP_PIC32MZ_EC_SK_MEB2_WVGA=n
+CONFIG_BSP_PIC32MZ_EC_SK_S1D_PICTAIL_VGA=n
+CONFIG_BSP_PIC32MZ_EC_SK_S1D_PICTAIL_WQVGA=n
+CONFIG_BSP_PIC32MZ_EC_SK_S1D_PICTAIL_WVGA=n
+CONFIG_BSP_PIC32MZ_WIFIRE=y
+#
+# from $HARMONY_VERSION_PATH/third_party/rtos/config/rtos.hconfig
+#
+CONFIG_USE_3RDPARTY_RTOS=y
+CONFIG_3RDPARTY_RTOS_USED="FreeRTOS_V8.x.x"
+#
+# from $HARMONY_VERSION_PATH/third_party/rtos/FreeRTOS/config/freertos_menu.hconfig
+#
+CONFIG_FREERTOS_PREEMPTIVE_SCHEDULER=y
+CONFIG_FREERTOS_COOPERATIVE_SCHEDULER=n
+CONFIG_FREERTOS_PORT_OPTIMIZED_TASK_SELECTION=y
+CONFIG_FREERTOS_GENERIC_TASK_SELECTION=n
+CONFIG_FREERTOS_TICKLESS_IDLE=n
+CONFIG_FREERTOS_TICK_INTERRUPT=y
+CONFIG_FREERTOS_CPU_CLOCK_HZ="200000000"
+CONFIG_FREERTOS_PERIPHERAL_CLOCK_HZ="100000000"
+CONFIG_FREERTOS_TIMER_ID="TMR_ID_1"
+CONFIG_FREERTOS_TICK_RATE_HZ=1000
+CONFIG_FREERTOS_MAX_PRIORITIES=10
+CONFIG_FREERTOS_MINIMAL_STACK_SIZE=512
+CONFIG_FREERTOS_ISR_STACK_SIZE=512
+CONFIG_FREERTOS_HEAP_1=n
+CONFIG_FREERTOS_HEAP_2=y
+CONFIG_FREERTOS_HEAP_3=n
+CONFIG_FREERTOS_HEAP_4=n
+CONFIG_FREERTOS_HEAP_5=n
+CONFIG_FREERTOS_TOTAL_HEAP_SIZE=40960
+CONFIG_FREERTOS_MAX_TASK_NAME_LEN=16
+CONFIG_FREERTOS_USE_16_BIT_TICKS=n
+CONFIG_FREERTOS_IDLE_SHOULD_YIELD=y
+CONFIG_FREERTOS_USE_MUTEXES=y
+CONFIG_FREERTOS_USE_RECURSIVE_MUTEXES=n
+CONFIG_FREERTOS_USE_COUNTING_SEMAPHORES=y
+CONFIG_FREERTOS_USE_TASK_NOTIFICATIONS=y
+CONFIG_FREERTOS_QUEUE_REGISTRY_SIZE=0
+CONFIG_FREERTOS_USE_QUEUE_SETS=n
+CONFIG_FREERTOS_USE_TIME_SLICING=n
+CONFIG_FREERTOS_USE_NEWLIB_REENTRANT=n
+CONFIG_FREERTOS_ENABLE_BACKWARD_COMPATIBILITY=n
+CONFIG_FREERTOS_IDLE_HOOK=n
+CONFIG_FREERTOS_TICK_HOOK=n
+CONFIG_FREERTOS_NO_STACK_OVERFLOW_CHECK=n
+CONFIG_FREERTOS_STACK_OVERFLOW_CHECK_METHOD_1=n
+CONFIG_FREERTOS_STACK_OVERFLOW_CHECK_METHOD_2=y
+CONFIG_FREERTOS_USE_MALLOC_FAILED_HOOK=y
+CONFIG_FREERTOS_GENERATE_RUN_TIME_STATS=n
+CONFIG_FREERTOS_USE_TRACE_FACILITY=n
+CONFIG_FREERTOS_USE_CO_ROUTINES=n
+CONFIG_FREERTOS_MAX_CO_ROUTINE_PRIORITIES=2
+CONFIG_FREERTOS_USE_TIMERS=n
+CONFIG_FREERTOS_USE_APPLICATION_TASK_TAG=n
+CONFIG_FREERTOS_USE_CONFIGASSERT=n
+CONFIG_FREERTOS_KERNEL_INTERRUPT_PRIORITY=1
+CONFIG_FREERTOS_MAX_SYSCALL_INTERRUPT_PRIORITY=3
+CONFIG_FREERTOS_INCLUDE_VTASKPRIORITYSET=y
+CONFIG_FREERTOS_INCLUDE_UXTASKPRIORITYGET=y
+CONFIG_FREERTOS_INCLUDE_VTASKDELETE=y
+CONFIG_FREERTOS_INCLUDE_VTASKCLEANUPRESOURCES=n
+CONFIG_FREERTOS_INCLUDE_VTASKSUSPEND=y
+CONFIG_FREERTOS_INCLUDE_VTASKDELAYUNTIL=y
+CONFIG_FREERTOS_INCLUDE_VTASKDELAY=y
+CONFIG_FREERTOS_INCLUDE_UXTASKGETSTACKHIGHWATERMARK=n
+CONFIG_FREERTOS_INCLUDE_XTASKGETSCHEDULERSTATE=n
+CONFIG_FREERTOS_INCLUDE_XTASKGETCURRENTTASKHANDLE=n
+CONFIG_FREERTOS_INCLUDE_XTASKGETIDLETASKHANDLE=n
+CONFIG_FREERTOS_INCLUDE_XTASKGETTIMERDAEMONTASKHANDLE=n
+CONFIG_FREERTOS_INCLUDE_XQUEUEGETMUTEXHOLDER=n
+CONFIG_FREERTOS_INCLUDE_XSEMAPHOREGETMUTEXHOLDER=n
+CONFIG_FREERTOS_INCLUDE_PCTASKGETTASKNAME=n
+CONFIG_FREERTOS_INCLUDE_ETASKGETSTATE=n
+CONFIG_FREERTOS_INCLUDE_XEVENTGROUPSETBITFROMISR=n
+CONFIG_FREERTOS_INCLUDE_XTIMERPENDFUNCTIONCALL=n
+#
+# from $HARMONY_VERSION_PATH/third_party/tcpip/cyassl/config/cyassl.hconfig
+#
+CONFIG_USE_3RDPARTY_CYASSL=n
+#
+# from $HARMONY_VERSION_PATH/third_party/tcpip/iniche/config/embtcp.hconfig
+#
+CONFIG_IN_EMB_TCPIP_USE_TCP=n
+#
+# from $HARMONY_VERSION_PATH/third_party/tcpip/iniche/config/embdual.hconfig
+#
+CONFIG_IN_EMB_DUAL_USE_TCP=n
+#
+# from $HARMONY_VERSION_PATH/third_party/tcpip/iniche/config/stack.hconfig
+#
+CONFIG_IN_TCPIP=n
+#
+# from $HARMONY_VERSION_PATH/utilities/mhc/config/PIC32MZ2048ECH100.hconfig
+#
+CONFIG_USERID=0xffff
+CONFIG_FMIIEN="OFF"
+CONFIG_FETHIO="ON"
+CONFIG_PGL1WAY="ON"
+CONFIG_PMDL1WAY="ON"
+CONFIG_IOL1WAY="ON"
+CONFIG_FUSBIDIO="OFF"
+CONFIG_FPLLIDIV="DIV_3"
+CONFIG_FPLLRNG="RANGE_8_16_MHZ"
+CONFIG_FPLLICLK="PLL_POSC"
+CONFIG_FPLLMULT="MUL_50"
+CONFIG_FPLLODIV="DIV_2"
+CONFIG_UPLLFSEL="FREQ_24MHZ"
+CONFIG_UPLLEN="ON"
+CONFIG_FNOSC="SPLL"
+CONFIG_DMTINTV="WIN_127_128"
+CONFIG_FSOSCEN="OFF"
+CONFIG_IESO="OFF"
+CONFIG_POSCMOD="EC"
+CONFIG_OSCIOFNC="OFF"
+CONFIG_FCKSM="CSECME"
+CONFIG_WDTPS="PS1048576"
+CONFIG_WDTSPGM="STOP"
+CONFIG_WINDIS="NORMAL"
+CONFIG_FWDTEN="OFF"
+CONFIG_FWDTWINSZ="WINSZ_25"
+CONFIG_DMTCNT="DMT9"
+CONFIG_FDMTEN="OFF"
+CONFIG_DEBUG="OFF"
+CONFIG_JTAGEN="OFF"
+CONFIG_ICESEL="ICS_PGx2"
+CONFIG_TRCEN="OFF"
+CONFIG_BOOTISA="MIPS32"
+CONFIG_FECCCON="OFF_UNLOCKED"
+CONFIG_FSLEEP="OFF"
+CONFIG_DBGPER="ALLOW_PG2"
+CONFIG_EJTAGBEN="NORMAL"
+CONFIG_CP="OFF"
+CONFIG_TSEQ=0xffff
+CONFIG_CSEQ=0xffff
+#
+# from $HARMONY_VERSION_PATH/utilities/mhc/config/project.hconfig
+#
+CONFIG_XC32_HEAP="65536"
diff -ruN /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/rtos_hooks.c /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/rtos_hooks.c
--- /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/rtos_hooks.c	1969-12-31 19:00:00.000000000 -0500
+++ /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/rtos_hooks.c	2015-05-04 10:55:53.000000000 -0400
@@ -0,0 +1,116 @@
+/*******************************************************************************
+ System Tasks File
+
+  File Name:
+    rtos_hooks.c
+
+  Summary:
+    This file contains source code necessary for rtos hooks
+
+  Description:
+
+  Remarks:
+ *******************************************************************************/
+
+// DOM-IGNORE-BEGIN
+/*******************************************************************************
+Copyright (c) 2013-2014 released Microchip Technology Inc.  All rights reserved.
+
+Microchip licenses to you the right to use, modify, copy and distribute
+Software only when embedded on a Microchip microcontroller or digital signal
+controller that is integrated into your product or third party product
+(pursuant to the sublicense terms in the accompanying license agreement).
+
+You should refer to the license agreement accompanying this Software for
+additional information regarding your rights and obligations.
+
+SOFTWARE AND DOCUMENTATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
+EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF
+MERCHANTABILITY, TITLE, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE.
+IN NO EVENT SHALL MICROCHIP OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER
+CONTRACT, NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR
+OTHER LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
+INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE OR
+CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT OF
+SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
+(INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
+ *******************************************************************************/
+// DOM-IGNORE-END
+#include "FreeRTOS.h"
+#include "task.h"
+
+/*
+*********************************************************************************************************
+*                                          vApplicationStackOverflowHook()
+*
+* Description : Hook function called by FreeRTOS if a stack overflow happens.
+*
+* Argument(s) : none
+*
+* Return(s)   : none
+*
+* Caller(s)   : APP_StateReset()
+*
+* Note(s)     : none.
+*********************************************************************************************************
+*/
+void vApplicationStackOverflowHook( TaskHandle_t pxTask, signed char *pcTaskName )
+{
+   ( void ) pcTaskName;
+   ( void ) pxTask;
+
+   /* Run time task stack overflow checking is performed if
+   configCHECK_FOR_STACK_OVERFLOW is defined to 1 or 2.  This hook	function is
+   called if a task stack overflow is detected.  Note the system/interrupt
+   stack is not checked. */
+   taskDISABLE_INTERRUPTS();
+   for( ;; );
+}
+
+/*
+*********************************************************************************************************
+*                                     vApplicationMallocFailedHook()
+*
+* Description : vApplicationMallocFailedHook() will only be called if
+*               configUSE_MALLOC_FAILED_HOOK is set to 1 in FreeRTOSConfig.h.
+*               It is a hook function that will get called if a call to
+*               pvPortMalloc() fails.  pvPortMalloc() is called internally by
+*               the kernel whenever a task, queue, timer or semaphore is
+*               created.  It is also called by various parts of the demo
+*               application.  If heap_1.c or heap_2.c are used, then the size of
+*               the heap available to pvPortMalloc() is defined by
+*               configTOTAL_HEAP_SIZE in FreeRTOSConfig.h, and the
+*               xPortGetFreeHeapSize() API function can be used to query the
+*               size of free heap space that remains (although it does not
+*               provide information on how the remaining heap might be
+*               fragmented).
+*
+* Argument(s) : none
+*
+* Return(s)   : none
+*
+* Caller(s)   : APP_StateReset()
+*
+* Note(s)     : none.
+*********************************************************************************************************
+*/
+
+void vApplicationMallocFailedHook( void )
+{
+   /* vApplicationMallocFailedHook() will only be called if
+      configUSE_MALLOC_FAILED_HOOK is set to 1 in FreeRTOSConfig.h.  It is a hook
+      function that will get called if a call to pvPortMalloc() fails.
+      pvPortMalloc() is called internally by the kernel whenever a task, queue,
+      timer or semaphore is created.  It is also called by various parts of the
+      demo application.  If heap_1.c or heap_2.c are used, then the size of the
+      heap available to pvPortMalloc() is defined by configTOTAL_HEAP_SIZE in
+      FreeRTOSConfig.h, and the xPortGetFreeHeapSize() API function can be used
+      to query the size of free heap space that remains (although it does not
+      provide information on how the remaining heap might be fragmented). */
+   taskDISABLE_INTERRUPTS();
+   for( ;; );
+}
+
+/*******************************************************************************
+ End of File
+ */
diff -ruN /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/system_config.h /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/system_config.h
--- /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/system_config.h	1969-12-31 19:00:00.000000000 -0500
+++ /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/system_config.h	2015-08-08 21:50:02.810639000 -0400
@@ -0,0 +1,738 @@
+/*******************************************************************************
+  MPLAB Harmony System Configuration Header
+
+  File Name:
+    system_config.h
+
+  Summary:
+    Build-time configuration header for the system defined by this MPLAB Harmony
+    project.
+
+  Description:
+    An MPLAB Project may have multiple configurations.  This file defines the
+    build-time options for a single configuration.
+
+  Remarks:
+    This configuration header must not define any prototypes or data
+    definitions (or include any files that do).  It only provides macro
+    definitions for build-time configuration options that are not instantiated
+    until used by another MPLAB Harmony module or application.
+    
+    Created with MPLAB Harmony Version 1.05
+*******************************************************************************/
+
+// DOM-IGNORE-BEGIN
+/*******************************************************************************
+Copyright (c) 2013-2015 released Microchip Technology Inc.  All rights reserved.
+
+Microchip licenses to you the right to use, modify, copy and distribute
+Software only when embedded on a Microchip microcontroller or digital signal
+controller that is integrated into your product or third party product
+(pursuant to the sublicense terms in the accompanying license agreement).
+
+You should refer to the license agreement accompanying this Software for
+additional information regarding your rights and obligations.
+
+SOFTWARE AND DOCUMENTATION ARE PROVIDED AS IS WITHOUT WARRANTY OF ANY KIND,
+EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF
+MERCHANTABILITY, TITLE, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE.
+IN NO EVENT SHALL MICROCHIP OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER
+CONTRACT, NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR
+OTHER LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
+INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE OR
+CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT OF
+SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
+(INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
+*******************************************************************************/
+// DOM-IGNORE-END
+
+#ifndef _SYSTEM_CONFIG_H
+#define _SYSTEM_CONFIG_H
+
+/* This is a temporary workaround for an issue with the peripheral library "Exists"
+   functions that causes superfluous warnings.  It "nulls" out the definition of
+   The PLIB function attribute that causes the warning.  Once that issue has been
+   resolved, this definition should be removed. */
+#define _PLIB_UNSUPPORTED
+
+
+// *****************************************************************************
+// *****************************************************************************
+// Section: Included Files
+// *****************************************************************************
+// *****************************************************************************
+/*  This section Includes other configuration headers necessary to completely
+    define this configuration.
+*/
+
+#include "bsp_config.h"
+
+// *****************************************************************************
+// *****************************************************************************
+// Section: System Service Configuration
+// *****************************************************************************
+// *****************************************************************************
+
+// *****************************************************************************
+/* Common System Service Configuration Options
+*/
+#define SYS_VERSION_STR           "1.04"
+#define SYS_VERSION               10400
+
+// *****************************************************************************
+/* Clock System Service Configuration Options
+*/
+#define SYS_CLK_FREQ                        200000000ul
+#define SYS_CLK_BUS_PERIPHERAL_1            100000000ul
+#define SYS_CLK_BUS_PERIPHERAL_2            100000000ul
+#define SYS_CLK_BUS_PERIPHERAL_3            100000000ul
+#define SYS_CLK_BUS_PERIPHERAL_4            100000000ul
+#define SYS_CLK_BUS_PERIPHERAL_5            100000000ul
+#define SYS_CLK_BUS_PERIPHERAL_7            200000000ul
+#define SYS_CLK_BUS_PERIPHERAL_8            100000000ul
+#define SYS_CLK_CONFIG_PRIMARY_XTAL         24000000ul
+#define SYS_CLK_CONFIG_SECONDARY_XTAL       32768ul
+   
+/*** Interrupt System Service Configuration ***/
+#define SYS_INT                     true
+
+/*** Ports System Service Configuration ***/
+
+#define SYS_PORT_A_ANSEL        0x603
+#define SYS_PORT_A_TRIS         0xc6ff
+#define SYS_PORT_A_LAT          0x0
+#define SYS_PORT_A_ODC          0x0
+#define SYS_PORT_A_CNPU         0x0
+#define SYS_PORT_A_CNPD         0x0
+#define SYS_PORT_A_CNEN         0x0
+
+#define SYS_PORT_B_ANSEL        0xf7fe
+#define SYS_PORT_B_TRIS         0xffff
+#define SYS_PORT_B_LAT          0x0
+#define SYS_PORT_B_ODC          0x0
+#define SYS_PORT_B_CNPU         0x0
+#define SYS_PORT_B_CNPD         0x0
+#define SYS_PORT_B_CNEN         0x0
+#define SYS_PORT_C_ANSEL        0xe01e
+#define SYS_PORT_C_TRIS         0xf01e
+#define SYS_PORT_C_LAT          0x0
+#define SYS_PORT_C_ODC          0x0
+#define SYS_PORT_C_CNPU         0x0
+#define SYS_PORT_C_CNPD         0x0
+#define SYS_PORT_C_CNEN         0x0
+
+#define SYS_PORT_D_ANSEL        0xc000
+#define SYS_PORT_D_TRIS         0xfc3f
+#define SYS_PORT_D_LAT          0x0
+#define SYS_PORT_D_ODC          0x0
+#define SYS_PORT_D_CNPU         0x0
+#define SYS_PORT_D_CNPD         0x0
+#define SYS_PORT_D_CNEN         0x0
+
+#define SYS_PORT_F_ANSEL        0x3000
+#define SYS_PORT_F_TRIS         0x312f
+#define SYS_PORT_F_LAT          0x0
+#define SYS_PORT_F_ODC          0x0
+#define SYS_PORT_F_CNPU         0x0
+#define SYS_PORT_F_CNPD         0x0
+#define SYS_PORT_F_CNEN         0x0
+
+#define SYS_PORT_G_ANSEL        0x380
+#define SYS_PORT_G_TRIS         0xf3c1
+#define SYS_PORT_G_LAT          0x0
+#define SYS_PORT_G_ODC          0x0
+#define SYS_PORT_G_CNPU         0x0
+#define SYS_PORT_G_CNPD         0x0
+#define SYS_PORT_G_CNEN         0x0
+/*** Timer System Service Configuration ***/
+#define SYS_TMR_POWER_STATE             SYS_MODULE_POWER_RUN_FULL
+#define SYS_TMR_DRIVER_INDEX            DRV_TMR_INDEX_0
+#define SYS_TMR_MAX_CLIENT_OBJECTS      5
+#define SYS_TMR_FREQUENCY               1000
+#define SYS_TMR_FREQUENCY_TOLERANCE     10
+#define SYS_TMR_UNIT_RESOLUTION         10000
+#define SYS_TMR_CLIENT_TOLERANCE        10
+#define SYS_TMR_INTERRUPT_NOTIFICATION  true
+
+/*** Console System Service Configuration ***/
+
+#define SYS_CONSOLE_OVERRIDE_STDIO
+#define SYS_CONSOLE_DEVICE_MAX_INSTANCES        2
+#define SYS_CONSOLE_INSTANCES_NUMBER            1
+#define SYS_CONSOLE_UART_RD_QUEUE_DEPTH    1
+#define SYS_CONSOLE_UART_WR_QUEUE_DEPTH    128
+#define SYS_CONSOLE_BUFFER_DMA_READY
+
+ 
+/*** Debug System Service Configuration ***/
+#define SYS_DEBUG_ENABLE
+#define DEBUG_PRINT_BUFFER_SIZE       512
+#define SYS_DEBUG_BUFFER_DMA_READY
+#define SYS_DEBUG_USE_CONSOLE
+
+/*** Command Processor System Service Configuration ***/
+#define SYS_CMD_ENABLE
+#define SYS_CMD_DEVICE_MAX_INSTANCES    SYS_CONSOLE_DEVICE_MAX_INSTANCES
+#define SYS_CMD_PRINT_BUFFER_SIZE       512
+#define SYS_CMD_BUFFER_DMA_READY        __attribute__((coherent)) __attribute__((aligned(4)))
+#define SYS_CMD_REMAP_SYS_CONSOLE_MESSAGE
+#define SYS_CMD_REMAP_SYS_DEBUG_MESSAGE
+
+/*** File System Service Configuration ***/
+
+#define SYS_FS_MEDIA_NUMBER         	1
+
+#define SYS_FS_VOLUME_NUMBER		5
+
+#define SYS_FS_AUTOMOUNT_ENABLE		false
+#define SYS_FS_MAX_FILES	    	25
+#define SYS_FS_MAX_FILE_SYSTEM_TYPE 	1
+#define SYS_FS_MEDIA_MAX_BLOCK_SIZE  	2048
+#define SYS_FS_MEDIA_MANAGER_BUFFER_SIZE 2048
+
+
+#define SYS_FS_MEDIA_TYPE_IDX0 				
+#define SYS_FS_TYPE_IDX0 					
+
+
+
+
+
+// *****************************************************************************
+/* Random System Service Configuration Options
+*/
+
+#define SYS_RANDOM_CRYPTO_SEED_SIZE  55
+
+
+// *****************************************************************************
+// *****************************************************************************
+// Section: Driver Configuration
+// *****************************************************************************
+// *****************************************************************************
+
+/*** Timer Driver Configuration ***/
+#define DRV_TMR_INSTANCES_NUMBER           1
+#define DRV_TMR_CLIENTS_NUMBER             1
+#define DRV_TMR_INTERRUPT_MODE             true
+
+/*** Timer Driver 0 Configuration ***/
+#define DRV_TMR_PERIPHERAL_ID_IDX0          TMR_ID_2
+#define DRV_TMR_INTERRUPT_SOURCE_IDX0       INT_SOURCE_TIMER_2
+#define DRV_TMR_INTERRUPT_VECTOR_IDX0       INT_VECTOR_T2
+#define DRV_TMR_ISR_VECTOR_IDX0             _TIMER_2_VECTOR
+#define DRV_TMR_INTERRUPT_PRIORITY_IDX0     INT_PRIORITY_LEVEL4
+#define DRV_TMR_INTERRUPT_SUB_PRIORITY_IDX0 INT_SUBPRIORITY_LEVEL0
+#define DRV_TMR_CLOCK_SOURCE_IDX0           DRV_TMR_CLKSOURCE_INTERNAL
+#define DRV_TMR_PRESCALE_IDX0               TMR_PRESCALE_VALUE_256
+#define DRV_TMR_OPERATION_MODE_IDX0         DRV_TMR_OPERATION_MODE_16_BIT
+#define DRV_TMR_ASYNC_WRITE_ENABLE_IDX0     false
+#define DRV_TMR_POWER_STATE_IDX0            SYS_MODULE_POWER_RUN_FULL
+
+ 
+ // *****************************************************************************
+/* USART Driver Configuration Options
+*/
+
+#define DRV_USART_INTERRUPT_MODE                    true
+#define DRV_USART_BYTE_MODEL_SUPPORT                false
+#define DRV_USART_READ_WRITE_MODEL_SUPPORT          true
+#define DRV_USART_BUFFER_QUEUE_SUPPORT              true
+#define DRV_USART_QUEUE_DEPTH_COMBINED              16
+#define DRV_USART_CLIENTS_NUMBER                    1
+#define DRV_USART_SUPPORT_TRANSMIT_DMA              false
+#define DRV_USART_SUPPORT_RECEIVE_DMA               false
+#define DRV_USART_INSTANCES_NUMBER                  1
+
+#define DRV_USART_PERIPHERAL_ID_IDX0                USART_ID_4
+#define DRV_USART_OPER_MODE_IDX0                    DRV_USART_OPERATION_MODE_NORMAL
+#define DRV_USART_OPER_MODE_DATA_IDX0               0x00
+#define DRV_USART_INIT_FLAG_WAKE_ON_START_IDX0      false
+#define DRV_USART_INIT_FLAG_AUTO_BAUD_IDX0          false
+#define DRV_USART_INIT_FLAG_STOP_IN_IDLE_IDX0       false
+#define DRV_USART_INIT_FLAGS_IDX0                   0
+#define DRV_USART_BRG_CLOCK_IDX0                    100000000
+#define DRV_USART_BAUD_RATE_IDX0                    115200
+#define DRV_USART_LINE_CNTRL_IDX0                   DRV_USART_LINE_CONTROL_8NONE1
+#define DRV_USART_HANDSHAKE_MODE_IDX0               DRV_USART_HANDSHAKE_NONE
+#define DRV_USART_XMIT_INT_SRC_IDX0                 INT_SOURCE_USART_4_TRANSMIT
+#define DRV_USART_RCV_INT_SRC_IDX0                  INT_SOURCE_USART_4_RECEIVE
+#define DRV_USART_ERR_INT_SRC_IDX0                  INT_SOURCE_USART_4_ERROR
+#define DRV_USART_XMIT_INT_VECTOR_IDX0              INT_VECTOR_UART4_TX
+#define DRV_USART_XMIT_INT_PRIORITY_IDX0            INT_PRIORITY_LEVEL1
+#define DRV_USART_XMIT_INT_SUB_PRIORITY_IDX0        INT_SUBPRIORITY_LEVEL0
+#define DRV_USART_RCV_INT_VECTOR_IDX0               INT_VECTOR_UART4_RX
+#define DRV_USART_RCV_INT_PRIORITY_IDX0             INT_PRIORITY_LEVEL1
+#define DRV_USART_RCV_INT_SUB_PRIORITY_IDX0         INT_SUBPRIORITY_LEVEL0
+#define DRV_USART_ERR_INT_VECTOR_IDX0               INT_VECTOR_UART4_FAULT
+#define DRV_USART_ERR_INT_PRIORITY_IDX0             INT_PRIORITY_LEVEL1
+#define DRV_USART_ERR_INT_SUB_PRIORITY_IDX0         INT_SUBPRIORITY_LEVEL0
+#define DRV_USART_XMIT_QUEUE_SIZE_IDX0              10
+#define DRV_USART_RCV_QUEUE_SIZE_IDX0               10
+#define DRV_USART_POWER_STATE_IDX0                  SYS_MODULE_POWER_RUN_FULL
+
+
+/*** NVM Driver Configuration ***/
+
+
+#define DRV_NVM_INSTANCES_NUMBER     	1
+#define DRV_NVM_CLIENTS_NUMBER        	2
+#define DRV_NVM_BUFFER_OBJECT_NUMBER  	5
+
+#define DRV_NVM_INTERRUPT_MODE        	true
+#define DRV_NVM_INTERRUPT_SOURCE      	INT_SOURCE_FLASH_CONTROL
+
+#define DRV_NVM_MEDIA_SIZE              64
+#define DRV_NVM_MEDIA_START_ADDRESS     0x9D000000
+
+#define DRV_NVM_ROW_SIZE                2048
+#define DRV_NVM_PAGE_SIZE             	16384
+#define DRV_NVM_PROGRAM_UNLOCK_KEY1     0xAA996655
+#define DRV_NVM_PROGRAM_UNLOCK_KEY2     0x556699AA
+
+#define DRV_NVM_ERASE_WRITE_ENABLE
+
+
+#define DRV_NVM_SYS_FS_REGISTER
+
+
+
+
+
+/*** SPI Driver Configuration ***/
+/*** Driver Compilation and static configuration options. ***/
+/*** Select SPI compilation units.***/
+#define DRV_SPI_POLLED 				1
+#define DRV_SPI_ISR 				1
+#define DRV_SPI_MASTER 				1
+#define DRV_SPI_SLAVE 				0
+#define DRV_SPI_RM 				0
+#define DRV_SPI_EBM 				1
+#define DRV_SPI_8BIT 				1
+#define DRV_SPI_16BIT 				0
+#define DRV_SPI_32BIT 				0
+#define DRV_SPI_DMA 				0
+
+/*** SPI Driver Static Allocation Options ***/
+#define DRV_SPI_INSTANCES_NUMBER 		1
+#define DRV_SPI_CLIENTS_NUMBER 			1
+#define DRV_SPI_ELEMENTS_PER_QUEUE 		10
+/* SPI Driver Instance 0 Configuration */
+#define DRV_SPI_SPI_ID_IDX0 			SPI_ID_4
+#define DRV_SPI_TASK_MODE_IDX0 			DRV_SPI_TASK_MODE_POLLED
+#define DRV_SPI_SPI_MODE_IDX0   DRV_SPI_MODE_MASTER
+#define DRV_SPI_ALLOW_IDLE_RUN_IDX0     false
+#define DRV_SPI_SPI_PROTOCOL_TYPE_IDX0 		DRV_SPI_PROTOCOL_TYPE_STANDARD
+#define DRV_SPI_COMM_WIDTH_IDX0 		SPI_COMMUNICATION_WIDTH_8BITS
+#define DRV_SPI_SPI_CLOCK_IDX0 			CLK_BUS_PERIPHERAL_2
+#define DRV_SPI_BAUD_RATE_IDX0 			8000000
+#define DRV_SPI_BUFFER_TYPE_IDX0 		DRV_SPI_BUFFER_TYPE_ENHANCED
+#define DRV_SPI_CLOCK_MODE_IDX0 		DRV_SPI_CLOCK_MODE_IDLE_HIGH_EDGE_FALL
+#define DRV_SPI_INPUT_PHASE_IDX0 		SPI_INPUT_SAMPLING_PHASE_AT_END
+#define DRV_SPI_QUEUE_SIZE_IDX0 		10
+#define DRV_SPI_RESERVED_JOB_IDX0 		1
+
+/*** Wi-Fi Driver Configuration ***/
+#define WF_CONFIG_MHC
+#define WIFI_USE_RTOS
+#define WIFI_INITIALIZE_USE_RTOS
+#define WIFI_MACPROCESS_USE_RTOS
+#define WIFI_EASYCONFIG_USE_RTOS
+#define TCPIP_IF_MRF24W
+
+/* These definitions are duplicated from drv_wifi.h */
+/* They should not be manually changed and should always be kept the same as that in drv_wifi.h */
+#define DRV_WIFI_DISABLED (0)
+#define DRV_WIFI_ENABLED  (1)
+#define DRV_WIFI_NETWORK_TYPE_INFRASTRUCTURE (1)
+#define DRV_WIFI_NETWORK_TYPE_ADHOC          (2)
+#define DRV_WIFI_NETWORK_TYPE_P2P            (3) /* not supported */
+#define DRV_WIFI_NETWORK_TYPE_SOFT_AP        (4)
+#define DRV_WIFI_SECURITY_OPEN                      (0)
+#define DRV_WIFI_SECURITY_WEP_40                    (1)
+#define DRV_WIFI_SECURITY_WEP_104                   (2)
+#define DRV_WIFI_SECURITY_WPA_WITH_KEY              (3)
+#define DRV_WIFI_SECURITY_WPA_WITH_PASS_PHRASE      (4)
+#define DRV_WIFI_SECURITY_WPA2_WITH_KEY             (5)
+#define DRV_WIFI_SECURITY_WPA2_WITH_PASS_PHRASE     (6)
+#define DRV_WIFI_SECURITY_WPA_AUTO_WITH_KEY         (7)
+#define DRV_WIFI_SECURITY_WPA_AUTO_WITH_PASS_PHRASE (8)
+#define DRV_WIFI_SECURITY_WPS_PUSH_BUTTON           (9)
+#define DRV_WIFI_SECURITY_WPS_PIN                   (10)
+#define DRV_WIFI_SECURITY_EAP                       (11) /* not supported */
+#define DRV_WIFI_RETRY_FOREVER (255)
+#define DRV_WIFI_RETRY_ADHOC   (3)
+
+#define DRV_WIFI_ASSERT(condition, msg) WF_AssertFunction(condition, msg, __FILE__, __LINE__)
+
+#define DRV_WIFI_SPI_INDEX 0
+#define DRV_WIFI_SPI_INSTANCE sysObj.spiObjectIdx0
+
+#define DRV_WIFI_NVM_SPACE_ENABLE
+#define DRV_WIFI_NVM_SPACE_ADDR (48*1024)
+
+#define MRF_INT_SOURCE INT_SOURCE_EXTERNAL_4
+#define MRF_INT_VECTOR INT_VECTOR_INT4
+
+#define MRF24W_IN_SPI4
+#define MRF24W_USE_INT4_INT
+#define MRF24W_SPI_CHN 4
+
+// IO mapping for general control pins, inlcuding CS, RESET and HIBERNATE
+// MRF24W in SPI 1 slot
+#define WF_CS_TRIS         (TRISDbits.TRISD9)
+#define WF_CS_IO           (LATDbits.LATD9)
+#define WF_CS_PORT_CHANNEL PORT_CHANNEL_D
+#define WF_CS_BIT_POS      9
+
+#define WF_RESET_TRIS         (TRISFbits.TRISF4)
+#define WF_RESET_IO           (LATFbits.LATF4)
+#define WF_RESET_PORT_CHANNEL PORT_CHANNEL_F
+#define WF_RESET_BIT_POS      4
+
+#define WF_HIBERNATE_TRIS         (TRIGFbits.TRISG1)
+#define WF_HIBERNATE_IO           (PORTGbits.RG1)
+#define WF_HIBERNATE_PORT_CHANNEL PORT_CHANNEL_G
+#define WF_HIBERNATE_BIT_POS      1
+
+#define WF_INT_PRIORITY     3
+#define WF_INT_SUBPRIORITY  1
+#define WF_INT_PORT_CHANNEL PORT_CHANNEL_A
+#define WF_INT_BIT_POS      15
+
+#define WF_DEFAULT_NETWORK_TYPE          DRV_WIFI_NETWORK_TYPE_SOFT_AP
+#define WF_DEFAULT_SSID_NAME             "MCHPSoftAP"
+#define WF_DEFAULT_LIST_RETRY_COUNT      (DRV_WIFI_RETRY_ADHOC) /* Dummy, not used */
+#define WF_DEFAULT_CHANNEL_LIST          {6}                    /* Set SoftAP network channel */
+
+#define WF_DEFAULT_WIFI_SECURITY_MODE    DRV_WIFI_SECURITY_OPEN
+
+#define WF_SAVE_WPS_CREDENTIALS             DRV_WIFI_DISABLED
+
+#define WF_SOFTAP_CHECK_LINK_STATUS         DRV_WIFI_DISABLED /* DRV_WIFI_ENABLED to use with WF_SOFTAP_LINK_FAILURE_THRESHOLD */
+#define WF_SOFTAP_LINK_FAILURE_THRESHOLD    40
+
+#define WF_DEFAULT_PS_POLL                  DRV_WIFI_DISABLED /* PS_POLL not supported in SoftAP - must be set to DRV_WIFI_DISABLED */
+#define WF_MODULE_CONNECTION_MANAGER        DRV_WIFI_ENABLED
+#define WF_SOFTWARE_MULTICAST_FILTER        DRV_WIFI_ENABLED
+#define WF_GRATUITOUS_ARP                   DRV_WIFI_DISABLED
+
+#define WF_ENABLE_STATIC_IP
+
+// *****************************************************************************
+// *****************************************************************************
+// Section: Middleware & Other Library Configuration
+// *****************************************************************************
+// *****************************************************************************
+
+
+#define HAVE_MCAPI
+#define NO_MD5
+#define NO_SHA
+#define NO_SHA256
+#define NO_AES
+#define NO_RSA
+#define NO_HMAC
+
+
+// *****************************************************************************
+// *****************************************************************************
+// Section: TCPIP Stack Configuration
+// *****************************************************************************
+// *****************************************************************************
+#define TCPIP_STACK_USE_IPV4
+#define TCPIP_STACK_USE_TCP
+#define TCPIP_STACK_USE_UDP
+#define TCPIP_STACK_USE_ICMP_CLIENT
+#define TCPIP_STACK_DRAM_SIZE		        		39250
+#define TCPIP_STACK_DRAM_RUN_LIMIT		    		2048
+#define TCPIP_STACK_DRAM_DEBUG_ENABLE
+#define TCPIP_STACK_TICK_RATE		        		5
+
+#define TCPIP_STACK_MALLOC_FUNC		    	malloc
+
+#define TCPIP_STACK_CALLOC_FUNC		    	calloc
+
+#define TCPIP_STACK_FREE_FUNC		    	free
+
+/* Console and Debug Symbols */
+
+
+/* TCP/IP stack event notification */
+#define TCPIP_STACK_USE_EVENT_NOTIFICATION
+
+
+/*** ARP Configuration ***/
+#define TCPIP_ARP_CACHE_ENTRIES                 		5
+#define TCPIP_ARP_CACHE_DELETE_OLD		        	true
+#define TCPIP_ARP_CACHE_SOLVED_ENTRY_TMO			1200
+#define TCPIP_ARP_CACHE_PENDING_ENTRY_TMO			60
+#define TCPIP_ARP_CACHE_PENDING_RETRY_TMO			2
+#define TCPIP_ARP_CACHE_PERMANENT_QUOTA		    		50
+#define TCPIP_ARP_CACHE_PURGE_THRESHOLD		    		75
+#define TCPIP_ARP_CACHE_PURGE_QUANTA		    		1
+#define TCPIP_ARP_CACHE_ENTRY_RETRIES		    		3
+#define TCPIP_ARP_GRATUITOUS_PROBE_COUNT			1
+#define TCPIP_ARP_TASK_PROCESS_RATE		        	2
+
+
+/*** DHCP Configuration ***/
+#define TCPIP_STACK_USE_DHCP_CLIENT
+#define TCPIP_DHCP_TIMEOUT		        		2
+#define TCPIP_DHCP_TASK_TICK_RATE	    			200
+#define TCPIP_DHCP_CLIENT_CONNECT_PORT  			68
+#define TCPIP_DHCP_SERVER_LISTEN_PORT				67
+#define TCPIP_DHCP_CLIENT_ENABLED             			true
+
+
+
+/*** DHCP Server Configuration ***/
+#define TCPIP_STACK_USE_DHCP_SERVER
+#define TCPIP_DHCPS_TASK_PROCESS_RATE                               200
+#define TCPIP_DHCPS_LEASE_ENTRIES_DEFAULT                           15
+#define TCPIP_DHCPS_LEASE_SOLVED_ENTRY_TMO                          1200
+#define TCPIP_DHCPS_LEASE_REMOVED_BEFORE_ACK                        5
+#define TCPIP_DHCP_SERVER_DELETE_OLD_ENTRIES                        true
+#define TCPIP_DHCPS_LEASE_DURATION	TCPIP_DHCPS_LEASE_SOLVED_ENTRY_TMO
+
+/*** DHCP Server Instance 0 Configuration ***/
+#define TCPIP_DHCPS_DEFAULT_IP_ADDRESS_RANGE_START_IDX0             "192.168.1.100"
+
+#define TCPIP_DHCPS_DEFAULT_SERVER_IP_ADDRESS_IDX0                  "192.168.1.1"
+
+#define TCPIP_DHCPS_DEFAULT_SERVER_NETMASK_ADDRESS_IDX0             "255.255.255.0"
+
+#define TCPIP_DHCPS_DEFAULT_SERVER_GATEWAY_ADDRESS_IDX0             "192.168.1.1"
+
+#define TCPIP_DHCPS_DEFAULT_SERVER_PRIMARY_DNS_ADDRESS_IDX0         "192.168.1.1"
+
+#define TCPIP_DHCPS_DEFAULT_SERVER_SECONDARY_DNS_ADDRESS_IDX0       "192.168.1.1"
+
+#define TCPIP_DHCP_SERVER_INTERFACE_INDEX_IDX0                      0
+
+#define TCPIP_DHCP_SERVER_POOL_ENABLED_IDX0                         true
+
+
+
+
+/*** DNS Client Configuration ***/
+#define TCPIP_STACK_USE_DNS
+#define TCPIP_DNS_CLIENT_SERVER_TMO					60
+#define TCPIP_DNS_CLIENT_TASK_PROCESS_RATE			200
+#define TCPIP_DNS_CLIENT_CACHE_ENTRIES				5
+#define TCPIP_DNS_CLIENT_CACHE_ENTRY_TMO			0
+#define TCPIP_DNS_CLIENT_CACHE_PER_IPV4_ADDRESS		5
+#define TCPIP_DNS_CLIENT_CACHE_PER_IPV6_ADDRESS		1
+#define TCPIP_DNS_CLIENT_OPEN_ADDRESS_TYPE			IP_ADDRESS_TYPE_IPV4
+#define TCPIP_DNS_CLIENT_CACHE_DEFAULT_TTL_VAL		1200
+#define TCPIP_DNS_CLIENT_CACHE_UNSOLVED_ENTRY_TMO	10
+#define TCPIP_DNS_CLIENT_LOOKUP_RETRY_TMO			5
+#define TCPIP_DNS_CLIENT_MAX_HOSTNAME_LEN			32
+#define TCPIP_DNS_CLIENT_DELETE_OLD_ENTRIES			true
+
+
+
+/*** DNS Server Configuration ***/
+#define TCPIP_STACK_USE_DNS_SERVER
+#define TCPIP_DNSS_HOST_NAME_LEN		    		64
+#define TCPIP_DNSS_REPLY_BOARD_ADDR				true
+#define TCPIP_DNSS_CACHE_PER_IPV4_ADDRESS			2
+#define TCPIP_DNSS_CACHE_PER_IPV6_ADDRESS			
+#define TCPIP_DNSS_TTL_TIME							600
+#define TCPIP_DNSS_TASK_PROCESS_RATE			    33
+#define TCPIP_DNSS_DELETE_OLD_LEASE				true
+
+/***Maximum DNS server Cache entries. It is the sum of TCPIP_DNSS_CACHE_PER_IPV4_ADDRESS and TCPIP_DNSS_CACHE_PER_IPV6_ADDRESS.***/
+#define TCPIP_DNSS_CACHE_MAX_SERVER_ENTRIES     (TCPIP_DNSS_CACHE_PER_IPV4_ADDRESS+TCPIP_DNSS_CACHE_PER_IPV6_ADDRESS)
+
+
+/*** FTP Configuration ***/
+
+
+/*** HTTP Configuration ***/
+#define TCPIP_STACK_USE_HTTP_SERVER
+#define TCPIP_HTTP_MAX_HEADER_LEN		    		15
+#define TCPIP_HTTP_CACHE_LEN		        		"600"
+#define TCPIP_HTTP_TIMEOUT		            		45
+#define TCPIP_HTTP_MAX_CONNECTIONS		    		4
+#define TCPIP_HTTP_MAX_TLS_CONNECTIONS		  		0
+#define TCPIP_HTTP_DEFAULT_FILE		        		"index.htm"
+#define TCPIP_HTTPS_DEFAULT_FILE	        		"index.htm"
+#define TCPIP_HTTP_DEFAULT_LEN		        		10
+#define TCPIP_HTTP_MAX_DATA_LEN		        		100
+#define TCPIP_HTTP_MIN_CALLBACK_FREE				16
+#define TCPIP_HTTP_SKT_TX_BUFF_SIZE		    		0
+#define TCPIP_HTTP_SKT_RX_BUFF_SIZE		    		0
+#define TCPIP_HTTP_TLS_SKT_TX_BUFF_SIZE		                0
+#define TCPIP_HTTP_TLS_SKT_RX_BUFF_SIZE		                0
+#define TCPIP_HTTP_CONFIG_FLAGS		        		1
+#define TCPIP_HTTP_FILE_UPLOAD_ENABLE
+#define TCPIP_HTTP_FILE_UPLOAD_NAME				"mpfsupload"
+#define TCPIP_HTTP_USE_POST
+#define TCPIP_HTTP_USE_COOKIES
+#define TCPIP_STACK_USE_BASE64_DECODE
+#define TCPIP_HTTP_USE_AUTHENTICATION
+#define TCPIP_HTTP_TASK_RATE					33
+
+
+/*** ICMP Configuration ***/
+
+#define TCPIP_STACK_USE_ICMP_SERVER
+
+
+/*** iperf Configuration ***/
+
+
+
+/*** NBNS Configuration ***/
+#define TCPIP_STACK_USE_NBNS
+#define TCPIP_NBNS_TASK_TICK_RATE   110
+
+
+/*** SMTP Configuration ***/
+
+
+/*** SNTP Configuration ***/
+
+
+
+
+
+/*** TCP Configuration ***/
+#define TCPIP_TCP_MAX_SEG_SIZE_TX		        	1460
+#define TCPIP_TCP_MAX_SEG_SIZE_RX_LOCAL		    		1460
+#define TCPIP_TCP_MAX_SEG_SIZE_RX_NON_LOCAL			536
+#define TCPIP_TCP_SOCKET_DEFAULT_TX_SIZE			512
+#define TCPIP_TCP_SOCKET_DEFAULT_RX_SIZE			512
+#define TCPIP_TCP_START_TIMEOUT_VAL		        	1000
+#define TCPIP_TCP_DELAYED_ACK_TIMEOUT		    		100
+#define TCPIP_TCP_FIN_WAIT_2_TIMEOUT		    		5000
+#define TCPIP_TCP_KEEP_ALIVE_TIMEOUT		    		10000
+#define TCPIP_TCP_CLOSE_WAIT_TIMEOUT		    		200
+#define TCPIP_TCP_MAX_RETRIES		            		5
+#define TCPIP_TCP_MAX_UNACKED_KEEP_ALIVES			6
+#define TCPIP_TCP_MAX_SYN_RETRIES		        	2
+#define TCPIP_TCP_AUTO_TRANSMIT_TIMEOUT_VAL			40
+#define TCPIP_TCP_WINDOW_UPDATE_TIMEOUT_VAL			200
+#define TCPIP_TCP_MAX_SOCKETS		            		10
+#define TCPIP_TCP_TASK_TICK_RATE		        	5
+
+
+/*** announce Configuration ***/
+#define TCPIP_STACK_USE_ANNOUNCE
+#define TCPIP_ANNOUNCE_MAX_PAYLOAD 	512
+#define TCPIP_ANNOUNCE_TASK_RATE    333
+
+
+/*** TCPIP MAC Configuration ***/
+
+
+/*** TCP/IP Reboot Configuration ***/
+
+
+/*** telnet Configuration ***/
+
+
+/*** UDP Configuration ***/
+#define TCPIP_UDP_MAX_SOCKETS		                	10
+#define TCPIP_UDP_SOCKET_DEFAULT_TX_SIZE		    	512
+#define TCPIP_UDP_SOCKET_DEFAULT_TX_QUEUE_LIMIT    	 	3
+#define TCPIP_UDP_SOCKET_DEFAULT_RX_QUEUE_LIMIT			5
+#define TCPIP_UDP_SOCKET_POOL_BUFFERS		        	4
+#define TCPIP_UDP_SOCKET_POOL_BUFFER_SIZE		    	512
+
+#define TCPIP_UDP_USE_TX_CHECKSUM             			true
+
+#define TCPIP_UDP_USE_RX_CHECKSUM             			true
+
+#define TCPIP_STACK_USE_ZEROCONF_LINK_LOCAL
+#define TCPIP_ZC_LL_PROBE_WAIT 1
+#define TCPIP_ZC_LL_PROBE_MIN 1
+#define TCPIP_ZC_LL_PROBE_MAX 2
+#define TCPIP_ZC_LL_PROBE_NUM 3
+#define TCPIP_ZC_LL_ANNOUNCE_WAIT 2
+#define TCPIP_ZC_LL_ANNOUNCE_NUM 2
+#define TCPIP_ZC_LL_ANNOUNCE_INTERVAL 2
+#define TCPIP_ZC_LL_MAX_CONFLICTS 10
+#define TCPIP_ZC_LL_RATE_LIMIT_INTERVAL 60
+#define TCPIP_ZC_LL_DEFEND_INTERVAL 10
+#define TCPIP_ZC_LL_IPV4_LLBASE 0xa9fe0100
+#define TCPIP_ZC_LL_IPV4_LLBASE_MASK 0x0000FFFF
+#define TCPIP_ZC_LL_TASK_TICK_RATE 333
+#define TCPIP_STACK_USE_ZEROCONF_MDNS_SD
+#define TCPIP_ZC_MDNS_TASK_TICK_RATE 63
+#define TCPIP_ZC_MDNS_PORT 5353
+#define TCPIP_ZC_MDNS_MAX_HOST_NAME_SIZE 32
+#define TCPIP_ZC_MDNS_MAX_LABEL_SIZE 64
+#define TCPIP_ZC_MDNS_MAX_RR_NAME_SIZE 256
+#define TCPIP_ZC_MDNS_MAX_SRV_TYPE_SIZE 32
+#define TCPIP_ZC_MDNS_MAX_SRV_NAME_SIZE 64
+#define TCPIP_ZC_MDNS_MAX_TXT_DATA_SIZE 128
+#define TCPIP_ZC_MDNS_RESOURCE_RECORD_TTL_VAL 3600
+#define TCPIP_ZC_MDNS_MAX_RR_NUM 4
+#define TCPIP_ZC_MDNS_PROBE_WAIT 750
+#define TCPIP_ZC_MDNS_PROBE_INTERVAL 250
+#define TCPIP_ZC_MDNS_PROBE_NUM 3
+#define TCPIP_ZC_MDNS_MAX_PROBE_CONFLICT_NUM 30
+#define TCPIP_ZC_MDNS_ANNOUNCE_NUM 3
+#define TCPIP_ZC_MDNS_ANNOUNCE_INTERVAL 250
+#define TCPIP_ZC_MDNS_ANNOUNCE_WAIT 250
+
+
+/*** Network Configuration Index 0 ***/
+#define TCPIP_NETWORK_DEFAULT_INTERFACE_NAME 			"MRF24W"
+#define TCPIP_IF_MRF24W
+#define TCPIP_NETWORK_DEFAULT_HOST_NAME 			"MCHPBOARD_W"
+#define TCPIP_NETWORK_DEFAULT_MAC_ADDR	 			0
+#define TCPIP_NETWORK_DEFAULT_IP_ADDRESS 			"192.168.1.20"
+#define TCPIP_NETWORK_DEFAULT_IP_MASK 				"255.255.255.0"
+#define TCPIP_NETWORK_DEFAULT_GATEWAY	 			"192.168.1.1"
+#define TCPIP_NETWORK_DEFAULT_DNS 				"192.168.1.1"
+#define TCPIP_NETWORK_DEFAULT_SECOND_DNS 			"0.0.0.0"
+#define TCPIP_NETWORK_DEFAULT_POWER_MODE 			"full"
+#define TCPIP_NETWORK_DEFAULT_INTERFACE_FLAGS   		TCPIP_NETWORK_CONFIG_DHCP_CLIENT_ON
+#define TCPIP_NETWORK_DEFAULT_IPV6_ADDRESS 			0
+#define TCPIP_NETWORK_DEFAULT_IPV6_PREFIX_LENGTH 		0
+#define TCPIP_NETWORK_DEFAULT_IPV6_GATEWAY 		        0
+
+/*** tcpip_cmd Configuration ***/
+#define TCPIP_STACK_COMMAND_ENABLE
+#define TCPIP_STACK_COMMANDS_STORAGE_ENABLE
+#define TCPIP_STACK_COMMANDS_ICMP_ECHO_REQUESTS         4
+#define TCPIP_STACK_COMMANDS_ICMP_ECHO_REQUEST_DELAY    1000
+#define TCPIP_STACK_COMMANDS_ICMP_ECHO_TIMEOUT          5000
+#define TCPIP_STACK_COMMANDS_WIFI_ENABLE             	true
+
+
+
+/*** TCPIP SYS FS Wrapper ***/
+#define SYS_FS_MAX_PATH						80
+#define LOCAL_WEBSITE_PATH_FS				"/mnt/mchpSite1"
+#define LOCAL_WEBSITE_PATH					"/mnt/mchpSite1/"
+#define SYS_FS_DRIVE						"FLASH"
+#define SYS_FS_NVM_VOL						"/dev/nvma1"
+#define SYS_FS_FATFS_STRING					"FATFS"
+#define SYS_FS_MPFS_STRING					"MPFS2"
+
+/* BSP LED Re-directs */
+#define APP_TCPIP_LED_1 BSP_LED_1
+#define APP_TCPIP_LED_2 BSP_LED_2
+#define APP_TCPIP_LED_3 BSP_LED_3
+
+#define APP_TCPIP_SWITCH_1 BSP_SWITCH_1
+#define APP_TCPIP_SWITCH_2 BSP_SWITCH_2
+#define APP_TCPIP_SWITCH_3 BSP_SWITCH_3
+
+/*** OSAL Configuration ***/
+#define OSAL_USE_RTOS          1
+
+// *****************************************************************************
+/* BSP Configuration Options
+*/
+#define BSP_OSC_FREQUENCY 24000000
+
+#endif // _SYSTEM_CONFIG_H
+/*******************************************************************************
+ End of File
+*/
+
diff -ruN /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/system_definitions.h /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/system_definitions.h
--- /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/system_definitions.h	1969-12-31 19:00:00.000000000 -0500
+++ /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/system_definitions.h	2015-05-04 10:55:53.000000000 -0400
@@ -0,0 +1,131 @@
+/*******************************************************************************
+  System Definitions
+
+  File Name:
+    system_definitions.h
+
+  Summary:
+    MPLAB Harmony project system definitions.
+
+  Description:
+    This file contains the system-wide prototypes and definitions for an MPLAB
+    Harmony project.
+ *******************************************************************************/
+
+//DOM-IGNORE-BEGIN
+/*******************************************************************************
+Copyright (c) 2013-2014 released Microchip Technology Inc.  All rights reserved.
+
+Microchip licenses to you the right to use, modify, copy and distribute
+Software only when embedded on a Microchip microcontroller or digital signal
+controller that is integrated into your product or third party product
+(pursuant to the sublicense terms in the accompanying license agreement).
+
+You should refer to the license agreement accompanying this Software for
+additional information regarding your rights and obligations.
+
+SOFTWARE AND DOCUMENTATION ARE PROVIDED AS IS WITHOUT WARRANTY OF ANY KIND,
+EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF
+MERCHANTABILITY, TITLE, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE.
+IN NO EVENT SHALL MICROCHIP OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER
+CONTRACT, NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR
+OTHER LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
+INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE OR
+CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT OF
+SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
+(INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
+ *******************************************************************************/
+//DOM-IGNORE-END
+
+#ifndef _SYS_DEFINITIONS_H
+#define _SYS_DEFINITIONS_H
+
+
+// *****************************************************************************
+// *****************************************************************************
+// Section: Included Files
+// *****************************************************************************
+// *****************************************************************************
+
+#include <stdint.h>
+#include <stddef.h>
+#include <stdbool.h>
+#include "system/common/sys_common.h"
+#include "system/common/sys_module.h"
+#include "system/clk/sys_clk.h"
+#include "system/clk/sys_clk_static.h"
+#include "system/devcon/sys_devcon.h"
+#include "system/int/sys_int.h"
+#include "system/fs/sys_fs.h"
+#include "system/fs/sys_fs_media_manager.h"
+#include "system/console/sys_console.h"
+#include "system/random/sys_random.h"
+#include "system/fs/mpfs/mpfs.h"
+#include "system/tmr/sys_tmr.h"
+#include "driver/tmr/drv_tmr.h"
+#include "driver/usart/drv_usart.h"
+#include "driver/nvm/drv_nvm.h"
+#include "system/ports/sys_ports.h"
+#include "driver/spi/drv_spi.h"
+#include "system/debug/sys_debug.h"
+#include "system/command/sys_command.h"
+
+#include "tcpip/tcpip.h"
+#include "driver/ethmac/drv_ethmac.h"
+#include "driver/wifi/mrf24w/drv_wifi.h"
+#include "FreeRTOS.h"
+#include "task.h"
+#include "app.h"
+
+
+// *****************************************************************************
+// *****************************************************************************
+// Section: Type Definitions
+// *****************************************************************************
+// *****************************************************************************
+
+// *****************************************************************************
+/* System Objects
+
+  Summary:
+    Structure holding the system's object handles
+
+  Description:
+    This structure contains the object handles for all objects in the
+    MPLAB Harmony project's system configuration.
+
+  Remarks:
+    These handles are returned from the "Initialize" functions for each module
+    and must be passed into the "Tasks" function for each module.
+*/
+
+typedef struct
+{
+    SYS_MODULE_OBJ  sysDevcon;
+    SYS_MODULE_OBJ  sysTmr;
+    SYS_MODULE_OBJ  drvTmr0;
+    SYS_MODULE_OBJ  drvUsart0;
+    SYS_MODULE_OBJ  drvNvm;
+    SYS_MODULE_OBJ  sysDebug;
+    SYS_MODULE_OBJ  sysConsole0;
+
+    /*** SPI Object for Index 0 ***/
+    SYS_MODULE_OBJ				spiObjectIdx0;
+    SYS_MODULE_OBJ  tcpip;
+
+} SYSTEM_OBJECTS;
+
+
+// *****************************************************************************
+// *****************************************************************************
+// Section: extern declarations
+// *****************************************************************************
+// *****************************************************************************
+
+extern SYSTEM_OBJECTS sysObj;
+
+#endif /* _SYS_DEFINITIONS_H */
+/*******************************************************************************
+ End of File
+*/
+
diff -ruN /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/system_exceptions.c /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/system_exceptions.c
--- /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/system_exceptions.c	1969-12-31 19:00:00.000000000 -0500
+++ /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/system_exceptions.c	2015-05-04 10:55:53.000000000 -0400
@@ -0,0 +1,143 @@
+/*******************************************************************************
+  MPLAB Harmony Exceptions Source File
+
+  File Name:
+    system_exceptions.c
+
+  Summary:
+    This file contains a function which overrides the deafult _weak_ exception 
+    handler provided by the XC32 compiler.
+
+  Description:
+    This file redefines the default _weak_  exception handler with a more debug
+    friendly one. If an unexpected exception occurs the code will stop in a
+    while(1) loop.  The debugger can be halted and two variables _excep_code and
+    _except_addr can be examined to determine the cause and address where the
+    exception occured.
+ *******************************************************************************/
+
+// DOM-IGNORE-BEGIN
+/*******************************************************************************
+Copyright (c) 2013-2015 released Microchip Technology Inc.  All rights reserved.
+
+Microchip licenses to you the right to use, modify, copy and distribute
+Software only when embedded on a Microchip microcontroller or digital signal
+controller that is integrated into your product or third party product
+(pursuant to the sublicense terms in the accompanying license agreement).
+
+You should refer to the license agreement accompanying this Software for
+additional information regarding your rights and obligations.
+
+SOFTWARE AND DOCUMENTATION ARE PROVIDED AS IS WITHOUT WARRANTY OF ANY KIND,
+EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF
+MERCHANTABILITY, TITLE, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE.
+IN NO EVENT SHALL MICROCHIP OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER
+CONTRACT, NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR
+OTHER LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
+INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE OR
+CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT OF
+SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
+(INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
+ *******************************************************************************/
+// DOM-IGNORE-END
+
+
+#include <xc.h>                 /* Defines special funciton registers, CP0 regs  */
+#include "system_config.h"
+#include "system_definitions.h"
+#include "system/debug/sys_debug.h"
+
+
+// *****************************************************************************
+// *****************************************************************************
+// Section: Global Data Definitions
+// *****************************************************************************
+// *****************************************************************************
+
+/*******************************************************************************
+  Exception Reason Data
+  
+  <editor-fold defaultstate="expanded" desc="Exception Reason Data">
+  
+  Remarks:
+    These global static items are used instead of local variables in the 
+    _general_exception_handler function because the stack may not be available
+    if an exception has occured.
+*/
+
+/* Code identifying the cause of the exception (CP0 Cause register). */
+static unsigned int _excep_code;
+
+/* Address of instruction that caused the exception. */
+static unsigned int _excep_addr;
+
+/* Pointer to the string describing the cause of the exception. */
+static char *_cause_str;
+
+/* Array identifying the cause (indexed by _exception_code). */
+static char *cause[] = 
+{
+    "Interrupt",
+    "Undefined",
+    "Undefined",
+    "Undefined",
+    "Load/fetch address error",
+    "Store address error",
+    "Instruction bus error",
+    "Data bus error",
+    "Syscall",
+    "Breakpoint",
+    "Reserved instruction",
+    "Coprocessor unusable",
+    "Arithmetic overflow",
+    "Trap",
+    "Reserved",
+    "Reserved",
+    "Reserved",
+    "Reserved",
+    "Reserved"
+};
+
+// </editor-fold>
+
+
+// *****************************************************************************
+// *****************************************************************************
+// Section: Exception Handling
+// *****************************************************************************
+// *****************************************************************************
+
+/*******************************************************************************
+  Function:
+    void _general_exception_handler ( void )
+
+  Summary:
+    Overrides the XC32 _weak_ _generic_exception_handler.
+    
+  Description:
+    This function overrides the XC32 default _weak_ _generic_exception_handler.
+
+  Remarks:
+    Refer to the XC32 User's Guide for additional information.
+ */
+
+void _general_exception_handler ( void )
+{
+    /* Mask off Mask of the ExcCode Field from the Cause Register
+    Refer to the MIPs Software User's manual */
+    _excep_code = (_CP0_GET_CAUSE() & 0x0000007C) >> 2;
+    _excep_addr = _CP0_GET_EPC();
+    _cause_str  = cause[_excep_code];
+
+    SYS_DEBUG_PRINT(SYS_ERROR_ERROR, "\nGeneral Exception %s (cause=%d, addr=%x).\n", 
+                    _cause_str, _excep_code, _excep_addr);
+
+    while (1)
+    {
+        SYS_DEBUG_BreakPoint();
+    }
+}
+
+/*******************************************************************************
+ End of File
+*/
diff -ruN /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/system_init.c /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/system_init.c
--- /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/system_init.c	1969-12-31 19:00:00.000000000 -0500
+++ /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/system_init.c	2015-08-08 19:22:59.402969000 -0400
@@ -0,0 +1,657 @@
+/*******************************************************************************
+  System Initialization File
+
+  File Name:
+    system_init.c
+
+  Summary:
+    This file contains source code necessary to initialize the system.
+
+  Description:
+    This file contains source code necessary to initialize the system.  It
+    implements the "SYS_Initialize" function, defines the configuration bits, 
+    and allocates any necessary global system resources, such as the 
+    sysObj structure that contains the object handles to all the MPLAB Harmony 
+    module objects in the system.
+ *******************************************************************************/
+
+// DOM-IGNORE-BEGIN
+/*******************************************************************************
+Copyright (c) 2013-2015 released Microchip Technology Inc.  All rights reserved.
+
+Microchip licenses to you the right to use, modify, copy and distribute
+Software only when embedded on a Microchip microcontroller or digital signal
+controller that is integrated into your product or third party product
+(pursuant to the sublicense terms in the accompanying license agreement).
+
+You should refer to the license agreement accompanying this Software for
+additional information regarding your rights and obligations.
+
+SOFTWARE AND DOCUMENTATION ARE PROVIDED AS IS WITHOUT WARRANTY OF ANY KIND,
+EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF
+MERCHANTABILITY, TITLE, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE.
+IN NO EVENT SHALL MICROCHIP OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER
+CONTRACT, NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR
+OTHER LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
+INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE OR
+CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT OF
+SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
+(INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
+ *******************************************************************************/
+// DOM-IGNORE-END
+
+
+// *****************************************************************************
+// *****************************************************************************
+// Section: Included Files
+// *****************************************************************************
+// *****************************************************************************
+
+#include "system_config.h"
+#include "system_definitions.h"
+
+
+// ****************************************************************************
+// ****************************************************************************
+// Section: Configuration Bits
+// ****************************************************************************
+// ****************************************************************************
+// <editor-fold defaultstate="collapsed" desc="Configuration Bits">
+
+/*** DEVCFG0 ***/
+
+#pragma config DEBUG =      OFF
+#pragma config JTAGEN =     OFF
+#pragma config ICESEL =     ICS_PGx2
+#pragma config TRCEN =      OFF
+#pragma config BOOTISA =    MIPS32
+#pragma config FECCCON =    OFF_UNLOCKED
+#pragma config FSLEEP =     OFF
+#pragma config DBGPER =     ALLOW_PG2
+#pragma config EJTAGBEN =   NORMAL
+#pragma config CP =         OFF
+
+/*** DEVCFG1 ***/
+
+#pragma config FNOSC =      SPLL
+#pragma config DMTINTV =    WIN_127_128
+#pragma config FSOSCEN =    OFF
+#pragma config IESO =       OFF
+#pragma config POSCMOD =    EC
+#pragma config OSCIOFNC =   OFF
+#pragma config FCKSM =      CSECME
+#pragma config WDTPS =      PS1048576
+#pragma config WDTSPGM =    STOP
+#pragma config FWDTEN =     OFF
+#pragma config WINDIS =     NORMAL
+#pragma config FWDTWINSZ =  WINSZ_25
+#pragma config DMTCNT =     DMT9
+#pragma config FDMTEN =     OFF
+
+/*** DEVCFG2 ***/
+
+#pragma config FPLLIDIV =   DIV_3
+#pragma config FPLLRNG =    RANGE_8_16_MHZ
+#pragma config FPLLICLK =   PLL_POSC
+#pragma config FPLLMULT =   MUL_50
+#pragma config FPLLODIV =   DIV_2
+#pragma config UPLLFSEL =   FREQ_24MHZ
+#pragma config UPLLEN =     ON
+
+/*** DEVCFG3 ***/
+
+#pragma config USERID =     0xffff
+#pragma config FMIIEN =     OFF
+#pragma config FETHIO =     ON
+#pragma config PGL1WAY =    ON
+#pragma config PMDL1WAY =   ON
+#pragma config IOL1WAY =    ON
+#pragma config FUSBIDIO =   OFF
+
+/*** BF1SEQ0 ***/
+
+#pragma config TSEQ =       0xffff
+#pragma config CSEQ =       0xffff
+// </editor-fold>
+
+
+// *****************************************************************************
+// *****************************************************************************
+// Section: Library/Stack Initialization Data
+// *****************************************************************************
+// *****************************************************************************
+
+
+
+// *****************************************************************************
+// *****************************************************************************
+// Section: Driver Initialization Data
+// *****************************************************************************
+// *****************************************************************************
+
+//<editor-fold defaultstate="collapsed" desc="DRV_Timer Initialization Data">
+
+/*** TMR Driver Initialization Data ***/
+
+const DRV_TMR_INIT drvTmr0InitData =
+{
+    .moduleInit.sys.powerState = DRV_TMR_POWER_STATE_IDX0,
+    .tmrId = DRV_TMR_PERIPHERAL_ID_IDX0,
+    .clockSource = DRV_TMR_CLOCK_SOURCE_IDX0, 
+    .prescale = DRV_TMR_PRESCALE_IDX0,
+    .mode = DRV_TMR_OPERATION_MODE_IDX0,
+    .interruptSource = DRV_TMR_INTERRUPT_SOURCE_IDX0,
+    .asyncWriteEnable = false,
+};
+// </editor-fold>
+//<editor-fold defaultstate="collapsed" desc="DRV_USART Initialization Data">
+
+const DRV_USART_INIT drvUsart0InitData =
+{
+    .moduleInit.value = DRV_USART_POWER_STATE_IDX0,
+    .usartID = DRV_USART_PERIPHERAL_ID_IDX0, 
+    .mode = DRV_USART_OPER_MODE_IDX0,
+    .modeData.AddressedModeInit.address = DRV_USART_OPER_MODE_DATA_IDX0,
+    .flags = DRV_USART_INIT_FLAGS_IDX0,
+    .brgClock = DRV_USART_BRG_CLOCK_IDX0,
+    .lineControl = DRV_USART_LINE_CNTRL_IDX0,
+    .baud = DRV_USART_BAUD_RATE_IDX0,
+    .handshake = DRV_USART_HANDSHAKE_MODE_IDX0,
+    .interruptTransmit = DRV_USART_XMIT_INT_SRC_IDX0,
+    .interruptReceive = DRV_USART_RCV_INT_SRC_IDX0,
+    .queueSizeTransmit = DRV_USART_XMIT_QUEUE_SIZE_IDX0,
+    .queueSizeReceive = DRV_USART_RCV_QUEUE_SIZE_IDX0,
+};
+
+// </editor-fold>
+//<editor-fold defaultstate="collapsed" desc="DRV_NVM Initialization Data">
+extern const uint8_t NVM_MEDIA_DATA[];
+
+/*** FLASH Driver Initialization Data ***/
+
+SYS_FS_MEDIA_REGION_GEOMETRY NVMGeometryTable[3] = 
+{
+    {
+        .blockSize = 1,
+        .numBlocks = (DRV_NVM_MEDIA_SIZE * 1024),
+    },
+    {
+       .blockSize = DRV_NVM_ROW_SIZE,
+       .numBlocks = ((DRV_NVM_MEDIA_SIZE * 1024)/DRV_NVM_ROW_SIZE)
+    },
+    {
+       .blockSize = DRV_NVM_PAGE_SIZE,
+       .numBlocks = ((DRV_NVM_MEDIA_SIZE * 1024)/DRV_NVM_PAGE_SIZE)
+    }
+};
+
+const SYS_FS_MEDIA_GEOMETRY NVMGeometry = 
+{
+    .mediaProperty = SYS_FS_MEDIA_WRITE_IS_BLOCKING,
+    .numReadRegions = 1,
+    .numWriteRegions = 1,
+    .numEraseRegions = 1,
+    .geometryTable = (SYS_FS_MEDIA_REGION_GEOMETRY *)&NVMGeometryTable
+};
+
+const DRV_NVM_INIT drvNvmInit =
+{
+    .moduleInit.sys.powerState = SYS_MODULE_POWER_RUN_FULL,
+    .nvmID = NVM_ID_0,
+    .interruptSource = INT_SOURCE_FLASH_CONTROL,
+
+    .mediaStartAddress = (uintptr_t )NVM_MEDIA_DATA,
+    .nvmMediaGeometry = (SYS_FS_MEDIA_GEOMETRY *)&NVMGeometry
+
+};
+
+
+// </editor-fold>
+//<editor-fold defaultstate="collapsed" desc="DRV_SPI Initialization Data">
+ 
+ /*** SPI Driver Initialization Data ***/
+ /*** Index 0  ***/
+ DRV_SPI_INIT drvSpi0InitData =
+ {
+    .spiId = DRV_SPI_SPI_ID_IDX0,
+    .taskMode = DRV_SPI_TASK_MODE_IDX0,
+    .spiMode = DRV_SPI_SPI_MODE_IDX0,
+    .allowIdleRun = DRV_SPI_ALLOW_IDLE_RUN_IDX0,
+    .spiProtocolType = DRV_SPI_SPI_PROTOCOL_TYPE_IDX0,
+    .commWidth = DRV_SPI_COMM_WIDTH_IDX0,
+    .spiClk = DRV_SPI_SPI_CLOCK_IDX0,
+    .baudRate = DRV_SPI_BAUD_RATE_IDX0,
+    .bufferType = DRV_SPI_BUFFER_TYPE_IDX0,
+    .clockMode = DRV_SPI_CLOCK_MODE_IDX0,
+    .inputSamplePhase = DRV_SPI_INPUT_PHASE_IDX0,
+    .queueSize = DRV_SPI_QUEUE_SIZE_IDX0,
+    .jobQueueReserveSize = DRV_SPI_RESERVED_JOB_IDX0,
+ };
+// </editor-fold>
+//<editor-fold defaultstate="collapsed" desc="SYS_TMR Initialization Data">
+/*** TMR Service Initialization Data ***/
+const SYS_TMR_INIT sysTmrInitData =
+{
+    .moduleInit = {SYS_MODULE_POWER_RUN_FULL},
+    .drvIndex = DRV_TMR_INDEX_0,
+    .tmrFreq = 1000, 
+};
+
+// </editor-fold>
+
+// *****************************************************************************
+// *****************************************************************************
+// Section: TCPIP Data
+// *****************************************************************************
+// *****************************************************************************
+
+//<editor-fold defaultstate="collapsed" desc="TCPIP Stack Initialization Data">
+
+/*** ARP Service Initialization Data ***/
+const TCPIP_ARP_MODULE_CONFIG tcpipARPInitData =
+{ 
+    .cacheEntries       = TCPIP_ARP_CACHE_ENTRIES,     
+    .deleteOld          = TCPIP_ARP_CACHE_DELETE_OLD,    
+    .entrySolvedTmo     = TCPIP_ARP_CACHE_SOLVED_ENTRY_TMO, 
+    .entryPendingTmo    = TCPIP_ARP_CACHE_PENDING_ENTRY_TMO, 
+    .entryRetryTmo      = TCPIP_ARP_CACHE_PENDING_RETRY_TMO, 
+    .permQuota          = TCPIP_ARP_CACHE_PERMANENT_QUOTA, 
+    .purgeThres         = TCPIP_ARP_CACHE_PURGE_THRESHOLD, 
+    .purgeQuanta        = TCPIP_ARP_CACHE_PURGE_QUANTA, 
+    .retries            = TCPIP_ARP_CACHE_ENTRY_RETRIES, 
+    .gratProbeCount     = TCPIP_ARP_GRATUITOUS_PROBE_COUNT,
+};
+
+
+/*** Announce Discovery Initialization Data ***/
+const TCPIP_ANNOUNCE_MODULE_CONFIG tcpipAnnounceInitData =
+{ 
+};
+
+/*** UDP Sockets Initialization Data ***/
+const TCPIP_UDP_MODULE_CONFIG tcpipUDPInitData =
+{
+    .nSockets       = TCPIP_UDP_MAX_SOCKETS,
+    .sktTxBuffSize  = TCPIP_UDP_SOCKET_DEFAULT_TX_SIZE, 
+    .poolBuffers    = TCPIP_UDP_SOCKET_POOL_BUFFERS,
+    .poolBufferSize = TCPIP_UDP_SOCKET_POOL_BUFFER_SIZE,
+};
+
+/*** TCP Sockets Initialization Data ***/
+const TCPIP_TCP_MODULE_CONFIG tcpipTCPInitData =
+{
+    .nSockets       = TCPIP_TCP_MAX_SOCKETS,
+    .sktTxBuffSize  = TCPIP_TCP_SOCKET_DEFAULT_TX_SIZE, 
+    .sktRxBuffSize  = TCPIP_TCP_SOCKET_DEFAULT_RX_SIZE,
+};
+
+/*** HTTP Server Initialization Data ***/
+const TCPIP_HTTP_MODULE_CONFIG tcpipHTTPInitData =
+{
+    .nConnections   = TCPIP_HTTP_MAX_CONNECTIONS,
+    .nTlsConnections    = TCPIP_HTTP_MAX_TLS_CONNECTIONS,
+    .dataLen		= TCPIP_HTTP_MAX_DATA_LEN,
+    .sktTxBuffSize	= TCPIP_HTTP_SKT_TX_BUFF_SIZE,
+    .sktRxBuffSize	= TCPIP_HTTP_SKT_RX_BUFF_SIZE,
+    .tlsSktTxBuffSize	= TCPIP_HTTP_TLS_SKT_TX_BUFF_SIZE,
+    .tlsSktRxBuffSize	= TCPIP_HTTP_TLS_SKT_RX_BUFF_SIZE,
+    .configFlags	= TCPIP_HTTP_CONFIG_FLAGS,
+};
+
+
+
+/*** DHCP client Initialization Data ***/
+const TCPIP_DHCP_MODULE_CONFIG tcpipDHCPInitData =
+{     
+    .dhcpEnable     = TCPIP_DHCP_CLIENT_ENABLED,   
+    .dhcpTmo        = TCPIP_DHCP_TIMEOUT,
+    .dhcpCliPort    = TCPIP_DHCP_CLIENT_CONNECT_PORT,
+    .dhcpSrvPort    = TCPIP_DHCP_SERVER_LISTEN_PORT,
+
+};
+
+
+/*** ICMP Server Initialization Data ***/
+const TCPIP_ICMP_MODULE_CONFIG tcpipICMPInitData = 
+{
+};
+
+/*** NBNS Server Initialization Data ***/
+const TCPIP_NBNS_MODULE_CONFIG tcpipNBNSInitData =
+{ 
+};
+
+
+/*** Wi-Fi Interface MRF24W Initialization Data ***/
+const TCPIP_MODULE_MAC_MRF24W_CONFIG macMRF24WConfigData ={
+};
+
+
+/*** Zeroconfig initialization data ***/
+const ZCLL_MODULE_CONFIG tcpipZCLLInitData =
+{
+};
+
+
+/*** DHCP server initialization data ***/
+TCPIP_DHCPS_ADDRESS_CONFIG DHCP_POOL_CONFIG[]=
+{
+    {
+        .interfaceIndex     = TCPIP_DHCP_SERVER_INTERFACE_INDEX_IDX0,
+        .serverIPAddress    = TCPIP_DHCPS_DEFAULT_SERVER_IP_ADDRESS_IDX0,
+        .startIPAddRange    = TCPIP_DHCPS_DEFAULT_IP_ADDRESS_RANGE_START_IDX0,
+        .ipMaskAddress      = TCPIP_DHCPS_DEFAULT_SERVER_NETMASK_ADDRESS_IDX0,
+        .priDNS             = TCPIP_DHCPS_DEFAULT_SERVER_PRIMARY_DNS_ADDRESS_IDX0,
+        .secondDNS          = TCPIP_DHCPS_DEFAULT_SERVER_SECONDARY_DNS_ADDRESS_IDX0,
+        .poolEnabled        = TCPIP_DHCP_SERVER_POOL_ENABLED_IDX0,
+    },
+};
+const TCPIP_DHCPS_MODULE_CONFIG tcpipDHCPSInitData =
+{
+    .enabled            = true,
+    .deleteOldLease     = TCPIP_DHCP_SERVER_DELETE_OLD_ENTRIES,
+    .leaseEntries       = TCPIP_DHCPS_LEASE_ENTRIES_DEFAULT,
+    .entrySolvedTmo     = TCPIP_DHCPS_LEASE_SOLVED_ENTRY_TMO,
+    .dhcpServer         = (TCPIP_DHCPS_ADDRESS_CONFIG*)DHCP_POOL_CONFIG,
+};
+
+
+/*** DNS Client Initialization Data ***/
+const TCPIP_DNS_CLIENT_MODULE_CONFIG tcpipDNSClientInitData =
+{
+    .deleteOldLease         = TCPIP_DNS_CLIENT_DELETE_OLD_ENTRIES,
+    .cacheEntries           = TCPIP_DNS_CLIENT_CACHE_ENTRIES,
+    .entrySolvedTmo         = TCPIP_DNS_CLIENT_CACHE_ENTRY_TMO,    
+    .IPv4EntriesPerDNSName  = TCPIP_DNS_CLIENT_CACHE_PER_IPV4_ADDRESS,
+    .dnsIpAddressType       = TCPIP_DNS_CLIENT_OPEN_ADDRESS_TYPE,
+    .IPv6EntriesPerDNSName  = TCPIP_DNS_CLIENT_CACHE_PER_IPV6_ADDRESS,
+};
+
+/*** DNS Server Initialization Data ***/
+const TCPIP_DNSS_MODULE_CONFIG tcpipDNSServerInitData =
+{ 
+    .deleteOldLease			= TCPIP_DNSS_DELETE_OLD_LEASE,
+    .replyBoardAddr			= TCPIP_DNSS_REPLY_BOARD_ADDR,
+    .IPv4EntriesPerDNSName 	= TCPIP_DNSS_CACHE_PER_IPV4_ADDRESS,
+	.IPv6EntriesPerDNSName 	= 0,
+};
+
+
+
+const TCPIP_NETWORK_CONFIG __attribute__((unused))  TCPIP_HOSTS_CONFIGURATION[] =
+{
+/*** Network Configuration Index 0 ***/
+    {
+        TCPIP_NETWORK_DEFAULT_INTERFACE_NAME,       // interface
+        TCPIP_NETWORK_DEFAULT_HOST_NAME,            // hostName
+        TCPIP_NETWORK_DEFAULT_MAC_ADDR,             // macAddr
+        TCPIP_NETWORK_DEFAULT_IP_ADDRESS,           // ipAddr
+        TCPIP_NETWORK_DEFAULT_IP_MASK,              // ipMask
+        TCPIP_NETWORK_DEFAULT_GATEWAY,              // gateway
+        TCPIP_NETWORK_DEFAULT_DNS,                  // priDNS
+        TCPIP_NETWORK_DEFAULT_SECOND_DNS,           // secondDNS
+        TCPIP_NETWORK_DEFAULT_POWER_MODE,           // powerMode
+        TCPIP_NETWORK_DEFAULT_INTERFACE_FLAGS,      // startFlags
+    },
+};
+
+const TCPIP_STACK_MODULE_CONFIG TCPIP_STACK_MODULE_CONFIG_TBL [] =
+{
+    {TCPIP_MODULE_IPV4,          0},
+    {TCPIP_MODULE_ICMP,          0},                           // TCPIP_MODULE_ICMP
+    {TCPIP_MODULE_ARP,           &tcpipARPInitData},              // TCPIP_MODULE_ARP
+    {TCPIP_MODULE_UDP,           &tcpipUDPInitData},              // TCPIP_MODULE_UDP,
+    {TCPIP_MODULE_TCP,           &tcpipTCPInitData},              // TCPIP_MODULE_TCP,
+    {TCPIP_MODULE_DHCP_CLIENT,   &tcpipDHCPInitData},             // TCPIP_MODULE_DHCP_CLIENT,
+    {TCPIP_MODULE_DHCP_SERVER,   &tcpipDHCPSInitData},                           // TCPIP_MODULE_DHCP_SERVER,
+    {TCPIP_MODULE_ANNOUNCE,      &tcpipAnnounceInitData},                     // TCPIP_MODULE_ANNOUNCE,
+    {TCPIP_MODULE_DNS_CLIENT,&tcpipDNSClientInitData}, // TCPIP_MODULE_DNS_CLIENT,
+    {TCPIP_MODULE_DNS_SERVER,&tcpipDNSServerInitData}, // TCPIP_MODULE_DNS_SERVER,
+    {TCPIP_MODULE_NBNS,          &tcpipNBNSInitData},                           // TCPIP_MODULE_NBNS
+
+    {TCPIP_MODULE_HTTP_SERVER,   &tcpipHTTPInitData},              // TCPIP_MODULE_HTTP_SERVER,
+    {TCPIP_MODULE_ZCLL, 0},                                    // TCPIP_MODULE_ZCLL,
+    {TCPIP_MODULE_MDNS, 0},                                    // TCPIP_MODULE_MDNS,
+    // MAC modules
+    {TCPIP_MODULE_MAC_MRF24W, &macMRF24WConfigData},         // TCPIP_MODULE_MAC_MRF24W
+};
+
+/*********************************************************************
+ * Function:        SYS_MODULE_OBJ TCPIP_STACK_Init()
+ *
+ * PreCondition:    None
+ *
+ * Input:
+ *
+ * Output:          valid system module object if Stack and its componets are initialized
+ *                  SYS_MODULE_OBJ_INVALID otherwise
+ *
+ * Overview:        The function starts the initialization of the stack.
+ *                  If an error occurs, the SYS_ERROR() is called
+ *                  and the function de-initialize itself and will return false.
+ *
+ * Side Effects:    None
+ *
+ * Note:            This function must be called before any of the
+ *                  stack or its component routines are used.
+ *
+ ********************************************************************/
+
+
+SYS_MODULE_OBJ TCPIP_STACK_Init()
+{
+    TCPIP_STACK_INIT    tcpipInit;
+
+    tcpipInit.moduleInit.sys.powerState = SYS_MODULE_POWER_RUN_FULL;
+    tcpipInit.pNetConf = TCPIP_HOSTS_CONFIGURATION;
+    tcpipInit.nNets = sizeof (TCPIP_HOSTS_CONFIGURATION) / sizeof (*TCPIP_HOSTS_CONFIGURATION);
+    tcpipInit.pModConfig = TCPIP_STACK_MODULE_CONFIG_TBL;
+    tcpipInit.nModules = sizeof (TCPIP_STACK_MODULE_CONFIG_TBL) / sizeof (*TCPIP_STACK_MODULE_CONFIG_TBL);
+
+    return TCPIP_STACK_Initialize(0, &tcpipInit.moduleInit);
+}
+
+// </editor-fold>
+
+// *****************************************************************************
+// *****************************************************************************
+// Section: System Data
+// *****************************************************************************
+// *****************************************************************************
+
+/* Structure to hold the object handles for the modules in the system. */
+SYSTEM_OBJECTS sysObj;
+
+
+// *****************************************************************************
+// *****************************************************************************
+// Section: Module Initialization Data
+// *****************************************************************************
+// *****************************************************************************
+
+/*******************************************************************************
+  Device Control System Service Initialization Data
+  
+  <editor-fold defaultstate="collapsed" 
+  desc="Device Control System Service Initialization Data">
+*/
+
+const SYS_DEVCON_INIT sysDevconInit =
+{
+    .moduleInit = {0},
+};
+
+// </editor-fold>
+
+
+//<editor-fold defaultstate="collapsed" desc="SYS_FS Initialization Data">
+
+
+
+/*** File System Initialization Data ***/
+
+const SYS_FS_MEDIA_MOUNT_DATA sysfsMountTable[SYS_FS_VOLUME_NUMBER] = 
+{
+	{NULL}
+};
+
+
+
+const SYS_FS_REGISTRATION_TABLE sysFSInit [ SYS_FS_MAX_FILE_SYSTEM_TYPE ] =
+{
+    {
+        .nativeFileSystemType = MPFS2,
+        .nativeFileSystemFunctions = &MPFSFunctions
+    }
+};
+
+
+
+// </editor-fold>
+//<editor-fold defaultstate="collapsed" desc="SYS_DEBUG Initialization Data">
+/*** System Debug Initialization Data ***/
+
+SYS_DEBUG_INIT debugInit =
+{
+    .moduleInit = {0},
+    .errorLevel = SYS_ERROR_FATAL
+};
+// </editor-fold>
+//<editor-fold defaultstate="collapsed" desc="SYS_CONSOLE Initialization Data">
+/*** System Console Initialization Data ***/
+
+SYS_MODULE_OBJ sysConsoleObjects[] = { SYS_MODULE_OBJ_INVALID };
+
+/* Declared in console device implementation (sys_console_uart.c) */
+extern SYS_CONSOLE_DEV_DESC consUsartDevDesc;
+SYS_CONSOLE_INIT consUsartInit0 =
+{
+    .moduleInit = {0},
+    .consDevDesc = &consUsartDevDesc,
+};
+// </editor-fold>
+//<editor-fold defaultstate="collapsed" desc="SYS_COMMAND Initialization Data">
+/*** System Command Initialization Data ***/
+
+SYS_CMD_INIT sysCmdInit =
+{
+    .moduleInit = {0},
+    .consoleCmdIOParam = SYS_CMD_SINGLE_CHARACTER_READ_CONSOLE_IO_PARAM,
+};
+// </editor-fold>
+// *****************************************************************************
+// *****************************************************************************
+// Section: Static Initialization Functions
+// *****************************************************************************
+// *****************************************************************************
+
+
+// *****************************************************************************
+// *****************************************************************************
+// Section: System Initialization
+// *****************************************************************************
+// *****************************************************************************
+
+/*******************************************************************************
+  Function:
+    void SYS_Initialize ( SYS_INIT_DATA *data )
+
+  Summary:
+    Initializes the board, services, drivers, application and other modules.
+
+  Remarks:
+    See prototype in system/common/sys_module.h.
+ */
+
+void SYS_Initialize ( void* data )
+{
+    /* Core Processor Initialization */
+    SYS_CLK_Initialize( NULL );
+    sysObj.sysDevcon = SYS_DEVCON_Initialize(SYS_DEVCON_INDEX_0, (SYS_MODULE_INIT*)&sysDevconInit);
+    SYS_DEVCON_PerformanceConfig(SYS_CLK_SystemFrequencyGet());
+    SYS_PORTS_Initialize();
+
+    /* Board Support Package Initialization */
+    BSP_Initialize();
+
+    /* Initialize Drivers */
+
+    sysObj.drvTmr0 = DRV_TMR_Initialize(DRV_TMR_INDEX_0, (SYS_MODULE_INIT *)&drvTmr0InitData);
+
+    SYS_INT_VectorPrioritySet(INT_VECTOR_T2, INT_PRIORITY_LEVEL4);
+    SYS_INT_VectorSubprioritySet(INT_VECTOR_T2, INT_SUBPRIORITY_LEVEL0);
+ 
+ 
+     sysObj.drvUsart0 = DRV_USART_Initialize(DRV_USART_INDEX_0, (SYS_MODULE_INIT *)&drvUsart0InitData);
+    SYS_INT_VectorPrioritySet(INT_VECTOR_UART4_TX, INT_PRIORITY_LEVEL1);
+    SYS_INT_VectorSubprioritySet(INT_VECTOR_UART4_TX, INT_SUBPRIORITY_LEVEL0);
+    SYS_INT_VectorPrioritySet(INT_VECTOR_UART4_RX, INT_PRIORITY_LEVEL1);
+    SYS_INT_VectorSubprioritySet(INT_VECTOR_UART4_RX, INT_SUBPRIORITY_LEVEL0);
+    SYS_INT_VectorPrioritySet(INT_VECTOR_UART4_FAULT, INT_PRIORITY_LEVEL1);
+    SYS_INT_VectorSubprioritySet(INT_VECTOR_UART4_FAULT, INT_SUBPRIORITY_LEVEL0);
+
+    /*** SPI Driver Index 0 initialization***/
+
+ 
+    sysObj.spiObjectIdx0 = DRV_SPI_Initialize(0, (const SYS_MODULE_INIT  * const)&drvSpi0InitData);
+    /* Configure the Flash Controller Interrupt Priority */
+    SYS_INT_VectorPrioritySet(INT_VECTOR_FLASH, INT_PRIORITY_LEVEL4);
+
+    /* Configure the Flash Controller Interrupt Sub Priority */
+    SYS_INT_VectorSubprioritySet(INT_VECTOR_FLASH, INT_SUBPRIORITY_LEVEL0);
+
+    /* Initialize the NVM Driver */
+    sysObj.drvNvm = DRV_NVM_Initialize(DRV_NVM_INDEX_0, (SYS_MODULE_INIT *)&drvNvmInit);
+
+    /* Enable MRF24W Interrupt */
+    SYS_PORTS_PinDirectionSelect(PORTS_ID_0,
+                                 SYS_PORTS_DIRECTION_INPUT,
+                                 WF_INT_PORT_CHANNEL,
+                                 WF_INT_BIT_POS);
+
+    // Temporary implementation
+    ANSELEbits.ANSE8 = 0; /* configure IO pin as input and External Interrupt pin */
+    //SYS_PORTS_PinModeSelect(PORTS_ID_0,PORTS_ANALOG_PIN_25,PORTS_PIN_MODE_DIGITAL);
+
+    SYS_PORTS_RemapInput(PORTS_ID_0,INPUT_FUNC_INT4,INPUT_PIN_RPA15);
+
+    PLIB_INT_ExternalFallingEdgeSelect(INT_ID_0, MRF_INT_SOURCE);
+
+    if(!DRV_WIFI_RTOS_TaskInit())
+    {
+        return;
+    }
+
+
+    /* Initialize System Services */
+    SYS_INT_Initialize();  
+    sysObj.sysConsole0 = SYS_CONSOLE_Initialize(SYS_CONSOLE_INDEX_0, (SYS_MODULE_INIT *)&consUsartInit0);
+
+    sysObj.sysDebug = SYS_DEBUG_Initialize(SYS_DEBUG_INDEX_0, (SYS_MODULE_INIT*)&debugInit);
+
+    /*** TMR Service Initialization Code ***/
+    sysObj.sysTmr  = SYS_TMR_Initialize(SYS_TMR_INDEX_0, (const SYS_MODULE_INIT  * const)&sysTmrInitData);
+    SYS_CMD_Initialize((SYS_MODULE_INIT*)&sysCmdInit);
+    SYS_FS_Initialize( (const void *) sysFSInit );
+    SYS_RANDOM_Initialize(0, 0);
+
+    /* Initialize Middleware */
+
+    
+    /* TCPIP Stack Initialization */
+    sysObj.tcpip = TCPIP_STACK_Init();
+    if (sysObj.tcpip == SYS_MODULE_OBJ_INVALID)
+    {
+       return;
+    }
+
+
+    /* Initialize the Application */
+    APP_Initialize();
+}
+
+
+/*******************************************************************************
+ End of File
+*/
+
diff -ruN /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/system_interrupt.c /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/system_interrupt.c
--- /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/system_interrupt.c	1969-12-31 19:00:00.000000000 -0500
+++ /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/system_interrupt.c	2015-08-08 21:56:49.600906100 -0400
@@ -0,0 +1,134 @@
+/*******************************************************************************
+ System Interrupts File
+
+  File Name:
+    system_int.c
+
+  Summary:
+    Raw ISR definitions.
+
+  Description:
+    This file contains a definitions of the raw ISRs required to support the
+    interrupt sub-system.
+
+  Summary:
+    This file contains source code for the interrupt vector functions in the
+    system.
+
+  Description:
+    This file contains source code for the interrupt vector functions in the
+    system.  It implements the system and part specific vector "stub" functions
+    from which the individual "Tasks" functions are called for any modules
+    executing interrupt-driven in the MPLAB Harmony system.
+
+  Remarks:
+    This file requires access to the systemObjects global data structure that
+    contains the object handles to all MPLAB Harmony module objects executing
+    interrupt-driven in the system.  These handles are passed into the individual
+    module "Tasks" functions to identify the instance of the module to maintain.
+ *******************************************************************************/
+
+// DOM-IGNORE-BEGIN
+/*******************************************************************************
+Copyright (c) 2011-2014 released Microchip Technology Inc.  All rights reserved.
+
+Microchip licenses to you the right to use, modify, copy and distribute
+Software only when embedded on a Microchip microcontroller or digital signal
+controller that is integrated into your product or third party product
+(pursuant to the sublicense terms in the accompanying license agreement).
+
+You should refer to the license agreement accompanying this Software for
+additional information regarding your rights and obligations.
+
+SOFTWARE AND DOCUMENTATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
+EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF
+MERCHANTABILITY, TITLE, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE.
+IN NO EVENT SHALL MICROCHIP OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER
+CONTRACT, NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR
+OTHER LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
+INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE OR
+CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT OF
+SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
+(INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
+ *******************************************************************************/
+// DOM-IGNORE-END
+
+
+// *****************************************************************************
+// *****************************************************************************
+// Section: Included Files
+// *****************************************************************************
+// *****************************************************************************
+
+#include <xc.h>
+#include <sys/attribs.h>
+#include "app.h"
+#include "system_definitions.h"
+
+// *****************************************************************************
+// *****************************************************************************
+// Section: System Interrupt Vector Functions
+// *****************************************************************************
+// *****************************************************************************
+
+void IntHandlerDrvTmrInstance0(void)
+
+{
+
+    DRV_TMR_Tasks_ISR(sysObj.drvTmr0);
+
+}
+  
+
+void IntHandlerDrvUsartTransmitInstance0(void)
+{
+
+    DRV_USART_TasksTransmit(sysObj.drvUsart0);
+    DRV_USART_TasksError(sysObj.drvUsart0);
+}
+
+void IntHandlerDrvUsartReceiveInstance0(void)
+{
+
+    DRV_USART_TasksReceive(sysObj.drvUsart0);
+    DRV_USART_TasksError(sysObj.drvUsart0);
+
+}
+
+void IntHandlerDrvUsartErrorInstance0(void)
+{
+
+    SYS_ASSERT(false, "USART Driver Instance 0 Error");
+
+}
+ 
+ 
+
+ 
+ 
+
+ 
+
+ 
+ 
+ 
+
+void IntHandlerDrvNvm (void)
+
+{
+    DRV_NVM_Tasks(sysObj.drvNvm);
+
+}
+
+
+void __ISR(_EXTERNAL_4_VECTOR, ipl3AUTO) _InterruptHandler_MRF24W_Ext4(void)
+{
+    SYS_INT_SourceDisable(MRF_INT_SOURCE); // disable further interrupts
+    DRV_WIFI_ISR_SemUnlock();
+}
+
+ 
+/*******************************************************************************
+ End of File
+*/
+
diff -ruN /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/system_interrupt_a.S /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/system_interrupt_a.S
--- /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/system_interrupt_a.S	1969-12-31 19:00:00.000000000 -0500
+++ /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/system_interrupt_a.S	2015-08-08 19:23:58.686359800 -0400
@@ -0,0 +1,159 @@
+/*******************************************************************************
+ System Interrupt Source File
+
+  File Name:
+    sys_interrupt_a.S
+
+  Summary:
+    Raw ISR definitions.
+
+  Description:
+    This file contains a definitions of the raw ISRs required to support the 
+    interrupt sub-system.
+*******************************************************************************/
+
+// DOM-IGNORE-BEGIN
+/*******************************************************************************
+Copyright (c) 2011-2014 released Microchip Technology Inc.  All rights reserved.
+
+Microchip licenses to you the right to use, modify, copy and distribute
+Software only when embedded on a Microchip microcontroller or digital signal
+controller that is integrated into your product or third party product
+(pursuant to the sublicense terms in the accompanying license agreement).
+
+You should refer to the license agreement accompanying this Software for
+additional information regarding your rights and obligations.
+
+SOFTWARE AND DOCUMENTATION ARE PROVIDED AS IS WITHOUT WARRANTY OF ANY KIND,
+EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF
+MERCHANTABILITY, TITLE, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE.
+IN NO EVENT SHALL MICROCHIP OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER
+CONTRACT, NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR
+OTHER LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
+INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE OR
+CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT OF
+SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
+(INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
+ *******************************************************************************/
+// DOM-IGNORE-END
+/*
+*********************************************************************************************************
+*                                           INCLUDES
+*********************************************************************************************************
+*/
+#include <xc.h>
+
+#include "ISR_Support.h"
+
+
+
+/* TMR Instance 0 Interrupt */
+
+   .extern  IntHandlerDrvTmrInstance0
+
+   .section	.vector_9,code, keep
+   .equ     __vector_dispatch_9, IntVectorDrvTmrInstance0
+   .global  __vector_dispatch_9
+   .set     nomicromips
+   .set     noreorder
+   .set     nomips16
+   .set     noat
+   .ent  IntVectorDrvTmrInstance0
+
+IntVectorDrvTmrInstance0:
+    portSAVE_CONTEXT
+    la    s6,  IntHandlerDrvTmrInstance0
+    jalr  s6
+    nop
+    portRESTORE_CONTEXT
+    .end	IntVectorDrvTmrInstance0
+
+
+
+/* USART Instance 0 Interrupt */
+
+   .extern  IntHandlerDrvUsartReceiveInstance0
+
+   .section	.vector_171,code, keep
+   .equ     __vector_dispatch_171, IntVectorDrvUsartReceiveInstance0
+   .global  __vector_dispatch_171
+   .set     nomicromips
+   .set     noreorder
+   .set     nomips16
+   .set     noat
+   .ent  IntVectorDrvUsartReceiveInstance0
+
+IntVectorDrvUsartReceiveInstance0:
+    portSAVE_CONTEXT
+    la    s6,  IntHandlerDrvUsartReceiveInstance0
+    jalr  s6
+    nop
+    portRESTORE_CONTEXT
+    .end	IntVectorDrvUsartReceiveInstance0
+
+   .extern  IntHandlerDrvUsartTransmitInstance0
+
+   .section	.vector_172,code, keep
+   .equ     __vector_dispatch_172, IntVectorDrvUsartTransmitInstance0
+   .global  __vector_dispatch_172
+   .set     nomicromips
+   .set     noreorder
+   .set     nomips16
+   .set     noat
+   .ent  IntVectorDrvUsartTransmitInstance0
+
+IntVectorDrvUsartTransmitInstance0:
+    portSAVE_CONTEXT
+    la    s6,  IntHandlerDrvUsartTransmitInstance0
+    jalr  s6
+    nop
+    portRESTORE_CONTEXT
+    .end	IntVectorDrvUsartTransmitInstance0
+
+   .extern  IntHandlerDrvUsartErrorInstance0
+
+   .section	.vector_170,code, keep
+   .equ     __vector_dispatch_170, IntVectorDrvUsartErrorInstance0
+   .global  __vector_dispatch_170
+   .set     nomicromips
+   .set     noreorder
+   .set     nomips16
+   .set     noat
+   .ent  IntVectorDrvUsartErrorInstance0
+
+IntVectorDrvUsartErrorInstance0:
+    portSAVE_CONTEXT
+    la    s6,  IntHandlerDrvUsartErrorInstance0
+    jalr  s6
+    nop
+    portRESTORE_CONTEXT
+    .end	IntVectorDrvUsartErrorInstance0
+
+
+/* NVM Interrupt */
+
+   .extern  IntHandlerDrvNvm
+
+   .section	.vector_167,code, keep
+   .equ     __vector_dispatch_167, IntVectorDrvNvm
+   .global  __vector_dispatch_167
+   .set     nomicromips
+   .set     noreorder
+   .set     nomips16
+   .set     noat
+   .ent  IntVectorDrvNvm
+
+IntVectorDrvNvm:
+    portSAVE_CONTEXT
+    la    s6,  IntHandlerDrvNvm
+    jalr  s6
+    nop
+    portRESTORE_CONTEXT
+    .end	IntVectorDrvNvm
+
+
+
+/*******************************************************************************
+ End of File
+ */
+
diff -ruN /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/system_tasks.c /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/system_tasks.c
--- /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/system_tasks.c	1969-12-31 19:00:00.000000000 -0500
+++ /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/src/system_config/pic32mz_ec_wifire_freertos/system_tasks.c	2015-05-04 10:55:53.000000000 -0400
@@ -0,0 +1,182 @@
+/*******************************************************************************
+ System Tasks File
+
+  File Name:
+    system_tasks.c
+
+  Summary:
+    This file contains source code necessary to maintain system's polled state
+    machines.
+
+  Description:
+    This file contains source code necessary to maintain system's polled state
+    machines.  It implements the "SYS_Tasks" function that calls the individual
+    "Tasks" functions for all the MPLAB Harmony modules in the system.
+
+  Remarks:
+    This file requires access to the systemObjects global data structure that
+    contains the object handles to all MPLAB Harmony module objects executing
+    polled in the system.  These handles are passed into the individual module
+    "Tasks" functions to identify the instance of the module to maintain.
+ *******************************************************************************/
+
+// DOM-IGNORE-BEGIN
+/*******************************************************************************
+Copyright (c) 2013-2015 released Microchip Technology Inc.  All rights reserved.
+
+Microchip licenses to you the right to use, modify, copy and distribute
+Software only when embedded on a Microchip microcontroller or digital signal
+controller that is integrated into your product or third party product
+(pursuant to the sublicense terms in the accompanying license agreement).
+
+You should refer to the license agreement accompanying this Software for
+additional information regarding your rights and obligations.
+
+SOFTWARE AND DOCUMENTATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
+EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF
+MERCHANTABILITY, TITLE, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE.
+IN NO EVENT SHALL MICROCHIP OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER
+CONTRACT, NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR
+OTHER LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
+INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE OR
+CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT OF
+SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
+(INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
+ *******************************************************************************/
+// DOM-IGNORE-END
+
+
+// *****************************************************************************
+// *****************************************************************************
+// Section: Included Files
+// *****************************************************************************
+// *****************************************************************************
+
+#include "system_config.h"
+#include "system_definitions.h"
+#include "app.h"
+
+
+// *****************************************************************************
+// *****************************************************************************
+// Section: Local Prototypes
+// *****************************************************************************
+// *****************************************************************************
+ 
+static void _SYS_Tasks ( void );
+static void _APP_Tasks(void);
+
+
+// *****************************************************************************
+// *****************************************************************************
+// Section: System "Tasks" Routine
+// *****************************************************************************
+// *****************************************************************************
+
+/*******************************************************************************
+  Function:
+    void SYS_Tasks ( void )
+
+  Remarks:
+    See prototype in system/common/sys_module.h.
+*/
+
+void SYS_Tasks ( void )
+{
+    /* Create OS Thread for Sys Tasks. */
+    xTaskCreate((TaskFunction_t) _SYS_Tasks,
+                "Sys Tasks",
+                2048, NULL, 2, NULL);
+
+    /* Create OS Thread for Wi-Fi Initialization RTOS Task. */
+    xTaskCreate((TaskFunction_t) DRV_WIFI_InitStateMachine_RtosTask,
+                "Wi-Fi Initialization RTOS Task",
+                512, NULL, 2, NULL);
+
+    /* Create OS Thread for Wi-Fi ISR RTOS Task. */
+    xTaskCreate((TaskFunction_t) DRV_WIFI_ISR_RtosTask,
+                "Wi-Fi ISR RTOS Task",
+                1024, NULL, 7, NULL);
+
+    /* Create OS Thread for Wi-Fi MAC Process RTOS Task. */
+    xTaskCreate((TaskFunction_t) DRV_WIFI_MACProcess_RtosTask,
+                "Wi-Fi MAC Process RTOS Task",
+                1024, NULL, 3, NULL);
+
+    /* Create OS Thread for Wi-Fi Easy Configuration RTOS Task. */
+    xTaskCreate((TaskFunction_t) DRV_WIFI_EasyConfigTask_RtosTask,
+                "Wi-Fi Easy Configuration RTOS Task",
+                512, NULL, 2, NULL);
+
+    /* Create OS Thread for APP Tasks. */
+    xTaskCreate((TaskFunction_t) _APP_Tasks,
+                "APP Tasks",
+                1024, NULL, 2, NULL);
+
+    /**************
+     * Start RTOS * 
+     **************/
+    vTaskStartScheduler(); /* This function never returns. */
+}
+
+
+/*******************************************************************************
+  Function:
+    void _SYS_Tasks ( void )
+
+  Summary:
+    Maintains state machines of system modules.
+*/
+
+static void _SYS_Tasks ( void )
+{
+    while(1)
+    {
+        /* Maintain system services */
+        SYS_DEVCON_Tasks(sysObj.sysDevcon);
+    /* Maintain the file system state machine. */
+    SYS_FS_Tasks();
+    SYS_CONSOLE_Tasks(sysObj.sysConsole0);
+    /* SYS_COMMAND layer tasks routine */ 
+    SYS_CMD_Tasks();
+    /* SYS_TMR Device layer tasks routine */ 
+    SYS_TMR_Tasks(sysObj.sysTmr);
+
+        /* Maintain Device Drivers */
+        DRV_TMR_Tasks(sysObj.drvTmr0);
+    DRV_WIFI_TASK_MUTEX_Lock();
+    DRV_SPI_Tasks(sysObj.spiObjectIdx0);
+    DRV_WIFI_TASK_MUTEX_Unlock();
+
+        /* Maintain Middleware */
+    /* Maintain the TCP/IP Stack*/
+    TCPIP_STACK_Task(sysObj.tcpip);
+
+        /* Task Delay */
+        vTaskDelay(1 / portTICK_PERIOD_MS);
+    }
+}
+
+
+/*******************************************************************************
+  Function:
+    void _APP_Tasks ( void )
+
+  Summary:
+    Maintains state machine of APP.
+*/
+
+static void _APP_Tasks(void)
+{
+    while(1)
+    {
+        APP_Tasks();
+        vTaskDelay(1 / portTICK_PERIOD_MS);
+    }
+}
+
+
+/*******************************************************************************
+ End of File
+ */
+
diff -ruN /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/wifi_easy_configuration.X/nbproject/configurations.xml /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/wifi_easy_configuration.X/nbproject/configurations.xml
--- /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/wifi_easy_configuration.X/nbproject/configurations.xml	2015-06-01 02:38:48.000000000 -0400
+++ /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/wifi_easy_configuration.X/nbproject/configurations.xml	2015-08-08 21:18:55.240820200 -0400
@@ -106,6 +106,32 @@
             <itemPath>../src/system_config/pic32mz_ec_sk+meb2+freertos/system_config.h</itemPath>
             <itemPath>../src/system_config/pic32mz_ec_sk+meb2+freertos/system_definitions.h</itemPath>
           </logicalFolder>
+          <logicalFolder name="pic32mz_ec_wifire_freertos"
+                         displayName="pic32mz_ec_wifire_freertos"
+                         projectFiles="true">
+            <logicalFolder name="framework" displayName="framework" projectFiles="true">
+              <logicalFolder name="driver" displayName="driver" projectFiles="true">
+                <logicalFolder name="spi" displayName="spi" projectFiles="true">
+                  <logicalFolder name="dynamic" displayName="dynamic" projectFiles="true">
+                  </logicalFolder>
+                </logicalFolder>
+              </logicalFolder>
+              <logicalFolder name="system" displayName="system" projectFiles="true">
+                <logicalFolder name="clk" displayName="clk" projectFiles="true">
+                  <logicalFolder name="src" displayName="src" projectFiles="true">
+                  </logicalFolder>
+                  <itemPath>../src/system_config/pic32mz_ec_wifire_freertos/framework/system/clk/sys_clk_static.h</itemPath>
+                </logicalFolder>
+                <logicalFolder name="ports" displayName="ports" projectFiles="true">
+                  <logicalFolder name="src" displayName="src" projectFiles="true">
+                  </logicalFolder>
+                </logicalFolder>
+              </logicalFolder>
+            </logicalFolder>
+            <itemPath>../src/system_config/pic32mz_ec_wifire_freertos/FreeRTOSConfig.h</itemPath>
+            <itemPath>../src/system_config/pic32mz_ec_wifire_freertos/system_config.h</itemPath>
+            <itemPath>../src/system_config/pic32mz_ec_wifire_freertos/system_definitions.h</itemPath>
+          </logicalFolder>
         </logicalFolder>
         <itemPath>../src/app.h</itemPath>
       </logicalFolder>
@@ -122,6 +148,9 @@
         <logicalFolder name="f4" displayName="pic32mz_ec_sk+meb2" projectFiles="true">
           <itemPath>../../../../../bsp/pic32mz_ec_sk+meb2/bsp_config.h</itemPath>
         </logicalFolder>
+        <logicalFolder name="f5" displayName="pic32mz_wifire" projectFiles="true">
+          <itemPath>../../../../../bsp/pic32mz_wifire/bsp_config.h</itemPath>
+        </logicalFolder>
       </logicalFolder>
       <logicalFolder name="f1" displayName="framework" projectFiles="true">
         <logicalFolder name="f1" displayName="crypto" projectFiles="true">
@@ -560,6 +589,38 @@
             <itemPath>../src/system_config/pic32mz_ec_sk+meb2+freertos/system_interrupt_a.S</itemPath>
             <itemPath>../src/system_config/pic32mz_ec_sk+meb2+freertos/rtos_hooks.c</itemPath>
           </logicalFolder>
+          <logicalFolder name="pic32mz_ec_wifire_freertos"
+                         displayName="pic32mz_ec_wifire_freertos"
+                         projectFiles="true">
+            <logicalFolder name="framework" displayName="framework" projectFiles="true">
+              <logicalFolder name="driver" displayName="driver" projectFiles="true">
+                <logicalFolder name="spi" displayName="spi" projectFiles="true">
+                  <logicalFolder name="dynamic" displayName="dynamic" projectFiles="true">
+                    <itemPath>../src/system_config/pic32mz_ec_wifire_freertos/framework/driver/spi/dynamic/drv_spi_master_ebm_tasks.c</itemPath>
+                    <itemPath>../src/system_config/pic32mz_ec_wifire_freertos/framework/driver/spi/dynamic/drv_spi_tasks.c</itemPath>
+                  </logicalFolder>
+                </logicalFolder>
+              </logicalFolder>
+              <logicalFolder name="system" displayName="system" projectFiles="true">
+                <logicalFolder name="clk" displayName="clk" projectFiles="true">
+                  <logicalFolder name="src" displayName="src" projectFiles="true">
+                    <itemPath>../src/system_config/pic32mz_ec_wifire_freertos/framework/system/clk/src/sys_clk_static.c</itemPath>
+                  </logicalFolder>
+                </logicalFolder>
+                <logicalFolder name="ports" displayName="ports" projectFiles="true">
+                  <logicalFolder name="src" displayName="src" projectFiles="true">
+                    <itemPath>../src/system_config/pic32mz_ec_wifire_freertos/framework/system/ports/src/sys_ports_static.c</itemPath>
+                  </logicalFolder>
+                </logicalFolder>
+              </logicalFolder>
+            </logicalFolder>
+            <itemPath>../src/system_config/pic32mz_ec_wifire_freertos/rtos_hooks.c</itemPath>
+            <itemPath>../src/system_config/pic32mz_ec_wifire_freertos/system_exceptions.c</itemPath>
+            <itemPath>../src/system_config/pic32mz_ec_wifire_freertos/system_init.c</itemPath>
+            <itemPath>../src/system_config/pic32mz_ec_wifire_freertos/system_interrupt.c</itemPath>
+            <itemPath>../src/system_config/pic32mz_ec_wifire_freertos/system_tasks.c</itemPath>
+            <itemPath>../src/system_config/pic32mz_ec_wifire_freertos/system_interrupt_a.S</itemPath>
+          </logicalFolder>
         </logicalFolder>
         <itemPath>../src/app.c</itemPath>
         <itemPath>../src/main.c</itemPath>
@@ -580,6 +641,9 @@
         <logicalFolder name="f4" displayName="pic32mz_ec_sk+meb2" projectFiles="true">
           <itemPath>../../../../../bsp/pic32mz_ec_sk+meb2/bsp_sys_init.c</itemPath>
         </logicalFolder>
+        <logicalFolder name="f5" displayName="pic32mz_wifire" projectFiles="true">
+          <itemPath>../../../../../bsp/pic32mz_wifire/bsp_sys_init.c</itemPath>
+        </logicalFolder>
       </logicalFolder>
       <logicalFolder name="f1" displayName="framework" projectFiles="true">
         <logicalFolder name="f1" displayName="crypto" projectFiles="true">
@@ -825,6 +889,7 @@
     <Elem>../src/system_config/pic32mx_eth_sk+ioexp+freertos</Elem>
     <Elem>../src/system_config/pic32mz_ec_sk+ioexp+freertos</Elem>
     <Elem>../src/system_config/pic32mz_ec_sk+meb2+freertos</Elem>
+    <Elem>../src/system_config/pic32mz_ec_wifire_freertos</Elem>
   </sourceRootList>
   <projectmakefile>Makefile</projectmakefile>
   <confs>
@@ -836,7 +901,7 @@
         <targetPluginBoard></targetPluginBoard>
         <platformTool>RealICEPlatformTool</platformTool>
         <languageToolchain>XC32</languageToolchain>
-        <languageToolchainVersion>1.40</languageToolchainVersion>
+        <languageToolchainVersion></languageToolchainVersion>
         <platform>3</platform>
       </toolsSet>
       <compileType>
@@ -958,6 +1023,14 @@
         <C32Global>
         </C32Global>
       </item>
+      <item path="../../../../../bsp/pic32mz_wifire/bsp_config.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../../../../../bsp/pic32mz_wifire/bsp_sys_init.c"
+            ex="true"
+            overriding="false">
+      </item>
       <item path="../../../../../framework/driver/wifi/mrf24w/src/drv_wifi_rtos_wrapper.c"
             ex="true"
             overriding="false">
@@ -2926,6 +2999,62 @@
         <C32Global>
         </C32Global>
       </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/FreeRTOSConfig.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/driver/spi/dynamic/drv_spi_master_ebm_tasks.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/driver/spi/dynamic/drv_spi_tasks.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/system/clk/src/sys_clk_static.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/system/clk/sys_clk_static.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/system/ports/src/sys_ports_static.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/rtos_hooks.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_config.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_definitions.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_exceptions.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_init.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_interrupt.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_interrupt_a.S"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_tasks.c"
+            ex="true"
+            overriding="false">
+      </item>
       <C32>
         <property key="additional-warnings" value="true"/>
         <property key="enable-app-io" value="false"/>
@@ -3346,6 +3475,14 @@
         <C32Global>
         </C32Global>
       </item>
+      <item path="../../../../../bsp/pic32mz_wifire/bsp_config.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../../../../../bsp/pic32mz_wifire/bsp_sys_init.c"
+            ex="true"
+            overriding="false">
+      </item>
       <item path="../../../../../framework/system/common/src/sys_buffer.c"
             ex="true"
             overriding="false">
@@ -4866,6 +5003,62 @@
         <C32Global>
         </C32Global>
       </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/FreeRTOSConfig.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/driver/spi/dynamic/drv_spi_master_ebm_tasks.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/driver/spi/dynamic/drv_spi_tasks.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/system/clk/src/sys_clk_static.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/system/clk/sys_clk_static.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/system/ports/src/sys_ports_static.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/rtos_hooks.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_config.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_definitions.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_exceptions.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_init.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_interrupt.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_interrupt_a.S"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_tasks.c"
+            ex="true"
+            overriding="false">
+      </item>
       <C32>
         <property key="additional-warnings" value="true"/>
         <property key="enable-app-io" value="false"/>
@@ -5165,7 +5358,7 @@
         <targetPluginBoard></targetPluginBoard>
         <platformTool>RealICEPlatformTool</platformTool>
         <languageToolchain>XC32</languageToolchain>
-        <languageToolchainVersion>1.40</languageToolchainVersion>
+        <languageToolchainVersion></languageToolchainVersion>
         <platform>3</platform>
       </toolsSet>
       <compileType>
@@ -5287,6 +5480,14 @@
         <C32Global>
         </C32Global>
       </item>
+      <item path="../../../../../bsp/pic32mz_wifire/bsp_config.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../../../../../bsp/pic32mz_wifire/bsp_sys_init.c"
+            ex="true"
+            overriding="false">
+      </item>
       <item path="../../../../../framework/driver/wifi/mrf24w/src/drv_wifi_rtos_wrapper.c"
             ex="true"
             overriding="false">
@@ -7255,6 +7456,62 @@
         <C32Global>
         </C32Global>
       </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/FreeRTOSConfig.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/driver/spi/dynamic/drv_spi_master_ebm_tasks.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/driver/spi/dynamic/drv_spi_tasks.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/system/clk/src/sys_clk_static.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/system/clk/sys_clk_static.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/system/ports/src/sys_ports_static.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/rtos_hooks.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_config.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_definitions.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_exceptions.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_init.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_interrupt.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_interrupt_a.S"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_tasks.c"
+            ex="true"
+            overriding="false">
+      </item>
       <C32>
         <property key="additional-warnings" value="true"/>
         <property key="enable-app-io" value="false"/>
@@ -7675,6 +7932,14 @@
         <C32Global>
         </C32Global>
       </item>
+      <item path="../../../../../bsp/pic32mz_wifire/bsp_config.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../../../../../bsp/pic32mz_wifire/bsp_sys_init.c"
+            ex="true"
+            overriding="false">
+      </item>
       <item path="../../../../../framework/system/common/src/sys_buffer.c"
             ex="true"
             overriding="false">
@@ -9195,6 +9460,62 @@
         <C32Global>
         </C32Global>
       </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/FreeRTOSConfig.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/driver/spi/dynamic/drv_spi_master_ebm_tasks.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/driver/spi/dynamic/drv_spi_tasks.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/system/clk/src/sys_clk_static.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/system/clk/sys_clk_static.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/system/ports/src/sys_ports_static.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/rtos_hooks.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_config.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_definitions.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_exceptions.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_init.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_interrupt.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_interrupt_a.S"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_tasks.c"
+            ex="true"
+            overriding="false">
+      </item>
       <C32>
         <property key="additional-warnings" value="true"/>
         <property key="enable-app-io" value="false"/>
@@ -9616,6 +9937,14 @@
         <C32Global>
         </C32Global>
       </item>
+      <item path="../../../../../bsp/pic32mz_wifire/bsp_config.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../../../../../bsp/pic32mz_wifire/bsp_sys_init.c"
+            ex="true"
+            overriding="false">
+      </item>
       <item path="../../../../../framework/driver/wifi/mrf24w/src/drv_wifi_rtos_wrapper.c"
             ex="true"
             overriding="false">
@@ -11520,38 +11849,94 @@
         <C32Global>
         </C32Global>
       </item>
-      <C32>
-        <property key="additional-warnings" value="true"/>
-        <property key="enable-app-io" value="false"/>
-        <property key="enable-omit-frame-pointer" value="false"/>
-        <property key="enable-symbols" value="true"/>
-        <property key="enable-unroll-loops" value="false"/>
-        <property key="exclude-floating-point" value="false"/>
-        <property key="extra-include-directories"
-                  value="../src;../src/system_config/pic32mz_ec_sk+ioexp;../src/system_config/pic32mz_ec_sk+ioexp/framework;../../../../../framework;../../../../../framework/crypto;../../../../../bsp/pic32mz_ec_sk"/>
-        <property key="generate-16-bit-code" value="false"/>
-        <property key="generate-micro-compressed-code" value="false"/>
-        <property key="isolate-each-function" value="true"/>
-        <property key="make-warnings-into-errors" value="false"/>
-        <property key="optimization-level" value="-O1"/>
-        <property key="place-data-into-section" value="false"/>
-        <property key="post-instruction-scheduling" value="default"/>
-        <property key="pre-instruction-scheduling" value="default"/>
-        <property key="preprocessor-macros"
-                  value="PLIB_INLINE=&quot;static inline&quot;;PLIB_INLINE_API=&quot;static inline&quot;"/>
-        <property key="strict-ansi" value="false"/>
-        <property key="support-ansi" value="false"/>
-        <property key="use-cci" value="false"/>
-        <property key="use-iar" value="false"/>
-        <property key="use-indirect-calls" value="false"/>
-      </C32>
-      <C32-AR>
-        <property key="additional-options-chop-files" value="false"/>
-      </C32-AR>
-      <C32-AS>
-        <property key="assembler-symbols" value=""/>
-        <property key="enable-symbols" value="true"/>
-        <property key="exclude-floating-point-library" value="false"/>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/FreeRTOSConfig.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/driver/spi/dynamic/drv_spi_master_ebm_tasks.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/driver/spi/dynamic/drv_spi_tasks.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/system/clk/src/sys_clk_static.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/system/clk/sys_clk_static.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/system/ports/src/sys_ports_static.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/rtos_hooks.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_config.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_definitions.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_exceptions.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_init.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_interrupt.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_interrupt_a.S"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_tasks.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <C32>
+        <property key="additional-warnings" value="true"/>
+        <property key="enable-app-io" value="false"/>
+        <property key="enable-omit-frame-pointer" value="false"/>
+        <property key="enable-symbols" value="true"/>
+        <property key="enable-unroll-loops" value="false"/>
+        <property key="exclude-floating-point" value="false"/>
+        <property key="extra-include-directories"
+                  value="../src;../src/system_config/pic32mz_ec_sk+ioexp;../src/system_config/pic32mz_ec_sk+ioexp/framework;../../../../../framework;../../../../../framework/crypto;../../../../../bsp/pic32mz_ec_sk"/>
+        <property key="generate-16-bit-code" value="false"/>
+        <property key="generate-micro-compressed-code" value="false"/>
+        <property key="isolate-each-function" value="true"/>
+        <property key="make-warnings-into-errors" value="false"/>
+        <property key="optimization-level" value="-O1"/>
+        <property key="place-data-into-section" value="false"/>
+        <property key="post-instruction-scheduling" value="default"/>
+        <property key="pre-instruction-scheduling" value="default"/>
+        <property key="preprocessor-macros"
+                  value="PLIB_INLINE=&quot;static inline&quot;;PLIB_INLINE_API=&quot;static inline&quot;"/>
+        <property key="strict-ansi" value="false"/>
+        <property key="support-ansi" value="false"/>
+        <property key="use-cci" value="false"/>
+        <property key="use-iar" value="false"/>
+        <property key="use-indirect-calls" value="false"/>
+      </C32>
+      <C32-AR>
+        <property key="additional-options-chop-files" value="false"/>
+      </C32-AR>
+      <C32-AS>
+        <property key="assembler-symbols" value=""/>
+        <property key="enable-symbols" value="true"/>
+        <property key="exclude-floating-point-library" value="false"/>
         <property key="expand-macros" value="false"/>
         <property key="extra-include-directories-for-assembler" value=""/>
         <property key="extra-include-directories-for-preprocessor" value=""/>
@@ -11740,7 +12125,7 @@
         <property key="programoptions.programuserotp" value="false"/>
         <property key="programoptions.usehighvoltageonmclr" value="false"/>
         <property key="programoptions.uselvpprogramming" value="false"/>
-        <property key="tracecontrol.include.timestamp" value="timestampenabled"/>
+        <property key="tracecontrol.include.timestamp" value="summarydataenabled"/>
         <property key="tracecontrol.select" value="0"/>
         <property key="tracecontrol.stallontracebufferfull" value="false"/>
         <property key="tracecontrol.tracebufmax" value="546000"/>
@@ -11880,6 +12265,14 @@
         <C32Global>
         </C32Global>
       </item>
+      <item path="../../../../../bsp/pic32mz_wifire/bsp_config.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../../../../../bsp/pic32mz_wifire/bsp_sys_init.c"
+            ex="true"
+            overriding="false">
+      </item>
       <item path="../../../../../framework/system/devcon/src/sys_devcon_pic32mx.c"
             ex="true"
             overriding="false">
@@ -13336,6 +13729,62 @@
         <C32Global>
         </C32Global>
       </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/FreeRTOSConfig.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/driver/spi/dynamic/drv_spi_master_ebm_tasks.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/driver/spi/dynamic/drv_spi_tasks.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/system/clk/src/sys_clk_static.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/system/clk/sys_clk_static.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/system/ports/src/sys_ports_static.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/rtos_hooks.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_config.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_definitions.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_exceptions.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_init.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_interrupt.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_interrupt_a.S"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_tasks.c"
+            ex="true"
+            overriding="false">
+      </item>
       <C32>
         <property key="additional-warnings" value="true"/>
         <property key="enable-app-io" value="false"/>
@@ -13557,7 +14006,7 @@
         <property key="programoptions.programuserotp" value="false"/>
         <property key="programoptions.usehighvoltageonmclr" value="false"/>
         <property key="programoptions.uselvpprogramming" value="false"/>
-        <property key="tracecontrol.include.timestamp" value="timestampenabled"/>
+        <property key="tracecontrol.include.timestamp" value="summarydataenabled"/>
         <property key="tracecontrol.select" value="0"/>
         <property key="tracecontrol.stallontracebufferfull" value="false"/>
         <property key="tracecontrol.tracebufmax" value="546000"/>
@@ -13697,6 +14146,14 @@
         <C32Global>
         </C32Global>
       </item>
+      <item path="../../../../../bsp/pic32mz_wifire/bsp_config.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../../../../../bsp/pic32mz_wifire/bsp_sys_init.c"
+            ex="true"
+            overriding="false">
+      </item>
       <item path="../../../../../framework/driver/wifi/mrf24w/src/drv_wifi_rtos_wrapper.c"
             ex="true"
             overriding="false">
@@ -15601,6 +16058,62 @@
         <C32Global>
         </C32Global>
       </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/FreeRTOSConfig.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/driver/spi/dynamic/drv_spi_master_ebm_tasks.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/driver/spi/dynamic/drv_spi_tasks.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/system/clk/src/sys_clk_static.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/system/clk/sys_clk_static.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/system/ports/src/sys_ports_static.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/rtos_hooks.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_config.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_definitions.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_exceptions.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_init.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_interrupt.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_interrupt_a.S"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_tasks.c"
+            ex="true"
+            overriding="false">
+      </item>
       <C32>
         <property key="additional-warnings" value="true"/>
         <property key="enable-app-io" value="false"/>
@@ -15821,7 +16334,7 @@
         <property key="programoptions.programuserotp" value="false"/>
         <property key="programoptions.usehighvoltageonmclr" value="false"/>
         <property key="programoptions.uselvpprogramming" value="false"/>
-        <property key="tracecontrol.include.timestamp" value="timestampenabled"/>
+        <property key="tracecontrol.include.timestamp" value="summarydataenabled"/>
         <property key="tracecontrol.select" value="0"/>
         <property key="tracecontrol.stallontracebufferfull" value="false"/>
         <property key="tracecontrol.tracebufmax" value="546000"/>
@@ -15961,6 +16474,14 @@
         <C32Global>
         </C32Global>
       </item>
+      <item path="../../../../../bsp/pic32mz_wifire/bsp_config.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../../../../../bsp/pic32mz_wifire/bsp_sys_init.c"
+            ex="true"
+            overriding="false">
+      </item>
       <item path="../../../../../framework/system/devcon/src/sys_devcon_pic32mx.c"
             ex="true"
             overriding="false">
@@ -17417,6 +17938,62 @@
         <C32Global>
         </C32Global>
       </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/FreeRTOSConfig.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/driver/spi/dynamic/drv_spi_master_ebm_tasks.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/driver/spi/dynamic/drv_spi_tasks.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/system/clk/src/sys_clk_static.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/system/clk/sys_clk_static.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/framework/system/ports/src/sys_ports_static.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/rtos_hooks.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_config.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_definitions.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_exceptions.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_init.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_interrupt.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_interrupt_a.S"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_wifire_freertos/system_tasks.c"
+            ex="true"
+            overriding="false">
+      </item>
       <C32>
         <property key="additional-warnings" value="true"/>
         <property key="enable-app-io" value="false"/>
@@ -17638,7 +18215,7 @@
         <property key="programoptions.programuserotp" value="false"/>
         <property key="programoptions.usehighvoltageonmclr" value="false"/>
         <property key="programoptions.uselvpprogramming" value="false"/>
-        <property key="tracecontrol.include.timestamp" value="timestampenabled"/>
+        <property key="tracecontrol.include.timestamp" value="summarydataenabled"/>
         <property key="tracecontrol.select" value="0"/>
         <property key="tracecontrol.stallontracebufferfull" value="false"/>
         <property key="tracecontrol.tracebufmax" value="546000"/>
@@ -17648,5 +18225,1985 @@
         <property key="voltagevalue" value="3.25"/>
       </RealICEPlatformTool>
     </conf>
+    <conf name="pic32mz_ec_wifire_freertos" type="2">
+      <toolsSet>
+        <developmentServer>localhost</developmentServer>
+        <targetDevice>PIC32MZ2048ECH100</targetDevice>
+        <targetHeader></targetHeader>
+        <targetPluginBoard></targetPluginBoard>
+        <platformTool>ICD3PlatformTool</platformTool>
+        <languageToolchain>XC32</languageToolchain>
+        <languageToolchainVersion></languageToolchainVersion>
+        <platform>3</platform>
+      </toolsSet>
+      <compileType>
+        <linkerTool>
+          <linkerLibItems>
+            <linkerLibFileItem>../../../../../bin/framework/peripheral/PIC32MZ2048ECH100_peripherals.a</linkerLibFileItem>
+          </linkerLibItems>
+        </linkerTool>
+        <archiverTool>
+        </archiverTool>
+        <loading>
+          <useAlternateLoadableFile>false</useAlternateLoadableFile>
+          <parseOnProdLoad>false</parseOnProdLoad>
+          <alternateLoadableFile></alternateLoadableFile>
+        </loading>
+      </compileType>
+      <makeCustomizationType>
+        <makeCustomizationPreStepEnabled>false</makeCustomizationPreStepEnabled>
+        <makeCustomizationPreStep></makeCustomizationPreStep>
+        <makeCustomizationPostStepEnabled>false</makeCustomizationPostStepEnabled>
+        <makeCustomizationPostStep></makeCustomizationPostStep>
+        <makeCustomizationPutChecksumInUserID>false</makeCustomizationPutChecksumInUserID>
+        <makeCustomizationEnableLongLines>false</makeCustomizationEnableLongLines>
+        <makeCustomizationNormalizeHexFile>false</makeCustomizationNormalizeHexFile>
+      </makeCustomizationType>
+      <item path="../../../../../bsp/pic32mx795_pim+e16/bsp_config.h"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../../../../../bsp/pic32mx795_pim+e16/bsp_sys_init.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../../../../../bsp/pic32mx_eth_sk/bsp_config.h"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../../../../../bsp/pic32mx_eth_sk/bsp_sys_init.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../../../../../bsp/pic32mz_ec_sk+meb2/bsp_config.h"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../../../../../bsp/pic32mz_ec_sk+meb2/bsp_sys_init.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../../../../../bsp/pic32mz_ec_sk/bsp_config.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../../../../../bsp/pic32mz_ec_sk/bsp_sys_init.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../../../../../framework/system/devcon/src/sys_devcon_pic32mx.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../../../../../third_party/rtos/FreeRTOS/Source/portable/MPLAB/PIC32MX/ISR_Support.h"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../../../../../third_party/rtos/FreeRTOS/Source/portable/MPLAB/PIC32MX/port.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../../../../../third_party/rtos/FreeRTOS/Source/portable/MPLAB/PIC32MX/port_asm.S"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../../../../../third_party/rtos/FreeRTOS/Source/portable/MPLAB/PIC32MX/portmacro.h"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx795_pim+e16+freertos/FreeRTOSConfig.h"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx795_pim+e16+freertos/framework/driver/spi/dynamic/drv_spi_master_ebm_tasks.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx795_pim+e16+freertos/framework/driver/spi/dynamic/drv_spi_tasks.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx795_pim+e16+freertos/framework/system/clk/src/sys_clk_static.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx795_pim+e16+freertos/framework/system/clk/sys_clk_static.h"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx795_pim+e16+freertos/framework/system/ports/src/sys_ports_static.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx795_pim+e16+freertos/rtos_hooks.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx795_pim+e16+freertos/system_config.h"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx795_pim+e16+freertos/system_definitions.h"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx795_pim+e16+freertos/system_exceptions.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx795_pim+e16+freertos/system_init.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx795_pim+e16+freertos/system_interrupt.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx795_pim+e16+freertos/system_interrupt_a.S"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx795_pim+e16+freertos/system_tasks.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx795_pim+e16/framework/driver/spi/dynamic/drv_spi_master_ebm_tasks.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx795_pim+e16/framework/driver/spi/dynamic/drv_spi_tasks.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx795_pim+e16/framework/system/clk/src/sys_clk_static.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx795_pim+e16/framework/system/clk/sys_clk_static.h"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx795_pim+e16/framework/system/ports/src/sys_ports_static.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx795_pim+e16/system_config.h"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx795_pim+e16/system_definitions.h"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx795_pim+e16/system_exceptions.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx795_pim+e16/system_init.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx795_pim+e16/system_interrupt.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx795_pim+e16/system_tasks.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx_eth_sk+ioexp+freertos/FreeRTOSConfig.h"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx_eth_sk+ioexp+freertos/framework/driver/spi/dynamic/drv_spi_master_ebm_tasks.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx_eth_sk+ioexp+freertos/framework/driver/spi/dynamic/drv_spi_tasks.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx_eth_sk+ioexp+freertos/framework/system/clk/src/sys_clk_static.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx_eth_sk+ioexp+freertos/framework/system/clk/sys_clk_static.h"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx_eth_sk+ioexp+freertos/framework/system/ports/src/sys_ports_static.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx_eth_sk+ioexp+freertos/rtos_hooks.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx_eth_sk+ioexp+freertos/system_config.h"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx_eth_sk+ioexp+freertos/system_definitions.h"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx_eth_sk+ioexp+freertos/system_exceptions.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx_eth_sk+ioexp+freertos/system_init.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx_eth_sk+ioexp+freertos/system_interrupt.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx_eth_sk+ioexp+freertos/system_interrupt_a.S"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx_eth_sk+ioexp+freertos/system_tasks.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx_eth_sk+ioexp/framework/driver/spi/dynamic/drv_spi_master_ebm_tasks.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx_eth_sk+ioexp/framework/driver/spi/dynamic/drv_spi_tasks.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx_eth_sk+ioexp/framework/system/clk/src/sys_clk_static.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx_eth_sk+ioexp/framework/system/clk/sys_clk_static.h"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx_eth_sk+ioexp/framework/system/ports/src/sys_ports_static.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx_eth_sk+ioexp/system_config.h"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx_eth_sk+ioexp/system_definitions.h"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx_eth_sk+ioexp/system_exceptions.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx_eth_sk+ioexp/system_init.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx_eth_sk+ioexp/system_interrupt.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mx_eth_sk+ioexp/system_tasks.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+ioexp+freertos/FreeRTOSConfig.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+ioexp+freertos/framework/driver/spi/dynamic/drv_spi_master_ebm_tasks.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+ioexp+freertos/framework/driver/spi/dynamic/drv_spi_tasks.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+ioexp+freertos/framework/system/clk/src/sys_clk_static.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+ioexp+freertos/framework/system/clk/sys_clk_static.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+ioexp+freertos/framework/system/ports/src/sys_ports_static.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+ioexp+freertos/rtos_hooks.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+ioexp+freertos/system_config.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+ioexp+freertos/system_definitions.h"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+ioexp+freertos/system_exceptions.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+ioexp+freertos/system_init.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+ioexp+freertos/system_interrupt.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+ioexp+freertos/system_interrupt_a.S"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+ioexp+freertos/system_tasks.c"
+            ex="true"
+            overriding="false">
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+ioexp/framework/driver/spi/dynamic/drv_spi_master_ebm_tasks.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+ioexp/framework/driver/spi/dynamic/drv_spi_tasks.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+ioexp/framework/system/clk/src/sys_clk_static.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+ioexp/framework/system/clk/sys_clk_static.h"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+ioexp/framework/system/ports/src/sys_ports_static.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+ioexp/system_config.h"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+ioexp/system_definitions.h"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+ioexp/system_exceptions.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+ioexp/system_init.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+ioexp/system_interrupt.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+ioexp/system_tasks.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+meb2+freertos/FreeRTOSConfig.h"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+meb2+freertos/framework/driver/spi/dynamic/drv_spi_master_ebm_tasks.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+meb2+freertos/framework/driver/spi/dynamic/drv_spi_tasks.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+meb2+freertos/framework/system/clk/src/sys_clk_static.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+meb2+freertos/framework/system/clk/sys_clk_static.h"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+meb2+freertos/framework/system/ports/src/sys_ports_static.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+meb2+freertos/rtos_hooks.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+meb2+freertos/system_config.h"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+meb2+freertos/system_definitions.h"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+meb2+freertos/system_exceptions.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+meb2+freertos/system_init.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+meb2+freertos/system_interrupt.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+meb2+freertos/system_interrupt_a.S"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+meb2+freertos/system_tasks.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+meb2/framework/driver/spi/dynamic/drv_spi_master_ebm_tasks.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+meb2/framework/driver/spi/dynamic/drv_spi_tasks.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+meb2/framework/system/clk/src/sys_clk_static.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+meb2/framework/system/clk/sys_clk_static.h"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+meb2/framework/system/ports/src/sys_ports_static.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+meb2/system_config.h"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+meb2/system_definitions.h"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+meb2/system_exceptions.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+meb2/system_init.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+meb2/system_interrupt.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <item path="../src/system_config/pic32mz_ec_sk+meb2/system_tasks.c"
+            ex="true"
+            overriding="false">
+        <C32>
+        </C32>
+        <C32-AR>
+        </C32-AR>
+        <C32-AS>
+        </C32-AS>
+        <C32-LD>
+        </C32-LD>
+        <C32CPP>
+        </C32CPP>
+        <C32Global>
+        </C32Global>
+      </item>
+      <C32>
+        <property key="additional-warnings" value="true"/>
+        <property key="enable-app-io" value="false"/>
+        <property key="enable-omit-frame-pointer" value="false"/>
+        <property key="enable-symbols" value="true"/>
+        <property key="enable-unroll-loops" value="false"/>
+        <property key="exclude-floating-point" value="false"/>
+        <property key="extra-include-directories"
+                  value="../src;../../../../../framework;../../../../../framework/crypto;../src/system_config/pic32mz_ec_wifire_freertos;../src/system_config/pic32mz_ec_wifire_freertos/framework;../../../../../bsp/pic32mz_wifire;../../../../../third_party/rtos/FreeRTOS/Source/portable/MPLAB/PIC32MZ;../../../../../third_party/rtos/FreeRTOS/Source/include"/>
+        <property key="generate-16-bit-code" value="false"/>
+        <property key="generate-micro-compressed-code" value="false"/>
+        <property key="isolate-each-function" value="true"/>
+        <property key="make-warnings-into-errors" value="false"/>
+        <property key="optimization-level" value=""/>
+        <property key="place-data-into-section" value="false"/>
+        <property key="post-instruction-scheduling" value="default"/>
+        <property key="pre-instruction-scheduling" value="default"/>
+        <property key="preprocessor-macros"
+                  value="PLIB_INLINE=&quot;static inline&quot;;PLIB_INLINE_API=&quot;static inline&quot;"/>
+        <property key="strict-ansi" value="false"/>
+        <property key="support-ansi" value="false"/>
+        <property key="use-cci" value="false"/>
+        <property key="use-iar" value="false"/>
+        <property key="use-indirect-calls" value="false"/>
+      </C32>
+      <C32-AR>
+        <property key="additional-options-chop-files" value="false"/>
+      </C32-AR>
+      <C32-AS>
+        <property key="assembler-symbols" value=""/>
+        <property key="enable-symbols" value="true"/>
+        <property key="exclude-floating-point-library" value="false"/>
+        <property key="expand-macros" value="false"/>
+        <property key="extra-include-directories-for-assembler"
+                  value="../src/system_config/pic32mz_ec_wifire_freertos;..\..\..\..\..\third_party\rtos\FreeRTOS\Source\portable\MPLAB\PIC32MZ"/>
+        <property key="extra-include-directories-for-preprocessor"
+                  value="../src/system_config/pic32mz_ec_wifire_freertos;..\..\..\..\..\third_party\rtos\FreeRTOS\Source\portable\MPLAB\PIC32MZ"/>
+        <property key="false-conditionals" value="false"/>
+        <property key="keep-locals" value="false"/>
+        <property key="list-assembly" value="false"/>
+        <property key="list-source" value="false"/>
+        <property key="list-symbols" value="false"/>
+        <property key="oXC32asm-list-to-file" value="false"/>
+        <property key="omit-debug-dirs" value="false"/>
+        <property key="omit-forms" value="false"/>
+        <property key="preprocessor-macros" value=""/>
+        <property key="warning-level" value=""/>
+      </C32-AS>
+      <C32-LD>
+        <property key="additional-options-use-response-files" value="false"/>
+        <property key="enable-check-sections" value="false"/>
+        <property key="exclude-floating-point-library" value="false"/>
+        <property key="exclude-standard-libraries" value="false"/>
+        <property key="extra-lib-directories" value=""/>
+        <property key="fill-flash-options-addr" value=""/>
+        <property key="fill-flash-options-const" value=""/>
+        <property key="fill-flash-options-how" value="0"/>
+        <property key="fill-flash-options-inc-const" value="1"/>
+        <property key="fill-flash-options-increment" value=""/>
+        <property key="fill-flash-options-seq" value=""/>
+        <property key="fill-flash-options-what" value="0"/>
+        <property key="generate-16-bit-code" value="false"/>
+        <property key="generate-cross-reference-file" value="false"/>
+        <property key="generate-micro-compressed-code" value="false"/>
+        <property key="heap-size" value="65536"/>
+        <property key="input-libraries" value=""/>
+        <property key="linker-symbols" value=""/>
+        <property key="map-file" value="${DISTDIR}/${PROJECTNAME}.${IMAGE_TYPE}.map"/>
+        <property key="no-startup-files" value="false"/>
+        <property key="oXC32ld-extra-opts" value=""/>
+        <property key="optimization-level" value=""/>
+        <property key="preprocessor-macros" value=""/>
+        <property key="remove-unused-sections" value="true"/>
+        <property key="report-memory-usage" value="false"/>
+        <property key="stack-size" value="2048"/>
+        <property key="symbol-stripping" value=""/>
+        <property key="trace-symbols" value=""/>
+        <property key="warn-section-align" value="false"/>
+        <appendMe value="-defsym=_ebase_address=0x9d010000"/>
+      </C32-LD>
+      <C32CPP>
+        <property key="additional-warnings" value="true"/>
+        <property key="check-new" value="false"/>
+        <property key="eh-specs" value="true"/>
+        <property key="enable-app-io" value="false"/>
+        <property key="enable-omit-frame-pointer" value="false"/>
+        <property key="enable-symbols" value="true"/>
+        <property key="enable-unroll-loops" value="false"/>
+        <property key="exceptions" value="true"/>
+        <property key="exclude-floating-point" value="false"/>
+        <property key="extra-include-directories" value=""/>
+        <property key="generate-16-bit-code" value="false"/>
+        <property key="generate-micro-compressed-code" value="false"/>
+        <property key="isolate-each-function" value="true"/>
+        <property key="make-warnings-into-errors" value="false"/>
+        <property key="optimization-level" value=""/>
+        <property key="place-data-into-section" value="false"/>
+        <property key="post-instruction-scheduling" value="default"/>
+        <property key="pre-instruction-scheduling" value="default"/>
+        <property key="preprocessor-macros" value=""/>
+        <property key="rtti" value="true"/>
+        <property key="strict-ansi" value="false"/>
+        <property key="use-cci" value="false"/>
+        <property key="use-iar" value="false"/>
+        <property key="use-indirect-calls" value="false"/>
+      </C32CPP>
+      <C32Global>
+        <property key="common-include-directories" value=""/>
+        <property key="gp-relative-option" value=""/>
+        <property key="legacy-libc" value="false"/>
+        <property key="relaxed-math" value="false"/>
+        <property key="save-temps" value="false"/>
+        <property key="wpo-lto" value="false"/>
+      </C32Global>
+      <ICD3PlatformTool>
+        <property key="AutoSelectMemRanges" value="auto"/>
+        <property key="CAN1" value="true"/>
+        <property key="CAN2" value="true"/>
+        <property key="CHANGE NOTICE A" value="true"/>
+        <property key="CHANGE NOTICE B" value="true"/>
+        <property key="CHANGE NOTICE C" value="true"/>
+        <property key="CHANGE NOTICE D" value="true"/>
+        <property key="CHANGE NOTICE E" value="true"/>
+        <property key="CHANGE NOTICE F" value="true"/>
+        <property key="CHANGE NOTICE G" value="true"/>
+        <property key="COMPARATOR" value="true"/>
+        <property key="DMA" value="true"/>
+        <property key="ETHERNET CONTROLLER" value="true"/>
+        <property key="INPUT CAPTURE 1" value="true"/>
+        <property key="INPUT CAPTURE 2" value="true"/>
+        <property key="INPUT CAPTURE 3" value="true"/>
+        <property key="INPUT CAPTURE 4" value="true"/>
+        <property key="INPUT CAPTURE 5" value="true"/>
+        <property key="INPUT CAPTURE 6" value="true"/>
+        <property key="INPUT CAPTURE 7" value="true"/>
+        <property key="INPUT CAPTURE 8" value="true"/>
+        <property key="INPUT CAPTURE 9" value="true"/>
+        <property key="INTERRUPT CONTROL" value="true"/>
+        <property key="OUTPUT COMPARE 1" value="true"/>
+        <property key="OUTPUT COMPARE 2" value="true"/>
+        <property key="OUTPUT COMPARE 3" value="true"/>
+        <property key="OUTPUT COMPARE 4" value="true"/>
+        <property key="OUTPUT COMPARE 5" value="true"/>
+        <property key="OUTPUT COMPARE 6" value="true"/>
+        <property key="OUTPUT COMPARE 7" value="true"/>
+        <property key="OUTPUT COMPARE 8" value="true"/>
+        <property key="OUTPUT COMPARE 9" value="true"/>
+        <property key="PARALLEL MASTER/SLAVE PORT" value="true"/>
+        <property key="REAL TIME CLOCK" value="true"/>
+        <property key="REFERENCE CLOCK1" value="true"/>
+        <property key="REFERENCE CLOCK2" value="true"/>
+        <property key="REFERENCE CLOCK3" value="true"/>
+        <property key="REFERENCE CLOCK4" value="true"/>
+        <property key="SPI/I2S 1" value="true"/>
+        <property key="SPI/I2S 2" value="true"/>
+        <property key="SPI/I2S 3" value="true"/>
+        <property key="SPI/I2S 4" value="true"/>
+        <property key="SPI/I2S 5" value="true"/>
+        <property key="SPI/I2S 6" value="true"/>
+        <property key="SecureSegment.SegmentProgramming" value="FullChipProgramming"/>
+        <property key="TIMER1" value="true"/>
+        <property key="TIMER2" value="true"/>
+        <property key="TIMER3" value="true"/>
+        <property key="TIMER4" value="true"/>
+        <property key="TIMER5" value="true"/>
+        <property key="TIMER6" value="true"/>
+        <property key="TIMER7" value="true"/>
+        <property key="TIMER8" value="true"/>
+        <property key="TIMER9" value="true"/>
+        <property key="ToolFirmwareFilePath"
+                  value="Press to browse for a specific firmware version"/>
+        <property key="ToolFirmwareOption.UseLatestFirmware" value="true"/>
+        <property key="UART1" value="true"/>
+        <property key="UART2" value="true"/>
+        <property key="UART3" value="true"/>
+        <property key="UART4" value="true"/>
+        <property key="UART5" value="true"/>
+        <property key="UART6" value="true"/>
+        <property key="debugoptions.useswbreakpoints" value="false"/>
+        <property key="hwtoolclock.frcindebug" value="false"/>
+        <property key="memories.aux" value="false"/>
+        <property key="memories.bootflash" value="false"/>
+        <property key="memories.configurationmemory" value="true"/>
+        <property key="memories.configurationmemory2" value="true"/>
+        <property key="memories.dataflash" value="true"/>
+        <property key="memories.eeprom" value="true"/>
+        <property key="memories.flashdata" value="true"/>
+        <property key="memories.id" value="true"/>
+        <property key="memories.programmemory" value="true"/>
+        <property key="memories.programmemory.end" value="0x1d1fffff"/>
+        <property key="memories.programmemory.partition2" value="true"/>
+        <property key="memories.programmemory.partition2.end"
+                  value="${memories.programmemory.partition2.end.value}"/>
+        <property key="memories.programmemory.partition2.start"
+                  value="${memories.programmemory.partition2.start.value}"/>
+        <property key="memories.programmemory.start" value="0x1d000000"/>
+        <property key="poweroptions.powerenable" value="false"/>
+        <property key="programoptions.donoteraseauxmem" value="false"/>
+        <property key="programoptions.eraseb4program" value="true"/>
+        <property key="programoptions.preservedataflash" value="false"/>
+        <property key="programoptions.preserveeeprom" value="false"/>
+        <property key="programoptions.preserveprogramrange" value="false"/>
+        <property key="programoptions.preserveprogramrange.end" value="0x1d1fffff"/>
+        <property key="programoptions.preserveprogramrange.start" value="0x1d000000"/>
+        <property key="programoptions.preserveuserid" value="false"/>
+        <property key="programoptions.programcalmem" value="false"/>
+        <property key="programoptions.programuserotp" value="false"/>
+        <property key="programoptions.testmodeentrymethod" value="VDDFirst"/>
+        <property key="programoptions.usehighvoltageonmclr" value="false"/>
+        <property key="programoptions.uselvpprogramming" value="false"/>
+        <property key="voltagevalue" value="3.25"/>
+      </ICD3PlatformTool>
+      <RealICEPlatformTool>
+        <property key="AutoSelectMemRanges" value="auto"/>
+        <property key="CAN1" value="true"/>
+        <property key="CAN2" value="true"/>
+        <property key="CHANGE NOTICE A" value="true"/>
+        <property key="CHANGE NOTICE B" value="true"/>
+        <property key="CHANGE NOTICE C" value="true"/>
+        <property key="CHANGE NOTICE D" value="true"/>
+        <property key="CHANGE NOTICE E" value="true"/>
+        <property key="CHANGE NOTICE F" value="true"/>
+        <property key="CHANGE NOTICE G" value="true"/>
+        <property key="CHANGE NOTICE H" value="true"/>
+        <property key="CHANGE NOTICE J" value="true"/>
+        <property key="CHANGE NOTICE K" value="true"/>
+        <property key="COMPARATOR" value="true"/>
+        <property key="DMA" value="true"/>
+        <property key="ETHERNET CONTROLLER" value="true"/>
+        <property key="INPUT CAPTURE 1" value="true"/>
+        <property key="INPUT CAPTURE 2" value="true"/>
+        <property key="INPUT CAPTURE 3" value="true"/>
+        <property key="INPUT CAPTURE 4" value="true"/>
+        <property key="INPUT CAPTURE 5" value="true"/>
+        <property key="INPUT CAPTURE 6" value="true"/>
+        <property key="INPUT CAPTURE 7" value="true"/>
+        <property key="INPUT CAPTURE 8" value="true"/>
+        <property key="INPUT CAPTURE 9" value="true"/>
+        <property key="INTERRUPT CONTROL" value="true"/>
+        <property key="OUTPUT COMPARE 1" value="true"/>
+        <property key="OUTPUT COMPARE 2" value="true"/>
+        <property key="OUTPUT COMPARE 3" value="true"/>
+        <property key="OUTPUT COMPARE 4" value="true"/>
+        <property key="OUTPUT COMPARE 5" value="true"/>
+        <property key="OUTPUT COMPARE 6" value="true"/>
+        <property key="OUTPUT COMPARE 7" value="true"/>
+        <property key="OUTPUT COMPARE 8" value="true"/>
+        <property key="OUTPUT COMPARE 9" value="true"/>
+        <property key="PARALLEL MASTER/SLAVE PORT" value="true"/>
+        <property key="REAL TIME CLOCK" value="true"/>
+        <property key="REFERENCE CLOCK1" value="true"/>
+        <property key="REFERENCE CLOCK2" value="true"/>
+        <property key="REFERENCE CLOCK3" value="true"/>
+        <property key="REFERENCE CLOCK4" value="true"/>
+        <property key="RIExTrigs.Five" value="OFF"/>
+        <property key="RIExTrigs.Four" value="OFF"/>
+        <property key="RIExTrigs.One" value="OFF"/>
+        <property key="RIExTrigs.Seven" value="OFF"/>
+        <property key="RIExTrigs.Six" value="OFF"/>
+        <property key="RIExTrigs.Three" value="OFF"/>
+        <property key="RIExTrigs.Two" value="OFF"/>
+        <property key="RIExTrigs.Zero" value="OFF"/>
+        <property key="SPI/I2S 1" value="true"/>
+        <property key="SPI/I2S 2" value="true"/>
+        <property key="SPI/I2S 3" value="true"/>
+        <property key="SPI/I2S 4" value="true"/>
+        <property key="SPI/I2S 5" value="true"/>
+        <property key="SPI/I2S 6" value="true"/>
+        <property key="SecureSegment.SegmentProgramming" value="FullChipProgramming"/>
+        <property key="TIMER1" value="true"/>
+        <property key="TIMER2" value="true"/>
+        <property key="TIMER3" value="true"/>
+        <property key="TIMER4" value="true"/>
+        <property key="TIMER5" value="true"/>
+        <property key="TIMER6" value="true"/>
+        <property key="TIMER7" value="true"/>
+        <property key="TIMER8" value="true"/>
+        <property key="TIMER9" value="true"/>
+        <property key="ToolFirmwareFilePath"
+                  value="Press to browse for a specific firmware version"/>
+        <property key="ToolFirmwareOption.UseLatestFirmware" value="true"/>
+        <property key="UART1" value="true"/>
+        <property key="UART2" value="true"/>
+        <property key="UART3" value="true"/>
+        <property key="UART4" value="true"/>
+        <property key="UART5" value="true"/>
+        <property key="UART6" value="true"/>
+        <property key="debugoptions.useswbreakpoints" value="false"/>
+        <property key="hwtoolclock.frcindebug" value="false"/>
+        <property key="hwtoolclock.instructionspeed" value="4"/>
+        <property key="hwtoolclock.units" value="mips"/>
+        <property key="memories.aux" value="false"/>
+        <property key="memories.bootflash" value="true"/>
+        <property key="memories.configurationmemory" value="true"/>
+        <property key="memories.configurationmemory2" value="true"/>
+        <property key="memories.dataflash" value="true"/>
+        <property key="memories.eeprom" value="true"/>
+        <property key="memories.flashdata" value="true"/>
+        <property key="memories.id" value="true"/>
+        <property key="memories.programmemory" value="true"/>
+        <property key="memories.programmemory.end" value="0x1d1fffff"/>
+        <property key="memories.programmemory.partition2" value="true"/>
+        <property key="memories.programmemory.partition2.end"
+                  value="${memories.programmemory.partition2.end.value}"/>
+        <property key="memories.programmemory.partition2.start"
+                  value="${memories.programmemory.partition2.start.value}"/>
+        <property key="memories.programmemory.start" value="0x1d000000"/>
+        <property key="poweroptions.powerenable" value="false"/>
+        <property key="programoptions.donoteraseauxmem" value="false"/>
+        <property key="programoptions.eraseb4program" value="true"/>
+        <property key="programoptions.preservedataflash" value="false"/>
+        <property key="programoptions.preserveeeprom" value="false"/>
+        <property key="programoptions.preserveprogramrange" value="false"/>
+        <property key="programoptions.preserveprogramrange.end" value="0x1d1fffff"/>
+        <property key="programoptions.preserveprogramrange.start" value="0x1d000000"/>
+        <property key="programoptions.preserveuserid" value="false"/>
+        <property key="programoptions.programcalmem" value="false"/>
+        <property key="programoptions.programuserotp" value="false"/>
+        <property key="programoptions.usehighvoltageonmclr" value="false"/>
+        <property key="programoptions.uselvpprogramming" value="false"/>
+        <property key="tracecontrol.include.timestamp" value="summarydataenabled"/>
+        <property key="tracecontrol.select" value="0"/>
+        <property key="tracecontrol.stallontracebufferfull" value="false"/>
+        <property key="tracecontrol.tracebufmax" value="546000"/>
+        <property key="tracecontrol.tracefile"
+                  value="C:\SmallTests\V6Temp\Harmony_0828\apps\tcpip\wifi_easy_configuration\firmware\pic32_wifi_easy_config.X\debug\pic32mz_ec_sk+ioexp\defmplabxtrace.log"/>
+        <property key="tracecontrol.tracefilemax" value="10000000"/>
+        <property key="voltagevalue" value="3.25"/>
+      </RealICEPlatformTool>
+    </conf>
   </confs>
 </configurationDescriptor>
diff -ruN /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/wifi_easy_configuration.X/nbproject/private/configurations.xml /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/wifi_easy_configuration.X/nbproject/private/configurations.xml
--- /home/mjb/microchip/harmony/v1_06_02/apps/tcpip/wifi_easy_configuration/firmware/wifi_easy_configuration.X/nbproject/private/configurations.xml	1969-12-31 19:00:00.000000000 -0500
+++ /home/mjb/microchip/harmony/v1_06_02-wifire/apps/tcpip/wifi_easy_configuration/firmware/wifi_easy_configuration.X/nbproject/private/configurations.xml	2015-08-08 21:18:55.250820700 -0400
@@ -0,0 +1,169 @@
+<?xml version="1.0" encoding="UTF-8"?>
+<configurationDescriptor version="62">
+  <projectmakefile>Makefile</projectmakefile>
+  <defaultConf>8</defaultConf>
+  <confs>
+    <conf name="pic32mx795_pim+e16" type="2">
+      <platformToolSN></platformToolSN>
+      <languageToolchainDir></languageToolchainDir>
+      <mdbdebugger version="1">
+        <placeholder1>place holder 1</placeholder1>
+        <placeholder2>place holder 2</placeholder2>
+      </mdbdebugger>
+      <runprofile version="6">
+        <args></args>
+        <rundir></rundir>
+        <buildfirst>true</buildfirst>
+        <console-type>0</console-type>
+        <terminal-type>0</terminal-type>
+        <remove-instrumentation>0</remove-instrumentation>
+        <environment>
+        </environment>
+      </runprofile>
+    </conf>
+    <conf name="pic32mx795_pim+e16+freertos" type="2">
+      <platformToolSN></platformToolSN>
+      <languageToolchainDir></languageToolchainDir>
+      <mdbdebugger version="1">
+        <placeholder1>place holder 1</placeholder1>
+        <placeholder2>place holder 2</placeholder2>
+      </mdbdebugger>
+      <runprofile version="6">
+        <args></args>
+        <rundir></rundir>
+        <buildfirst>true</buildfirst>
+        <console-type>0</console-type>
+        <terminal-type>0</terminal-type>
+        <remove-instrumentation>0</remove-instrumentation>
+        <environment>
+        </environment>
+      </runprofile>
+    </conf>
+    <conf name="pic32mx_eth_sk+ioexp" type="2">
+      <platformToolSN></platformToolSN>
+      <languageToolchainDir></languageToolchainDir>
+      <mdbdebugger version="1">
+        <placeholder1>place holder 1</placeholder1>
+        <placeholder2>place holder 2</placeholder2>
+      </mdbdebugger>
+      <runprofile version="6">
+        <args></args>
+        <rundir></rundir>
+        <buildfirst>true</buildfirst>
+        <console-type>0</console-type>
+        <terminal-type>0</terminal-type>
+        <remove-instrumentation>0</remove-instrumentation>
+        <environment>
+        </environment>
+      </runprofile>
+    </conf>
+    <conf name="pic32mx_eth_sk+ioexp+freertos" type="2">
+      <platformToolSN></platformToolSN>
+      <languageToolchainDir></languageToolchainDir>
+      <mdbdebugger version="1">
+        <placeholder1>place holder 1</placeholder1>
+        <placeholder2>place holder 2</placeholder2>
+      </mdbdebugger>
+      <runprofile version="6">
+        <args></args>
+        <rundir></rundir>
+        <buildfirst>true</buildfirst>
+        <console-type>0</console-type>
+        <terminal-type>0</terminal-type>
+        <remove-instrumentation>0</remove-instrumentation>
+        <environment>
+        </environment>
+      </runprofile>
+    </conf>
+    <conf name="pic32mz_ec_sk+ioexp" type="2">
+      <platformToolSN></platformToolSN>
+      <languageToolchainDir></languageToolchainDir>
+      <mdbdebugger version="1">
+        <placeholder1>place holder 1</placeholder1>
+        <placeholder2>place holder 2</placeholder2>
+      </mdbdebugger>
+      <runprofile version="6">
+        <args></args>
+        <rundir></rundir>
+        <buildfirst>true</buildfirst>
+        <console-type>0</console-type>
+        <terminal-type>0</terminal-type>
+        <remove-instrumentation>0</remove-instrumentation>
+        <environment>
+        </environment>
+      </runprofile>
+    </conf>
+    <conf name="pic32mz_ec_sk+ioexp+freertos" type="2">
+      <platformToolSN></platformToolSN>
+      <languageToolchainDir></languageToolchainDir>
+      <mdbdebugger version="1">
+        <placeholder1>place holder 1</placeholder1>
+        <placeholder2>place holder 2</placeholder2>
+      </mdbdebugger>
+      <runprofile version="6">
+        <args></args>
+        <rundir></rundir>
+        <buildfirst>true</buildfirst>
+        <console-type>0</console-type>
+        <terminal-type>0</terminal-type>
+        <remove-instrumentation>0</remove-instrumentation>
+        <environment>
+        </environment>
+      </runprofile>
+    </conf>
+    <conf name="pic32mz_ec_sk+meb2" type="2">
+      <platformToolSN></platformToolSN>
+      <languageToolchainDir></languageToolchainDir>
+      <mdbdebugger version="1">
+        <placeholder1>place holder 1</placeholder1>
+        <placeholder2>place holder 2</placeholder2>
+      </mdbdebugger>
+      <runprofile version="6">
+        <args></args>
+        <rundir></rundir>
+        <buildfirst>true</buildfirst>
+        <console-type>0</console-type>
+        <terminal-type>0</terminal-type>
+        <remove-instrumentation>0</remove-instrumentation>
+        <environment>
+        </environment>
+      </runprofile>
+    </conf>
+    <conf name="pic32mz_ec_sk+meb2+freertos" type="2">
+      <platformToolSN></platformToolSN>
+      <languageToolchainDir></languageToolchainDir>
+      <mdbdebugger version="1">
+        <placeholder1>place holder 1</placeholder1>
+        <placeholder2>place holder 2</placeholder2>
+      </mdbdebugger>
+      <runprofile version="6">
+        <args></args>
+        <rundir></rundir>
+        <buildfirst>true</buildfirst>
+        <console-type>0</console-type>
+        <terminal-type>0</terminal-type>
+        <remove-instrumentation>0</remove-instrumentation>
+        <environment>
+        </environment>
+      </runprofile>
+    </conf>
+    <conf name="pic32mz_ec_wifire_freertos" type="2">
+      <platformToolSN>:=MPLABComm-USB-Microchip:=&lt;vid>04D8:=&lt;pid>9009:=&lt;rev>0100:=&lt;man>Microchip Technology, Inc. (www.microchip.com):=&lt;prod>MPLAB ICD3 tm (www.microchip.com):=&lt;sn>JIT121922486:=&lt;drv>x:=&lt;xpt>b:=end</platformToolSN>
+      <languageToolchainDir></languageToolchainDir>
+      <mdbdebugger version="1">
+        <placeholder1>place holder 1</placeholder1>
+        <placeholder2>place holder 2</placeholder2>
+      </mdbdebugger>
+      <runprofile version="6">
+        <args></args>
+        <rundir></rundir>
+        <buildfirst>true</buildfirst>
+        <console-type>0</console-type>
+        <terminal-type>0</terminal-type>
+        <remove-instrumentation>0</remove-instrumentation>
+        <environment>
+        </environment>
+      </runprofile>
+    </conf>
+  </confs>
+</configurationDescriptor>
diff -ruN /home/mjb/microchip/harmony/v1_06_02/bsp/config/bsp.hconfig /home/mjb/microchip/harmony/v1_06_02-wifire/bsp/config/bsp.hconfig
--- /home/mjb/microchip/harmony/v1_06_02/bsp/config/bsp.hconfig	2015-05-12 01:03:52.000000000 -0400
+++ /home/mjb/microchip/harmony/v1_06_02-wifire/bsp/config/bsp.hconfig	2015-08-08 18:58:13.925004500 -0400
@@ -487,7 +487,16 @@
     IDH_HTML_BSP_pic32mz_ef_sk_s1d_pictail_wqvga
     ---endhelp---
 	
-
+config BSP_PIC32MZ_WIFIRE
+    depends on USE_BSP
+    depends on DS60001191
+	select BSP_TRIGGER
+	select BSP_USE_USBSWITCH
+	select BSP_POSC_24MHz
+    bool "PIC32MZ picKIT WI-FIRE"
+    ---help---
+    IDH_HTML_BSP_Board_Support_Packages
+    ---endhelp---
 	
 endchoice	
 
@@ -537,5 +546,7 @@
 source "$HARMONY_VERSION_PATH/bsp/pic32mz_ef_sk+s1d_pictail+vga/config/bsp.hconfig"
 source "$HARMONY_VERSION_PATH/bsp/pic32mz_ef_sk+s1d_pictail+wqvga/config/bsp.hconfig"
 
+source "$HARMONY_VERSION_PATH/bsp/pic32mz_wifire/config/bsp.hconfig"
+
 endmenu
 
diff -ruN /home/mjb/microchip/harmony/v1_06_02/bsp/pic32mz_wifire/bsp_config.h /home/mjb/microchip/harmony/v1_06_02-wifire/bsp/pic32mz_wifire/bsp_config.h
--- /home/mjb/microchip/harmony/v1_06_02/bsp/pic32mz_wifire/bsp_config.h	1969-12-31 19:00:00.000000000 -0500
+++ /home/mjb/microchip/harmony/v1_06_02-wifire/bsp/pic32mz_wifire/bsp_config.h	2015-08-05 22:14:24.083544800 -0400
@@ -0,0 +1,532 @@
+/*******************************************************************************
+  Board Support Package Header File.
+
+  Company:      
+    Microchip Technology Inc.
+
+  File Name:    
+    bsp_config.h
+
+  Summary:      
+    Board Support Package Header File for PIC32MZ Embedded Connectivity (EC)
+    Starter Kit.
+
+  Description:
+    This file contains constants, macros, type defintions and function
+    declarations required by the PIC32MZ Embedded Connectivity (EC) Starter Kit.
+*******************************************************************************/
+
+// DOM-IGNORE-BEGIN
+/*******************************************************************************
+Copyright (c) 2014 released Microchip Technology Inc.  All rights reserved.
+
+Microchip licenses to you the right to use, modify, copy and distribute
+Software only when embedded on a Microchip microcontroller or digital signal
+controller that is integrated into your product or third party product
+(pursuant to the sublicense terms in the accompanying license agreement).
+
+You should refer to the license agreement accompanying this Software for
+additional information regarding your rights and obligations.
+
+SOFTWARE AND DOCUMENTATION ARE PROVIDED "AS IS" WITHOUT WARRANTY OF ANY KIND,
+EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF
+MERCHANTABILITY, TITLE, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE.
+IN NO EVENT SHALL MICROCHIP OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER
+CONTRACT, NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR
+OTHER LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
+INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE OR
+CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT OF
+SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
+(INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
+*******************************************************************************/
+// DOM-IGNORE-END
+
+#ifndef _BSP_CONFIG_H
+#define _BSP_CONFIG_H
+
+// *****************************************************************************
+// *****************************************************************************
+// Section: Included Files
+// *****************************************************************************
+// *****************************************************************************
+
+#include <xc.h>
+#include <stdio.h>
+#include <stdlib.h>
+#include <stdint.h>
+#include <stdbool.h>
+#include "peripheral/ports/plib_ports.h"
+
+// *****************************************************************************
+// *****************************************************************************
+// Section: Constants and Type Definitions.
+// *****************************************************************************
+// *****************************************************************************
+
+// *****************************************************************************
+/* Pixel Clock Pin Constants
+
+  Summary:
+    Defines the constants which identifies PIXELCLOCK pins
+
+  Description:
+    These constants identifies PIXELCLOCK pins
+
+  Remarks:
+    None.
+*/
+
+#define PIXELCLOCK        LATDbits.LATD5
+#define PIXELCLOCK_TRIS   TRISDbits.TRISD5
+
+// *****************************************************************************
+/* Oscillator Frequency
+
+  Summary:
+    Defines frequency value of crystal/oscillator used on the board
+
+  Description:
+    Defines frequency value of crystal/oscillator used on the board
+*/
+
+#define BSP_OSC_FREQUENCY 24000000
+
+// *****************************************************************************
+/* BSP Switch.
+
+  Summary:
+    Defines the switches available on this board.
+
+  Description:
+    This enumeration defines the switches available on this board.
+
+  Remarks:
+    None.
+*/
+
+typedef enum
+{
+    /* SWITCH 1 */
+     BSP_SWITCH_1 = /*DOM-IGNORE-BEGIN*/PORTS_BIT_POS_5/*DOM-IGNORE-END*/,
+
+    /* SWITCH 2 */
+     BSP_SWITCH_2 = /*DOM-IGNORE-BEGIN*/PORTS_BIT_POS_4/*DOM-IGNORE-END*/,
+
+} BSP_SWITCH;
+
+// *****************************************************************************
+/* BSP Switch state.
+
+  Summary:
+    Defines possible states of the switches on this board.
+
+  Description:
+    This enumeration defines the possible states of the switches on this board.
+
+  Remarks:
+    None.
+*/
+
+typedef enum
+{
+    /* Switch pressed */
+    BSP_SWITCH_STATE_PRESSED =/*DOM-IGNORE-BEGIN*/ 1/*DOM-IGNORE-END*/,
+
+   /* Switch not pressed */
+    BSP_SWITCH_STATE_RELEASED =/*DOM-IGNORE-BEGIN*/ 0/*DOM-IGNORE-END*/
+
+} BSP_SWITCH_STATE;
+
+// *****************************************************************************
+/* LED Number.
+
+  Summary:
+    Defines the LEDs available on this board.
+
+  Description:
+    This enumeration defines the LEDs available on this board.
+
+  Remarks:
+    None.
+*/
+
+typedef enum
+{
+    /* LED 1 on Wi-FIRE */
+    BSP_LED_1 = /*DOM-IGNORE-BEGIN*/PORTS_BIT_POS_6/*DOM-IGNORE-END*/,
+
+    /* LED 2 on Wi-FIRE */
+    BSP_LED_2 = /*DOM-IGNORE-BEGIN*/PORTS_BIT_POS_4/*DOM-IGNORE-END*/,
+
+    /* LED 3 on Wi-FIRE */
+    BSP_LED_3 = /*DOM-IGNORE-BEGIN*/PORTS_BIT_POS_11/*DOM-IGNORE-END*/,
+
+    /* LED 4 on Wi-FIRE */
+    BSP_LED_4 = /*DOM-IGNORE-BEGIN*/PORTS_BIT_POS_15/*DOM-IGNORE-END*/
+
+} BSP_LED;
+
+// *****************************************************************************
+/* LED State
+
+  Summary:
+    Enumerates the supported LED states.
+
+  Description:
+    This enumeration defines the supported LED states.
+
+  Remarks:
+    None.
+*/
+
+typedef enum
+{
+    /* LED State is on */
+    BSP_LED_STATE_OFF = /*DOM-IGNORE-BEGIN*/0/*DOM-IGNORE-END*/,
+
+   /* LED State is off */
+    BSP_LED_STATE_ON = /*DOM-IGNORE-BEGIN*/1/*DOM-IGNORE-END*/
+
+} BSP_LED_STATE;
+
+// *****************************************************************************
+/* USB VBUS Switch State
+
+  Summary:
+    Defines the possible states of the USB VBUS Switch on this board
+
+  Description:
+    This enumeration defines the possible states of the USB VBUS Switch on this
+    board.
+
+  Remarks:
+    None.
+*/
+
+typedef enum
+{
+    /* USB VBUS Switch disable */
+    BSP_USB_VBUS_SWITCH_STATE_DISABLE = /*DOM-IGNORE-BEGIN*/0/*DOM-IGNORE-END*/,
+
+    /* USB VBUS Switch enable */
+    BSP_USB_VBUS_SWITCH_STATE_ENABLE = /*DOM-IGNORE-BEGIN*/1/*DOM-IGNORE-END*/
+
+} BSP_USB_VBUS_SWITCH_STATE;
+
+// *****************************************************************************
+// *****************************************************************************
+// Section: Interface Routines
+// *****************************************************************************
+// *****************************************************************************
+
+// *****************************************************************************
+/* Function: 
+    void BSP_Initialize(void)
+
+  Summary:
+    Performs the necessary actions to initialize a board
+  
+  Description:
+    This function initializes the LED and Switch ports on the board.  This
+    function must be called by the user before using any APIs present on this
+    BSP.  
+
+  Precondition:
+    None.
+
+  Parameters:
+    None
+  
+  Returns:
+    None.
+
+  Example:
+    <code>
+    //Initialize the BSP
+    BSP_Initialize();
+    </code>
+
+  Remarks:
+    None                                                                   
+*/
+
+void BSP_Initialize(void);
+
+// *****************************************************************************
+/* Function: 
+    void BSP_LEDStateSet(BSP_LED led, BSP_LED_STATE state);
+
+  Summary:
+    Controls the state of the LED.
+  
+  Description:
+    This function allows the application to specify the state of the LED.
+
+  Precondition:
+    BSP_Initialize() should have been called.
+
+  Parameters:
+    led     - The LED to operate on.
+    state   - The state to be set.
+  
+  Returns:
+    None.
+
+  Example:
+    <code>
+    
+    // Initialize the BSP
+    BSP_Initialize();
+
+    // Switch on LED1 on the board 
+    BSP_LEDStateSet(BSP_LED_1, BSP_LED_STATE_ON);
+    
+    // Switch off LED2 on the board 
+    BSP_LEDStateSet(BSP_LED_2, BSP_LED_STATE_OFF);
+
+    </code>
+
+  Remarks:
+    None                                                                   
+*/
+
+void BSP_LEDStateSet(BSP_LED led, BSP_LED_STATE state);
+
+// *****************************************************************************
+/* Function: 
+    BSP_LED_STATE BSP_LEDStateGet(BSP_LED led);
+
+  Summary:
+    Returns the present state of the LED.
+  
+  Description:
+    This function returns the present state of the LED.
+
+  Precondition:
+    BSP_Initialize() should have been called.
+
+  Parameters:
+    led - The LED to whose status needs to be obtained.
+  
+  Returns:
+    The ON/OFF state of the LED.
+
+  Example:
+    <code>
+    
+    // Initialize the BSP
+    BSP_Initialize();
+
+    // Check if LED2 is off
+    if(BSP_LED_STATE_OFF == BSP_LEDStateGet(BSP_LED_2)
+    {
+        // Switch on the LED.
+        BSP_LEDStateSet(BSP_LED_2, BSP_LED_STATE_ON);
+    }
+
+    </code>
+
+  Remarks:
+    None                                                                   
+*/
+
+BSP_LED_STATE BSP_LEDStateGet(BSP_LED led);
+
+// *****************************************************************************
+/* Function: 
+    void BSP_LEDToggle(BSP_LED led);
+
+  Summary:
+    Toggles the state of the LED between BSP_LED_STATE_ON and BSP_LED_STATE_OFF.
+  
+  Description:
+    This function toggles the state of the LED between BSP_LED_STATE_ON and
+    BSP_LED_STATE_OFF.
+
+  Precondition:
+    BSP_Initialize() should have been called.
+
+  Parameters:
+    led - The LED to toggle.
+  
+  Returns:
+    None.
+
+  Example:
+    <code>
+    
+    // Initialize the BSP
+    BSP_Initialize();
+
+    // Switch on LED1 on the board 
+    BSP_LEDStateSet(BSP_LED_1, BSP_LED_STATE_ON);
+    
+    // Switch off LED2 on the board 
+    BSP_LEDStateSet(BSP_LED_2, BSP_LED_STATE_OFF);
+
+    // Toggle state of LED3
+    BSP_LEDToggle(BSP_LED_3);
+    </code>
+
+  Remarks:
+    None                                                                   
+*/
+
+void BSP_LEDToggle(BSP_LED led);
+
+// *****************************************************************************
+/* Function: 
+    void BSP_LEDOn(BSP_LED led);
+
+  Summary:
+    Switches ON the specified LED.
+  
+  Description:
+    This function switches ON the specified LED.
+
+  Precondition:
+    BSP_Initialize() should have been called.
+
+  Parameters:
+    led - The LED to switch on.
+  
+  Returns:
+    None.
+
+  Example:
+    <code>
+    
+    // Initialize the BSP
+    BSP_Initialize();
+
+    // Switch on LED1 on the board 
+    BSP_LEDOn(BSP_LED_1);
+    
+    </code>
+
+  Remarks:
+    None                                                                   
+*/
+
+void BSP_LEDOn(BSP_LED led);
+
+// *****************************************************************************
+/* Function: 
+    void BSP_LEDOff(BSP_LED led);
+
+  Summary:
+    Switches OFF the specified LED.
+  
+  Description:
+    This function switches OFF the specified LED.
+
+  Precondition:
+    BSP_Initialize() should have been called.
+
+  Parameters:
+    led - The LED to switch off.
+  
+  Returns:
+    None.
+
+  Example:
+    <code>
+    
+    // Initialize the BSP
+    BSP_Initialize();
+
+    // Switch off LED1 on the board 
+    BSP_LEDOff(BSP_LED_1);
+    
+    </code>
+
+  Remarks:
+    None                                                                   
+*/
+
+void BSP_LEDOff(BSP_LED led);
+
+// *****************************************************************************
+/* Function: 
+    BSP_SWITCH_STATE BSP_SwitchStateGet(BSP_SWITCH switch);
+
+  Summary:
+    Returns the present state (pressed or not pressed) of the specified switch.
+  
+  Description:
+    This function returns the present state (pressed or not pressed) of the
+    specified switch.
+
+  Precondition:
+    BSP_Initialize() should have been called.
+
+  Parameters:
+    switch  - The switch whose state needs to be obtained.
+  
+  Returns:
+    The pressed released state of the switch.
+
+  Example:
+    <code>
+    
+    // Initialize the BSP
+    BSP_Initialize();
+
+    // Check the state of the switch.
+    if(BSP_SWITCH_STATE_PRESSED == BSP_SwitchStateGet(BSP_SWITCH_1))
+    {
+        // This means that Switch 1 on the board is pressed.
+    }
+
+    </code>
+
+  Remarks:
+    None                                                                   
+*/
+
+BSP_SWITCH_STATE BSP_SwitchStateGet(BSP_SWITCH bspSwitch);
+
+// *****************************************************************************
+/* Function: 
+    void BSP_USBVBUSSwitchStateSet(BSP_USB_VBUS_SWITCH_STATE state);
+
+  Summary:
+    This function enables or disables the USB VBUS switch on the board.
+  
+  Description:
+    This function enables or disables the VBUS switch on the board.
+
+  Precondition:
+    BSP_Initialize() should have been called.
+
+  Parameters:
+    state - If BSP_USB_VBUS_SWITCH_STATE_ENABLE, then the USB VBUS switch is
+            enabled and VBUS is supplied on the USB. 
+            If BSP_USB_VBUS_SWITCH_STATE_DISABLE, then the USB VBUS
+            switch is disabled and VBUS is not supplied on the USB.
+  
+  Returns:
+    None.
+
+  Example:
+    <code>
+    
+    // Initialize the BSP
+    BSP_Initialize();
+
+    // Enable the VBUS switch.
+    BSP_USBVBUSSwitchStateSet(BSP_USB_VBUS_SWITCH_STATE_ENABLE);
+    
+    </code>
+
+  Remarks:
+    None                                                                   
+*/
+
+void BSP_USBVBUSSwitchStateSet(BSP_USB_VBUS_SWITCH_STATE state);
+
+#endif //_BSP_CONFIG_H
+
+/*******************************************************************************
+ End of File
+*/
diff -ruN /home/mjb/microchip/harmony/v1_06_02/bsp/pic32mz_wifire/bsp_sys_init.c /home/mjb/microchip/harmony/v1_06_02-wifire/bsp/pic32mz_wifire/bsp_sys_init.c
--- /home/mjb/microchip/harmony/v1_06_02/bsp/pic32mz_wifire/bsp_sys_init.c	1969-12-31 19:00:00.000000000 -0500
+++ /home/mjb/microchip/harmony/v1_06_02-wifire/bsp/pic32mz_wifire/bsp_sys_init.c	2015-08-05 22:14:24.182549300 -0400
@@ -0,0 +1,378 @@
+/*******************************************************************************
+  Board Support Package Implementation
+
+  Company:
+    Microchip Technology Inc.
+
+  File Name:
+    bsp_sys_init.c
+
+  Summary:
+    Board Support Package implementation for PIC32MZ Embedded Connectivity (EC)
+    Starter Kit.
+
+  Description:
+    This file contains routines that implement the board support package for
+    PIC32MZ Embedded Connectivity (EC) Starter Kit.
+*******************************************************************************/
+
+// DOM-IGNORE-BEGIN
+/*******************************************************************************
+Copyright (c) 2012 released Microchip Technology Inc.  All rights reserved.
+
+Microchip licenses to you the right to use, modify, copy and distribute
+Software only when embedded on a Microchip microcontroller or digital signal
+controller that is integrated into your product or third party product
+(pursuant to the sublicense terms in the accompanying license agreement).
+
+You should refer to the license agreement accompanying this Software for
+additional information regarding your rights and obligations.
+
+SOFTWARE AND DOCUMENTATION ARE PROVIDED AS IS WITHOUT WARRANTY OF ANY KIND,
+EITHER EXPRESS OR IMPLIED, INCLUDING WITHOUT LIMITATION, ANY WARRANTY OF
+MERCHANTABILITY, TITLE, NON-INFRINGEMENT AND FITNESS FOR A PARTICULAR PURPOSE.
+IN NO EVENT SHALL MICROCHIP OR ITS LICENSORS BE LIABLE OR OBLIGATED UNDER
+CONTRACT, NEGLIGENCE, STRICT LIABILITY, CONTRIBUTION, BREACH OF WARRANTY, OR
+OTHER LEGAL EQUITABLE THEORY ANY DIRECT OR INDIRECT DAMAGES OR EXPENSES
+INCLUDING BUT NOT LIMITED TO ANY INCIDENTAL, SPECIAL, INDIRECT, PUNITIVE OR
+CONSEQUENTIAL DAMAGES, LOST PROFITS OR LOST DATA, COST OF PROCUREMENT OF
+SUBSTITUTE GOODS, TECHNOLOGY, SERVICES, OR ANY CLAIMS BY THIRD PARTIES
+(INCLUDING BUT NOT LIMITED TO ANY DEFENSE THEREOF), OR OTHER SIMILAR COSTS.
+*******************************************************************************/
+// DOM-IGNORE-END
+
+// *****************************************************************************
+// *****************************************************************************
+// Section: Included Files
+// *****************************************************************************
+// *****************************************************************************
+
+#include "bsp_config.h"
+
+// *****************************************************************************
+// *****************************************************************************
+// *****************************************************************************
+// Section: Interface Routines
+// *****************************************************************************
+// *****************************************************************************
+
+// *****************************************************************************
+/* Function: 
+    void BSP_Initialize(void)
+
+  Summary:
+    Performs the necessary actions to initialize a board
+  
+  Description:
+    This function initializes the LED, Switch and other ports on the board.
+    This function must be called by the user before using any APIs present in
+    this BSP.  
+
+  Remarks:
+    Refer to bsp_config.h for usage information.
+*/
+
+void BSP_Initialize(void )
+{
+    /* Make the Switch pins digital */
+    PLIB_PORTS_PinModePerPortSelect (PORTS_ID_0, PORT_CHANNEL_A, BSP_SWITCH_1, PORTS_PIN_MODE_DIGITAL);
+    PLIB_PORTS_PinModePerPortSelect (PORTS_ID_0, PORT_CHANNEL_A, BSP_SWITCH_2, PORTS_PIN_MODE_DIGITAL);
+
+    /* Set the Switch pins as input */
+    PLIB_PORTS_PinDirectionInputSet ( PORTS_ID_0 , PORT_CHANNEL_A , BSP_SWITCH_1 );
+    PLIB_PORTS_PinDirectionInputSet ( PORTS_ID_0 , PORT_CHANNEL_A , BSP_SWITCH_2 );
+    
+    /* Disable pull up resistors on switch ports */
+    PLIB_PORTS_ChangeNoticePullUpPerPortDisable (PORTS_ID_0, PORT_CHANNEL_A, BSP_SWITCH_1);
+    PLIB_PORTS_ChangeNoticePullUpPerPortDisable (PORTS_ID_0, PORT_CHANNEL_A, BSP_SWITCH_2);
+
+    /* Setup the USB VBUS Switch Control Pin */
+    PLIB_PORTS_PinModePerPortSelect (PORTS_ID_0, PORT_CHANNEL_B, PORTS_BIT_POS_0, PORTS_PIN_MODE_DIGITAL );
+    PLIB_PORTS_PinDirectionOutputSet( PORTS_ID_0, PORT_CHANNEL_B, PORTS_BIT_POS_0 );
+
+    /* Setup the LED port pins as digital */
+    PLIB_PORTS_PinModePerPortSelect(PORTS_ID_0, PORT_CHANNEL_G, BSP_LED_1, PORTS_PIN_MODE_DIGITAL);  
+    PLIB_PORTS_PinModePerPortSelect(PORTS_ID_0, PORT_CHANNEL_D, BSP_LED_2, PORTS_PIN_MODE_DIGITAL);  
+    PLIB_PORTS_PinModePerPortSelect(PORTS_ID_0, PORT_CHANNEL_B, BSP_LED_3, PORTS_PIN_MODE_DIGITAL);  
+    PLIB_PORTS_PinModePerPortSelect(PORTS_ID_0, PORT_CHANNEL_G, BSP_LED_4, PORTS_PIN_MODE_DIGITAL);  
+
+    /* Set the LED pins as output */
+    PLIB_PORTS_PinDirectionOutputSet( PORTS_ID_0, PORT_CHANNEL_G, BSP_LED_1 );
+    PLIB_PORTS_PinDirectionOutputSet( PORTS_ID_0, PORT_CHANNEL_D, BSP_LED_2 );
+    PLIB_PORTS_PinDirectionOutputSet( PORTS_ID_0, PORT_CHANNEL_B, BSP_LED_3 );
+    PLIB_PORTS_PinDirectionOutputSet( PORTS_ID_0, PORT_CHANNEL_G, BSP_LED_4 );
+
+    /* Switch off LEDs */
+    PLIB_PORTS_PinClear( PORTS_ID_0, PORT_CHANNEL_G, BSP_LED_1 );
+    PLIB_PORTS_PinClear( PORTS_ID_0, PORT_CHANNEL_D, BSP_LED_2 );
+    PLIB_PORTS_PinClear( PORTS_ID_0, PORT_CHANNEL_B, BSP_LED_3 );
+	PLIB_PORTS_PinClear( PORTS_ID_0, PORT_CHANNEL_G, BSP_LED_4 );
+	
+	/*  Potentiometer */
+    TRISBbits.TRISB13 = 1;      // E8 / AN25
+    CNPUBbits.CNPUB13 = 0;
+    CNPDBbits.CNPDB13 = 0;
+    ANSELBbits.ANSB13 = 1;
+
+    /*  Entropy source for seeding RNG */
+    TRISEbits.TRISE8 = 1;      // E8 / AN25
+    CNPUEbits.CNPUE8 = 0;
+    CNPDEbits.CNPDE8 = 0;
+    ANSELEbits.ANSE8 = 1;
+
+    /* Set up the CAL registers */
+    AD1CAL1 = DEVADC1;
+    AD1CAL2 = DEVADC2;
+    AD1CAL3 = DEVADC3;
+    AD1CAL4 = DEVADC4;
+    AD1CAL5 = DEVADC5;
+
+
+    /*
+     * UART 4 - Console port
+     * - u4Txd on pin RPF8
+     * - u4RXd on pin RPF2
+     */
+
+    // TXd Pin setup.
+    // ANSELFCLR = (1<<8);  // no analogue function
+    TRISFCLR = (1<<8);
+    RPF8R = 0x02;
+
+    // RXd Pin setup.
+    // ANSELFCLR = (1<<2);  // no analogue function
+    TRISFSET = (1<<2);
+    U4RXR = 0x0B;
+
+}
+
+// *****************************************************************************
+/* Function: 
+    void BSP_LEDStateSet(BSP_LED led, BSP_LED_STATE state);
+
+  Summary:
+    Controls the state of the LED.
+  
+  Description:
+    This function allows the application to specify the state of the LED.
+
+  Remarks:
+    Refer to bsp_config.h for usage information.
+*/
+
+void BSP_LEDStateSet(BSP_LED led, BSP_LED_STATE state)
+{
+    /* Set the state of the LED */
+    switch (led)
+	{
+		case BSP_LED_1:
+			PLIB_PORTS_PinWrite (PORTS_ID_0 , PORT_CHANNEL_G , led, state );
+			break;
+		case BSP_LED_2:
+			PLIB_PORTS_PinWrite (PORTS_ID_0 , PORT_CHANNEL_D , led, state );
+			break;
+		case BSP_LED_3:
+			PLIB_PORTS_PinWrite (PORTS_ID_0 , PORT_CHANNEL_B , led, state );
+			break;
+		case BSP_LED_4:
+			PLIB_PORTS_PinWrite (PORTS_ID_0 , PORT_CHANNEL_G , led, state );
+			break;
+		default:
+			// SYS_ASSERT(false, "Invalid BSP_LED!");
+			break;
+	}
+}
+
+// *****************************************************************************
+/* Function: 
+    void BSP_LEDToggle(BSP_LED led);
+
+  Summary:
+    Toggles the state of the LED between BSP_LED_STATE_ON and BSP_LED_STATE_OFF.
+  
+  Description:
+    This function toggles the state of the LED between BSP_LED_STATE_ON and
+    BSP_LED_STATE_OFF.
+
+  Remarks:
+    Refer to bsp_config.h for usage information.
+*/    
+
+void BSP_LEDToggle(BSP_LED led)
+{
+	switch (led)
+	{
+		case BSP_LED_1:
+			PLIB_PORTS_PinToggle(PORTS_ID_0, PORT_CHANNEL_G, led );
+			break;
+		case BSP_LED_2:
+			PLIB_PORTS_PinToggle(PORTS_ID_0, PORT_CHANNEL_D, led );
+			break;
+		case BSP_LED_3:
+			PLIB_PORTS_PinToggle(PORTS_ID_0, PORT_CHANNEL_B, led );
+			break;
+		case BSP_LED_4:
+			PLIB_PORTS_PinToggle(PORTS_ID_0, PORT_CHANNEL_G, led );
+			break;
+		default:
+			// SYS_ASSERT(false, "Invalid BSP_LED!");
+			break;
+	}
+}
+
+// *****************************************************************************
+/* Function: 
+    BSP_LED_STATE BSP_LEDStateGet(BSP_LED led);
+
+  Summary:
+    Returns the present state of the LED.
+  
+  Description:
+    This function returns the present state of the LED.
+
+  Remarks:
+    Refer to bsp_config.h for usage information.
+*/    
+
+BSP_LED_STATE BSP_LEDStateGet (BSP_LED led)
+{
+    /* Get LED Status */
+	bool result = false;
+	switch (led)
+	{
+		case BSP_LED_1:
+			PLIB_PORTS_PinGet (PORTS_ID_0, PORT_CHANNEL_G, led);
+			break;
+		case BSP_LED_2:
+			PLIB_PORTS_PinGet (PORTS_ID_0, PORT_CHANNEL_D, led);
+			break;
+		case BSP_LED_3:
+			PLIB_PORTS_PinGet (PORTS_ID_0, PORT_CHANNEL_B, led);
+			break;
+		case BSP_LED_4:
+			PLIB_PORTS_PinGet (PORTS_ID_0, PORT_CHANNEL_G, led);
+			break;
+		default:
+			// SYS_ASSERT(false, "Invalid BSP_LED!");
+			break;
+	}
+	return result;
+}
+
+// *****************************************************************************
+/* Function: 
+    void BSP_LEDOn(BSP_LED led);
+
+  Summary:
+    Switches ON the specified LED.
+  
+  Description:
+    This function switches ON the specified LED.
+
+  Remarks:
+    Refer to bsp_config.h for usage information.
+*/
+
+void BSP_LEDOn(BSP_LED led)
+{
+	switch (led)
+	{
+		case BSP_LED_1:
+			PLIB_PORTS_PinSet(PORTS_ID_0, PORT_CHANNEL_G, led );
+			break;
+		case BSP_LED_2:
+			PLIB_PORTS_PinSet(PORTS_ID_0, PORT_CHANNEL_D, led );
+			break;
+		case BSP_LED_3:
+			PLIB_PORTS_PinSet(PORTS_ID_0, PORT_CHANNEL_B, led );
+			break;
+		case BSP_LED_4:
+			PLIB_PORTS_PinSet(PORTS_ID_0, PORT_CHANNEL_G, led );
+			break;
+		default:
+			// SYS_ASSERT(false, "Invalid BSP_LED!");
+			break;
+	}
+}
+
+// *****************************************************************************
+/* Function: 
+    void BSP_LEDOff(BSP_LED led);
+
+  Summary:
+    Switches Off the specified LED.
+  
+  Description:
+    This function switches Off the specified LED.
+
+  Remarks:
+    Refer to bsp_config.h for usage information.
+*/
+
+void BSP_LEDOff(BSP_LED led)
+{
+	switch (led)
+	{
+		case BSP_LED_1:
+			PLIB_PORTS_PinClear(PORTS_ID_0, PORT_CHANNEL_G, led );
+			break;
+		case BSP_LED_2:
+			PLIB_PORTS_PinClear(PORTS_ID_0, PORT_CHANNEL_D, led );
+			break;
+		case BSP_LED_3:
+			PLIB_PORTS_PinClear(PORTS_ID_0, PORT_CHANNEL_B, led );
+			break;
+		case BSP_LED_4:
+			PLIB_PORTS_PinClear(PORTS_ID_0, PORT_CHANNEL_G, led );
+			break;
+		default:
+			// SYS_ASSERT(false, "Invalid BSP_LED!");
+			break;
+	}
+}
+
+// *****************************************************************************
+/* Function: 
+    void BSP_SwitchStateGet(BSP_SWITCH switch);
+
+  Summary:
+    Returns the present state (pressed or not pressed) of the specified switch.
+  
+  Description:
+    This function returns the present state (pressed or not pressed) of the
+    specified switch.
+
+  Remarks:
+    Refer to bsp_config.h for usage information.
+*/
+
+BSP_SWITCH_STATE BSP_SwitchStateGet( BSP_SWITCH bspSwitch )
+{
+    return ( PLIB_PORTS_PinGet(PORTS_ID_0, PORT_CHANNEL_A, bspSwitch) );
+}
+
+// *****************************************************************************
+/* Function: 
+    void BSP_USBVBUSSwitchStateSet(BSP_USB_VBUS_SWITCH_STATE state);
+
+  Summary:
+    This function enables or disables the USB VBUS switch on the board.
+  
+  Description:
+    This function enables or disables the VBUS switch on the board.
+
+  Remarks:
+    Refer to bsp_config.h for usage information.
+*/
+
+void BSP_USBVBUSSwitchStateSet(BSP_USB_VBUS_SWITCH_STATE state)
+{
+    /* Enable the VBUS switch */
+
+    PLIB_PORTS_PinWrite( PORTS_ID_0, PORT_CHANNEL_B, PORTS_BIT_POS_0, state );
+}
+
+
+/*******************************************************************************
+ End of File
+*/
diff -ruN /home/mjb/microchip/harmony/v1_06_02/bsp/pic32mz_wifire/config/bsp.hconfig /home/mjb/microchip/harmony/v1_06_02-wifire/bsp/pic32mz_wifire/config/bsp.hconfig
--- /home/mjb/microchip/harmony/v1_06_02/bsp/pic32mz_wifire/config/bsp.hconfig	1969-12-31 19:00:00.000000000 -0500
+++ /home/mjb/microchip/harmony/v1_06_02-wifire/bsp/pic32mz_wifire/config/bsp.hconfig	2015-08-08 18:47:26.898996700 -0400
@@ -0,0 +1,8 @@
+
+ifblock BSP_PIC32MZ_WIFIRE
+file BSP_pic32mz_wifire_BSP "$HARMONY_VERSION_PATH/bsp/pic32mz_wifire/xml/bsp.xml" to "$BSP_CONFIGURATION_XML"
+file BSP_pic32mz_wifire_H "$HARMONY_VERSION_PATH/bsp/pic32mz_wifire/bsp_config.h" to "$PROJECT_HEADER_FILES/bsp/pic32mz_wifire/bsp_config.h"
+file BSP_pic32mz_wifire_C "$HARMONY_VERSION_PATH/bsp/pic32mz_wifire/bsp_sys_init.c" to "$PROJECT_SOURCE_FILES/bsp/pic32mz_wifire/bsp_sys_init.c"
+compiler BSP_COMPILER_INCLUDE_pic32mz_wifire includepath "$HARMONY_VERSION_PATH/bsp/pic32mz_wifire"
+endif
+
diff -ruN /home/mjb/microchip/harmony/v1_06_02/bsp/pic32mz_wifire/xml/bsp.xml /home/mjb/microchip/harmony/v1_06_02-wifire/bsp/pic32mz_wifire/xml/bsp.xml
--- /home/mjb/microchip/harmony/v1_06_02/bsp/pic32mz_wifire/xml/bsp.xml	1969-12-31 19:00:00.000000000 -0500
+++ /home/mjb/microchip/harmony/v1_06_02-wifire/bsp/pic32mz_wifire/xml/bsp.xml	2015-08-08 18:54:46.697151800 -0400
@@ -0,0 +1,10 @@
+<?xml version="1.0"?>
+<bsp name="pic32mz_ec_sk">
+    <function name="SWITCH_1" pin="RA4" direction="in" mode="digital" pullup="true"/>
+    <function name="SWITCH_2" pin="RA5" direction="in" mode="digital" pullup="true"/>
+	<function name="USB_VBUS_SWITCH" pin="RB0" direction="out" mode="digital"/>
+    <function name="LED_1" pin="RG6" direction="out" mode="digital"/>
+    <function name="LED_2" pin="RD4" direction="out" mode="digital"/>
+    <function name="LED_3" pin="RB11" direction="out" mode="digital"/>
+	<function name="LED_4" pin="RG15" direction="out" mode="digital"/>
+</bsp>
diff -ruN /home/mjb/microchip/harmony/v1_06_02/framework/driver/wifi/templates/drv_wifi.h.ftl /home/mjb/microchip/harmony/v1_06_02-wifire/framework/driver/wifi/templates/drv_wifi.h.ftl
--- /home/mjb/microchip/harmony/v1_06_02/framework/driver/wifi/templates/drv_wifi.h.ftl	2015-05-06 00:18:55.000000000 -0400
+++ /home/mjb/microchip/harmony/v1_06_02-wifire/framework/driver/wifi/templates/drv_wifi.h.ftl	2015-08-08 22:51:05.343401600 -0400
@@ -238,6 +238,35 @@
 #define WF_INT_SUBPRIORITY  1
 #define WF_INT_PORT_CHANNEL PORT_CHANNEL_E
 #define WF_INT_BIT_POS      8
+<#elseif CONFIG_BSP_PIC32MZ_WIFIRE == true>
+#define MRF_INT_SOURCE INT_SOURCE_EXTERNAL_4
+#define MRF_INT_VECTOR INT_VECTOR_INT4
+
+#define MRF24W_IN_SPI4
+#define MRF24W_USE_INT4_INT
+#define MRF24W_SPI_CHN 4
+
+// IO mapping for general control pins, inlcuding CS, RESET and HIBERNATE
+// MRF24W in SPI 4 slot
+#define WF_CS_TRIS         (TRISDbits.TRISD9)
+#define WF_CS_IO           (LATDbits.LATD9)
+#define WF_CS_PORT_CHANNEL PORT_CHANNEL_D
+#define WF_CS_BIT_POS      9
+
+#define WF_RESET_TRIS         (TRISFbits.TRISF4)
+#define WF_RESET_IO           (LATFbits.LATF4)
+#define WF_RESET_PORT_CHANNEL PORT_CHANNEL_F
+#define WF_RESET_BIT_POS      4
+
+#define WF_HIBERNATE_TRIS         (TRIGFbits.TRISG1)
+#define WF_HIBERNATE_IO           (PORTGbits.RG1)
+#define WF_HIBERNATE_PORT_CHANNEL PORT_CHANNEL_G
+#define WF_HIBERNATE_BIT_POS      1
+
+#define WF_INT_PRIORITY     3
+#define WF_INT_SUBPRIORITY  1
+#define WF_INT_PORT_CHANNEL PORT_CHANNEL_A
+#define WF_INT_BIT_POS      15
 </#if>
 
 <#if CONFIG_DRV_WIFI_NETWORK_TYPE == "Infrastructure">
Files /home/mjb/microchip/harmony/v1_06_02/uninstall.exe and /home/mjb/microchip/harmony/v1_06_02-wifire/uninstall.exe differ
